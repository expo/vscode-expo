name: test

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3

      - name: 🏗 Setup project
        uses: ./.github/actions/setup-project

      - name: ✅ Lint project
        run: npm run lint -- --max-warnings 0

  scripts:
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3

      - name: 🏗 Setup project
        uses: ./.github/actions/setup-project

      - name: ✅ Test scripts
        run: npm run test:scripts

  bundled:
    # This extension is bundled before publishing to the stores,
    # it removes the need for vscode to download dependencies, making install fast.
    # But this version might cause issues with webpack "hijacking" `require` statements.
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3

      - name: 🏗 Setup project
        uses: ./.github/actions/setup-project
        with:
          with-fixture: true

      - name: 👷 Build tests
        run: npm run build

      - name: 📦 Bundle extension
        run: npm run build:production

      # When bundled, these dependencies aren't available in normal environments.
      # This kind-of fakes such environments, while keeping the required dev packages.
      - name: 🧹 Remove bundled dependencies
        run: rm -rf node_modules/sucrase

      - name: 🧪 Test project
        run: xvfb-run -a npm run test:vscode
        env:
          VSCODE_VERSION: stable

  vscode:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos] # Windows is temporarily disabled due to issues on CI with previewing
        vscode: [oldest, stable]
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3

      - name: 🏗 Setup project
        uses: ./.github/actions/setup-project
        with:
          with-fixture: true

      - name: 👷 Build project
        run: npm run build

      # This handles the "oldest" vscode version by looking up our "oldest supported version"
      - name: 🕵️ Set vscode version
        uses: actions/github-script@v6
        with:
          script: |
            const { engines } = require('./package.json')
            const vscode = '${{ matrix.vscode }}'
            const target = vscode === 'oldest'
                ? engines.vscode.substring(1)
                : vscode
            core.exportVariable('VSCODE_VERSION', target)

      - name: 🧪 Test project (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: xvfb-run -a npm run test:vscode

      - name: 🧪 Test project (MacOS/Windows)
        if: ${{ runner.os != 'Linux' }}
        run: npm run test:vscode
