// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`vscodeSchema creates expected SDK 39 schema 1`] = `
Object {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "definitions": Object {
    "AndroidIntentFiltersData": Object {
      "additionalProperties": false,
      "properties": Object {
        "host": Object {
          "description": "the hostname, e.g. \`myapp.io\`",
          "markdownDescription": "the hostname, e.g. \`myapp.io\`",
          "type": "string",
        },
        "mimeType": Object {
          "description": "a MIME type for URLs that should be matched by the filter",
          "markdownDescription": "a MIME type for URLs that should be matched by the filter",
          "type": "string",
        },
        "path": Object {
          "description": "an exact path for URLs that should be matched by the filter, e.g. \`/records\`",
          "markdownDescription": "an exact path for URLs that should be matched by the filter, e.g. \`/records\`",
          "type": "string",
        },
        "pathPattern": Object {
          "description": " a regex for paths that should be matched by the filter, e.g. \`.*\`",
          "markdownDescription": " a regex for paths that should be matched by the filter, e.g. \`.*\`",
          "type": "string",
        },
        "pathPrefix": Object {
          "description": "a prefix for paths that should be matched by the filter, e.g. \`/records/\` will match \`/records/123\`",
          "markdownDescription": "a prefix for paths that should be matched by the filter, e.g. \`/records/\` will match \`/records/123\`",
          "type": "string",
        },
        "port": Object {
          "description": "the port, e.g. \`3000\`",
          "markdownDescription": "the port, e.g. \`3000\`",
          "type": "string",
        },
        "scheme": Object {
          "description": "the scheme of the URL, e.g. \`https\`",
          "markdownDescription": "the scheme of the URL, e.g. \`https\`",
          "type": "string",
        },
      },
      "type": "object",
    },
  },
  "description": "The Expo manifest (app.json) validation and documentation.",
  "properties": Object {
    "expo": Object {
      "additionalProperties": false,
      "properties": Object {
        "android": Object {
          "additionalProperties": false,
          "description": "Configuration that is specific to the Android platform.",
          "markdownDescription": "Configuration that is specific to the Android platform.",
          "meta": Object {
            "standaloneOnly": true,
          },
          "properties": Object {
            "adaptiveIcon": Object {
              "additionalProperties": false,
              "description": "Settings for an Adaptive Launcher Icon on Android. [Learn more](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)",
              "markdownDescription": "Settings for an Adaptive Launcher Icon on Android. [Learn more](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)",
              "properties": Object {
                "backgroundColor": Object {
                  "description": "Color to use as the background for your app's Adaptive Icon on Android. Defaults to white, \`#FFFFFF\`. Has no effect if \`foregroundImage\` is not specified.",
                  "markdownDescription": "Color to use as the background for your app's Adaptive Icon on Android. Defaults to white, \`#FFFFFF\`. Has no effect if \`foregroundImage\` is not specified.",
                  "meta": Object {
                    "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
                  },
                  "pattern": "^#|(&#x23;)\\\\d{6}$",
                  "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
                  "type": "string",
                },
                "backgroundImage": Object {
                  "description": "Local path or remote URL to a background image for your app's Adaptive Icon on Android. If specified, this overrides the \`backgroundColor\` key. Must have the same dimensions as  foregroundImage\`, and has no effect if \`foregroundImage\` is not specified. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive).",
                  "markdownDescription": "Local path or remote URL to a background image for your app's Adaptive Icon on Android. If specified, this overrides the \`backgroundColor\` key. Must have the same dimensions as  foregroundImage\`, and has no effect if \`foregroundImage\` is not specified. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive).",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                    "square": true,
                  },
                  "type": "string",
                },
                "foregroundImage": Object {
                  "description": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` and the \`android.icon\` keys. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive). This icon will appear on the home screen.",
                  "markdownDescription": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` and the \`android.icon\` keys. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive). This icon will appear on the home screen.",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                    "square": true,
                  },
                  "type": "string",
                },
              },
              "type": "object",
            },
            "allowBackup": Object {
              "description": "Allows your user's app data to be automatically backed up to their Google Drive. If this is set to false, no backup or restore of the application will ever be performed (this is useful if your app deals with sensitive information). Defaults to the Android default, which is \`true\`.",
              "fallback": true,
              "markdownDescription": "Allows your user's app data to be automatically backed up to their Google Drive. If this is set to false, no backup or restore of the application will ever be performed (this is useful if your app deals with sensitive information). Defaults to the Android default, which is \`true\`.",
              "type": "boolean",
            },
            "backgroundColor": Object {
              "description": "The background color for your Android app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.

**Bare workflow** - This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
              "markdownDescription": "The background color for your Android app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.

**Bare workflow** - This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
              "meta": Object {
                "bareWorkflow": "This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "config": Object {
              "additionalProperties": false,
              "description": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
              "markdownDescription": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
              "properties": Object {
                "branch": Object {
                  "additionalProperties": false,
                  "description": "[Branch](https://branch.io/) key to hook up Branch linking services.",
                  "markdownDescription": "[Branch](https://branch.io/) key to hook up Branch linking services.",
                  "properties": Object {
                    "apiKey": Object {
                      "description": "Your Branch API key",
                      "markdownDescription": "Your Branch API key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "googleMaps": Object {
                  "additionalProperties": false,
                  "description": "[Google Maps Android SDK](https://developers.google.com/maps/documentation/android-api/signup) configuration for your standalone app.",
                  "markdownDescription": "[Google Maps Android SDK](https://developers.google.com/maps/documentation/android-api/signup) configuration for your standalone app.",
                  "properties": Object {
                    "apiKey": Object {
                      "description": "Your Google Maps Android SDK API key",
                      "markdownDescription": "Your Google Maps Android SDK API key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "googleMobileAdsAppId": Object {
                  "description": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
                  "markdownDescription": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
                  "type": "string",
                },
                "googleMobileAdsAutoInit": Object {
                  "description": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Client and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
                  "fallback": false,
                  "markdownDescription": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Client and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
                  "type": "boolean",
                },
                "googleSignIn": Object {
                  "additionalProperties": false,
                  "deprecated": true,
                  "description": "@deprecated Use \`googleServicesFile\` instead. [Google Sign-In Android SDK](https://developers.google.com/identity/sign-in/android/start-integrating) keys for your standalone app.",
                  "markdownDescription": "@deprecated Use \`googleServicesFile\` instead. [Google Sign-In Android SDK](https://developers.google.com/identity/sign-in/android/start-integrating) keys for your standalone app.",
                  "meta": Object {
                    "deprecated": true,
                  },
                  "properties": Object {
                    "apiKey": Object {
                      "description": "The Android API key. Can be found in the credentials section of the developer console or in \`google-services.json\`.",
                      "markdownDescription": "The Android API key. Can be found in the credentials section of the developer console or in \`google-services.json\`.",
                      "type": "string",
                    },
                    "certificateHash": Object {
                      "description": "The SHA-1 hash of the signing certificate used to build the APK without any separator (\`:\`). Can be found in \`google-services.json\`. https://developers.google.com/android/guides/client-auth",
                      "markdownDescription": "The SHA-1 hash of the signing certificate used to build the APK without any separator (\`:\`). Can be found in \`google-services.json\`. https://developers.google.com/android/guides/client-auth",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "type": "object",
            },
            "enableDangerousExperimentalLeanBuilds": Object {
              "description": "If set to true, APK will contain only unimodules that are explicitly added in package.json and their dependecies",
              "markdownDescription": "If set to true, APK will contain only unimodules that are explicitly added in package.json and their dependecies",
              "type": "boolean",
            },
            "googleServicesFile": Object {
              "bareWorkflow": "Add or edit the file directly at \`android/app/google-services.json\`",
              "description": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase. Including this key automatically enables FCM in your standalone app.",
              "markdownDescription": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase. Including this key automatically enables FCM in your standalone app.",
              "type": "string",
            },
            "icon": Object {
              "description": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` key. We recommend that you use a 1024x1024 png file (transparency is recommended for the Google Play Store). This icon will appear on the home screen and within the Expo app.",
              "markdownDescription": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` key. We recommend that you use a 1024x1024 png file (transparency is recommended for the Google Play Store). This icon will appear on the home screen and within the Expo app.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
            "intentFilters": Object {
              "description": "Configuration for setting an array of custom intent filters in Android manifest. [Learn more](https://developer.android.com/guide/components/intents-filters)

**Bare workflow** - This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
              "example": Array [
                Object {
                  "action": "VIEW",
                  "autoVerify": true,
                  "category": Array [
                    "BROWSABLE",
                    "DEFAULT",
                  ],
                  "data": Object {
                    "host": "*.expo.io",
                    "scheme": "https",
                  },
                },
              ],
              "exampleString": "
 [{ 
 \\"autoVerify\\": true, 
 \\"action\\": \\"VIEW\\", 
 \\"data\\": { 
 \\"scheme\\": \\"https\\", 
 \\"host\\": \\"*.expo.io\\" 
 }, 
 \\"category\\": [\\"BROWSABLE\\", \\"DEFAULT\\"] 
 }]",
              "items": Object {
                "additionalProperties": false,
                "properties": Object {
                  "action": Object {
                    "type": "string",
                  },
                  "autoVerify": Object {
                    "description": "You may also use an intent filter to set your app as the default handler for links (without showing the user a dialog with options). To do so use \`true\` and then configure your server to serve a JSON file verifying that you own the domain. [Learn more](https://developer.android.com/training/app-links)",
                    "markdownDescription": "You may also use an intent filter to set your app as the default handler for links (without showing the user a dialog with options). To do so use \`true\` and then configure your server to serve a JSON file verifying that you own the domain. [Learn more](https://developer.android.com/training/app-links)",
                    "type": "boolean",
                  },
                  "category": Object {
                    "anyOf": Array [
                      Object {
                        "type": Array [
                          "string",
                        ],
                      },
                      Object {
                        "items": Object {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                  "data": Object {
                    "anyOf": Array [
                      Object {
                        "$ref": "#/definitions/AndroidIntentFiltersData",
                      },
                      Object {
                        "items": Object {
                          "$ref": "#/definitions/AndroidIntentFiltersData",
                        },
                        "type": Array [
                          "array",
                        ],
                      },
                    ],
                  },
                },
                "required": Array [
                  "action",
                ],
                "type": "object",
              },
              "markdownDescription": "Configuration for setting an array of custom intent filters in Android manifest. [Learn more](https://developer.android.com/guide/components/intents-filters)

**Bare workflow** - This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
              "meta": Object {
                "bareWorkflow": "This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
              },
              "type": "array",
              "uniqueItems": true,
            },
            "package": Object {
              "description": "The package name for your Android standalone app. You make it up, but it needs to be unique on the Play Store. See [this StackOverflow question](http://stackoverflow.com/questions/6273892/android-package-name-convention).

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
              "markdownDescription": "The package name for your Android standalone app. You make it up, but it needs to be unique on the Play Store. See [this StackOverflow question](http://stackoverflow.com/questions/6273892/android-package-name-convention).

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
              "meta": Object {
                "bareWorkflow": "This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
                "regexHuman": "Reverse DNS notation unique name for your app. Valid Android Application ID. For example, \`com.example.app\`, where \`com.example\` is our domain and \`app\` is our app. The name may only contain lowercase and uppercase letters (a-z, A-Z), numbers (0-9) and underscores (_), separated by periods (.). Each component of the name should start with a lowercase letter.",
              },
              "pattern": "^[a-zA-Z][a-zA-Z0-9\\\\_]*(\\\\.[a-zA-Z][a-zA-Z0-9\\\\_]*)+$",
              "patternErrorMessage": "Reverse DNS notation unique name for your app. Valid Android Application ID. For example, \`com.example.app\`, where \`com.example\` is our domain and \`app\` is our app. The name may only contain lowercase and uppercase letters (a-z, A-Z), numbers (0-9) and underscores (_), separated by periods (.). Each component of the name should start with a lowercase letter.",
              "type": "string",
            },
            "permissions": Object {
              "bareWorkflow": "To change the permissions your app requests, you'll need to edit \`AndroidManifest.xml\` manually. To prevent your app from requesting one of the permissions listed below, you'll need to explicitly add it to \`AndroidManifest.xml\` along with a \`tools:node=\\"remove\\"\` tag.",
              "description": "List of permissions used by the standalone app. 

 To use ONLY the following minimum necessary permissions and none of the extras supported by Expo in a default managed app, set \`permissions\` to \`[]\`. The minimum necessary permissions do not require a Privacy Policy when uploading to Google Play Store and are: 
• receive data from Internet 
• view network connections 
• full network access 
• change your audio settings 
• prevent device from sleeping 

 To use ALL permissions supported by Expo by default, do not specify the \`permissions\` key. 

  To use the minimum necessary permissions ALONG with certain additional permissions, specify those extras in \`permissions\`, e.g.

 \`[ \\"CAMERA\\", \\"ACCESS_FINE_LOCATION\\" ]\`.

  You can specify the following permissions depending on what you need:

- \`ACCESS_COARSE_LOCATION\`
- \`ACCESS_FINE_LOCATION\`
- \`ACCESS_BACKGROUND_LOCATION\`
- \`CAMERA\`
- \`RECORD_AUDIO\`
- \`READ_CONTACTS\`
- \`WRITE_CONTACTS\`
- \`READ_CALENDAR\`
- \`WRITE_CALENDAR\`
- \`READ_EXTERNAL_STORAGE\`
- \`WRITE_EXTERNAL_STORAGE\`
- \`USE_FINGERPRINT\`
- \`USE_BIOMETRIC\`
- \`WRITE_SETTINGS\`
- \`VIBRATE\`
- \`READ_PHONE_STATE\`
- \`com.anddoes.launcher.permission.UPDATE_COUNT\`
- \`com.android.launcher.permission.INSTALL_SHORTCUT\`
- \`com.google.android.c2dm.permission.RECEIVE\`
- \`com.google.android.gms.permission.ACTIVITY_RECOGNITION\`
- \`com.google.android.providers.gsf.permission.READ_GSERVICES\`
- \`com.htc.launcher.permission.READ_SETTINGS\`
- \`com.htc.launcher.permission.UPDATE_SHORTCUT\`
- \`com.majeur.launcher.permission.UPDATE_BADGE\`
- \`com.sec.android.provider.badge.permission.READ\`
- \`com.sec.android.provider.badge.permission.WRITE\`
- \`com.sonyericsson.home.permission.BROADCAST_BADGE\`
",
              "items": Object {
                "type": "string",
              },
              "markdownDescription": "List of permissions used by the standalone app. 

 To use ONLY the following minimum necessary permissions and none of the extras supported by Expo in a default managed app, set \`permissions\` to \`[]\`. The minimum necessary permissions do not require a Privacy Policy when uploading to Google Play Store and are: 
• receive data from Internet 
• view network connections 
• full network access 
• change your audio settings 
• prevent device from sleeping 

 To use ALL permissions supported by Expo by default, do not specify the \`permissions\` key. 

  To use the minimum necessary permissions ALONG with certain additional permissions, specify those extras in \`permissions\`, e.g.

 \`[ \\"CAMERA\\", \\"ACCESS_FINE_LOCATION\\" ]\`.

  You can specify the following permissions depending on what you need:

- \`ACCESS_COARSE_LOCATION\`
- \`ACCESS_FINE_LOCATION\`
- \`ACCESS_BACKGROUND_LOCATION\`
- \`CAMERA\`
- \`RECORD_AUDIO\`
- \`READ_CONTACTS\`
- \`WRITE_CONTACTS\`
- \`READ_CALENDAR\`
- \`WRITE_CALENDAR\`
- \`READ_EXTERNAL_STORAGE\`
- \`WRITE_EXTERNAL_STORAGE\`
- \`USE_FINGERPRINT\`
- \`USE_BIOMETRIC\`
- \`WRITE_SETTINGS\`
- \`VIBRATE\`
- \`READ_PHONE_STATE\`
- \`com.anddoes.launcher.permission.UPDATE_COUNT\`
- \`com.android.launcher.permission.INSTALL_SHORTCUT\`
- \`com.google.android.c2dm.permission.RECEIVE\`
- \`com.google.android.gms.permission.ACTIVITY_RECOGNITION\`
- \`com.google.android.providers.gsf.permission.READ_GSERVICES\`
- \`com.htc.launcher.permission.READ_SETTINGS\`
- \`com.htc.launcher.permission.UPDATE_SHORTCUT\`
- \`com.majeur.launcher.permission.UPDATE_BADGE\`
- \`com.sec.android.provider.badge.permission.READ\`
- \`com.sec.android.provider.badge.permission.WRITE\`
- \`com.sonyericsson.home.permission.BROADCAST_BADGE\`
",
              "type": "array",
            },
            "playStoreUrl": Object {
              "description": "URL to your app on the Google Play Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
              "example": "https://play.google.com/store/apps/details?id=host.exp.exponent",
              "markdownDescription": "URL to your app on the Google Play Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
              "pattern": "^https://play\\\\.google\\\\.com/",
              "type": Array [
                "string",
              ],
            },
            "softwareKeyboardLayoutMode": Object {
              "description": "Determines how the software keyboard will impact the layout of your application. This maps to the \`android:windowSoftInputMode\` property. Defaults to \`resize\`. Valid values: \`resize\`, \`pan\`.",
              "enum": Array [
                "resize",
                "pan",
              ],
              "fallback": "resize",
              "markdownDescription": "Determines how the software keyboard will impact the layout of your application. This maps to the \`android:windowSoftInputMode\` property. Defaults to \`resize\`. Valid values: \`resize\`, \`pan\`.",
              "type": "string",
            },
            "splash": Object {
              "description": "Configuration for loading and splash screen for managed and standalone Android apps.",
              "markdownDescription": "Configuration for loading and splash screen for managed and standalone Android apps.",
              "properties": Object {
                "backgroundColor": Object {
                  "description": "Color to fill the loading screen background",
                  "markdownDescription": "Color to fill the loading screen background",
                  "meta": Object {
                    "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
                  },
                  "pattern": "^#|(&#x23;)\\\\d{6}$",
                  "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
                  "type": "string",
                },
                "hdpi": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 1.5x\`",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 1.5x\`",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
                "image": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
                "mdpi": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Natural sized image (baseline)\`",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Natural sized image (baseline)\`",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
                "resizeMode": Object {
                  "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\`, \`contain\` or \`native\`, defaults to \`contain\`.",
                  "enum": Array [
                    "cover",
                    "contain",
                    "native",
                  ],
                  "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\`, \`contain\` or \`native\`, defaults to \`contain\`.",
                  "type": "string",
                },
                "xhdpi": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 2x\`",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 2x\`",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
                "xxhdpi": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 3x\`",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 3x\`",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
                "xxxhdpi": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 4x\`",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 4x\`",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
              },
              "type": "object",
            },
            "useNextNotificationsApi": Object {
              "description": "A Boolean value that indicates whether the app should use the new notifications API.",
              "fallback": false,
              "markdownDescription": "A Boolean value that indicates whether the app should use the new notifications API.",
              "type": "boolean",
            },
            "userInterfaceStyle": Object {
              "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
              "enum": Array [
                "light",
                "dark",
                "automatic",
              ],
              "fallback": "light",
              "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
              "type": "string",
            },
            "versionCode": Object {
              "description": "Version number required by Google Play. Increment by one for each release. Must be a positive integer. [Learn more](https://developer.android.com/studio/publish/versioning.html)

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`versionCode\`",
              "markdownDescription": "Version number required by Google Play. Increment by one for each release. Must be a positive integer. [Learn more](https://developer.android.com/studio/publish/versioning.html)

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`versionCode\`",
              "maximum": 2100000000,
              "meta": Object {
                "bareWorkflow": "This is set in \`android/app/build.gradle\` as \`versionCode\`",
              },
              "minimum": 0,
              "type": "integer",
            },
          },
          "type": "object",
        },
        "androidNavigationBar": Object {
          "additionalProperties": false,
          "description": "Configuration for the bottom navigation bar on Android.",
          "markdownDescription": "Configuration for the bottom navigation bar on Android.",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Specifies the background color of the navigation bar.",
              "markdownDescription": "Specifies the background color of the navigation bar.",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "barStyle": Object {
              "description": "Configure the navigation bar icons to have a light or dark color. Supported on Android Oreo and newer. Valid values: \`'light-content'\`, \`'dark-content'\`",
              "enum": Array [
                "light-content",
                "dark-content",
              ],
              "markdownDescription": "Configure the navigation bar icons to have a light or dark color. Supported on Android Oreo and newer. Valid values: \`'light-content'\`, \`'dark-content'\`",
              "type": "string",
            },
            "visible": Object {
              "description": "Determines how and when the navigation bar is shown. [Learn more](https://developer.android.com/training/system-ui/immersive). Valid values: \`leanback\`, \`immersive\`, \`sticky-immersive\` 

 \`leanback\` results in the navigation bar being hidden until the first touch gesture is registered. 

 \`immersive\` results in the navigation bar being hidden until the user swipes up from the edge where the navigation bar is hidden. 

 \`sticky-immersive\` is identical to \`'immersive'\` except that the navigation bar will be semi-transparent and will be hidden again after a short period of time",
              "enum": Array [
                "leanback",
                "immersive",
                "sticky-immersive",
              ],
              "markdownDescription": "Determines how and when the navigation bar is shown. [Learn more](https://developer.android.com/training/system-ui/immersive). Valid values: \`leanback\`, \`immersive\`, \`sticky-immersive\` 

 \`leanback\` results in the navigation bar being hidden until the first touch gesture is registered. 

 \`immersive\` results in the navigation bar being hidden until the user swipes up from the edge where the navigation bar is hidden. 

 \`sticky-immersive\` is identical to \`'immersive'\` except that the navigation bar will be semi-transparent and will be hidden again after a short period of time",
              "type": "string",
            },
          },
          "type": "object",
        },
        "androidShowExponentNotificationInShellApp": Object {
          "description": "Adds a notification to your standalone app with refresh button and debug info.",
          "markdownDescription": "Adds a notification to your standalone app with refresh button and debug info.",
          "type": "boolean",
        },
        "androidStatusBar": Object {
          "additionalProperties": false,
          "description": "Configuration for the status bar on Android. For more details please navigate to [Configuring StatusBar](https://docs.expo.io/guides/configuring-statusbar/).",
          "markdownDescription": "Configuration for the status bar on Android. For more details please navigate to [Configuring StatusBar](https://docs.expo.io/guides/configuring-statusbar/).",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Specifies the background color of the status bar. Defaults to \`#00000000\` (transparent) for \`dark-content\` bar style and \`#00000088\` (semi-transparent black) for \`light-content\` bar style",
              "markdownDescription": "Specifies the background color of the status bar. Defaults to \`#00000000\` (transparent) for \`dark-content\` bar style and \`#00000088\` (semi-transparent black) for \`light-content\` bar style",
              "meta": Object {
                "regexHuman": "6 character long hex color string \`'#RRGGBB'\`, for example, \`'#000000'\` for black. Or 8 character long hex color string \`'#RRGGBBAA'\`, for example, \`'#00000088'\` for semi-transparent black.",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string \`'#RRGGBB'\`, for example, \`'#000000'\` for black. Or 8 character long hex color string \`'#RRGGBBAA'\`, for example, \`'#00000088'\` for semi-transparent black.",
              "type": "string",
            },
            "barStyle": Object {
              "description": "Configures the status bar icons to have a light or dark color. Valid values: \`light-content\`, \`dark-content\`. Defaults to \`dark-content\`",
              "enum": Array [
                "light-content",
                "dark-content",
              ],
              "markdownDescription": "Configures the status bar icons to have a light or dark color. Valid values: \`light-content\`, \`dark-content\`. Defaults to \`dark-content\`",
              "type": "string",
            },
            "hidden": Object {
              "description": "Instructs the system whether the status bar should be visible or not. Defaults to \`false\`",
              "markdownDescription": "Instructs the system whether the status bar should be visible or not. Defaults to \`false\`",
              "type": "boolean",
            },
            "translucent": Object {
              "description": "Sets \`android:windowTranslucentStatus\` in \`styles.xml\`. When false, the system status bar pushes the content of your app down (similar to \`position: relative\`). When true, the status bar floats above the content in your app (similar to \`position: absolute\`). Defaults to \`true\` to match the iOS status bar behavior (which can only float above content).",
              "markdownDescription": "Sets \`android:windowTranslucentStatus\` in \`styles.xml\`. When false, the system status bar pushes the content of your app down (similar to \`position: relative\`). When true, the status bar floats above the content in your app (similar to \`position: absolute\`). Defaults to \`true\` to match the iOS status bar behavior (which can only float above content).",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "androidStatusBarColor": Object {
          "description": "@deprecated Use \`androidStatusBar\` instead.",
          "markdownDescription": "@deprecated Use \`androidStatusBar\` instead.",
          "meta": Object {
            "deprecated": true,
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "appKey": Object {
          "description": "By default, Expo looks for the application registered with the AppRegistry as \`main\`. If you would like to change this, you can specify the name in this property.",
          "markdownDescription": "By default, Expo looks for the application registered with the AppRegistry as \`main\`. If you would like to change this, you can specify the name in this property.",
          "type": "string",
        },
        "assetBundlePatterns": Object {
          "description": "An array of file glob strings which point to assets that will be bundled within your standalone app binary. Read more in the [Offline Support guide](https://docs.expo.io/guides/offline-support/)",
          "items": Object {
            "type": "string",
          },
          "markdownDescription": "An array of file glob strings which point to assets that will be bundled within your standalone app binary. Read more in the [Offline Support guide](https://docs.expo.io/guides/offline-support/)",
          "type": "array",
        },
        "backgroundColor": Object {
          "description": "The background color for your app, behind any of your React views. This is also known as the root view background color.",
          "markdownDescription": "The background color for your app, behind any of your React views. This is also known as the root view background color.",
          "meta": Object {
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`. Default is white: \`'#ffffff'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`. Default is white: \`'#ffffff'\`",
          "type": "string",
        },
        "currentFullName": Object {
          "autogenerated": true,
          "description": "The auto generated Expo account name and slug used for display purposes. Formatted like \`@username/slug\`. When unauthenticated, the username is \`@anonymous\`. For published projects, this value may change when a project is transferred between accounts or renamed.",
          "markdownDescription": "The auto generated Expo account name and slug used for display purposes. Formatted like \`@username/slug\`. When unauthenticated, the username is \`@anonymous\`. For published projects, this value may change when a project is transferred between accounts or renamed.",
          "type": "string",
        },
        "description": Object {
          "description": "A short description of what your app is and why it is great.",
          "markdownDescription": "A short description of what your app is and why it is great.",
          "type": "string",
        },
        "developmentClient": Object {
          "additionalProperties": false,
          "description": "Settings that apply specifically to running this app in a development client",
          "markdownDescription": "Settings that apply specifically to running this app in a development client",
          "properties": Object {
            "silentLaunch": Object {
              "description": "If true, the app will launch in a development client with no additional dialogs or progress indicators, just like in a standalone app.",
              "fallback": false,
              "markdownDescription": "If true, the app will launch in a development client with no additional dialogs or progress indicators, just like in a standalone app.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "entryPoint": Object {
          "description": "The relative path to your main JavaScript file.",
          "markdownDescription": "The relative path to your main JavaScript file.",
          "type": "string",
        },
        "experiments": Object {
          "additionalProperties": false,
          "description": "Enable experimental features that may be unstable, unsupported, or removed without deprecation notices.",
          "markdownDescription": "Enable experimental features that may be unstable, unsupported, or removed without deprecation notices.",
          "properties": Object {
            "turboModules": Object {
              "description": "Enables Turbo Modules, which are a type of native modules that use a different way of communicating between JS and platform code. When installing a Turbo Module you will need to enable this experimental option (the library still needs to be a part of Expo SDK already, like react-native-reanimated v2). Turbo Modules do not support remote debugging and enabling this option will disable remote debugging.",
              "fallback": false,
              "markdownDescription": "Enables Turbo Modules, which are a type of native modules that use a different way of communicating between JS and platform code. When installing a Turbo Module you will need to enable this experimental option (the library still needs to be a part of Expo SDK already, like react-native-reanimated v2). Turbo Modules do not support remote debugging and enabling this option will disable remote debugging.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "extra": Object {
          "additionalProperties": true,
          "description": "Any extra fields you want to pass to your experience. Values are accessible via \`Expo.Constants.manifest.extra\` ([Learn more](https://docs.expo.io/versions/latest/sdk/constants/#constantsmanifest))",
          "markdownDescription": "Any extra fields you want to pass to your experience. Values are accessible via \`Expo.Constants.manifest.extra\` ([Learn more](https://docs.expo.io/versions/latest/sdk/constants/#constantsmanifest))",
          "properties": Object {},
          "type": "object",
        },
        "facebookAdvertiserIDCollectionEnabled": Object {
          "description": "Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA and Android Advertising ID, automatically. If you don't set this property, Facebook's default policy will be used. (Applicable only to standalone apps.)

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA and Android Advertising ID, automatically. If you don't set this property, Facebook's default policy will be used. (Applicable only to standalone apps.)

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "boolean",
        },
        "facebookAppId": Object {
          "description": "Used for all Facebook libraries. Set up your Facebook App ID at https://developers.facebook.com.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for all Facebook libraries. Set up your Facebook App ID at https://developers.facebook.com.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "pattern": "^[0-9]+$",
          "type": "string",
        },
        "facebookAutoInitEnabled": Object {
          "description": "Whether the Facebook SDK should be initialized automatically. The default in Expo (Client and in standalone apps) is \`false\`.",
          "markdownDescription": "Whether the Facebook SDK should be initialized automatically. The default in Expo (Client and in standalone apps) is \`false\`.",
          "type": "boolean",
        },
        "facebookAutoLogAppEventsEnabled": Object {
          "description": "Whether the Facebook SDK log app events automatically. If you don't set this property, Facebook's default will be used. (Applicable only to standalone apps.) Note: The Facebook SDK must be initialized for app events to work. You may autoinitialize Facebook SDK by setting \`facebookAutoInitEnabled\` to \`true\`

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Whether the Facebook SDK log app events automatically. If you don't set this property, Facebook's default will be used. (Applicable only to standalone apps.) Note: The Facebook SDK must be initialized for app events to work. You may autoinitialize Facebook SDK by setting \`facebookAutoInitEnabled\` to \`true\`

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "boolean",
        },
        "facebookDisplayName": Object {
          "description": "Used for native Facebook login.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for native Facebook login.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "string",
        },
        "facebookScheme": Object {
          "description": "Used for Facebook native login. Starts with 'fb' and followed by a string of digits, like 'fb1234567890'. You can find your scheme [here](https://developers.facebook.com/docs/facebook-login/ios)in the 'Configuring Your info.plist' section (only applicable to standalone apps and custom Expo clients).

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for Facebook native login. Starts with 'fb' and followed by a string of digits, like 'fb1234567890'. You can find your scheme [here](https://developers.facebook.com/docs/facebook-login/ios)in the 'Configuring Your info.plist' section (only applicable to standalone apps and custom Expo clients).

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "pattern": "^fb[0-9]+[A-Za-z]*$",
          "type": "string",
        },
        "githubUrl": Object {
          "description": "If you would like to share the source code of your app on Github, enter the URL for the repository here and it will be linked to from your Expo project page.",
          "example": "https://github.com/expo/expo",
          "markdownDescription": "If you would like to share the source code of your app on Github, enter the URL for the repository here and it will be linked to from your Expo project page.",
          "pattern": "^https://github\\\\.com/",
          "type": Array [
            "string",
          ],
        },
        "hooks": Object {
          "additionalProperties": false,
          "description": "Configuration for scripts to run to hook into the publish process",
          "markdownDescription": "Configuration for scripts to run to hook into the publish process",
          "properties": Object {
            "postExport": Object {
              "items": Object {
                "additionalProperties": true,
                "properties": Object {
                  "config": Object {
                    "additionalProperties": true,
                    "properties": Object {},
                    "type": "object",
                  },
                  "file": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "type": "array",
            },
            "postPublish": Object {
              "items": Object {
                "additionalProperties": true,
                "properties": Object {
                  "config": Object {
                    "additionalProperties": true,
                    "properties": Object {},
                    "type": "object",
                  },
                  "file": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "type": "array",
            },
          },
          "type": "object",
        },
        "icon": Object {
          "description": "Local path or remote URL to an image to use for your app's icon. We recommend that you use a 1024x1024 png file. This icon will appear on the home screen and within the Expo app.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
          "markdownDescription": "Local path or remote URL to an image to use for your app's icon. We recommend that you use a 1024x1024 png file. This icon will appear on the home screen and within the Expo app.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
          "meta": Object {
            "asset": true,
            "bareWorkflow": "To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
            "square": true,
          },
          "type": "string",
        },
        "ignoreNodeModulesValidation": Object {
          "type": "boolean",
        },
        "ios": Object {
          "additionalProperties": false,
          "description": "Configuration that is specific to the iOS platform.",
          "markdownDescription": "Configuration that is specific to the iOS platform.",
          "meta": Object {
            "standaloneOnly": true,
          },
          "properties": Object {
            "accessesContactNotes": Object {
              "description": "A Boolean value that indicates whether the app may access the notes stored in contacts. You must [receive permission from Apple](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_contacts_notes) before you can submit your app for review with this capability.",
              "fallback": false,
              "markdownDescription": "A Boolean value that indicates whether the app may access the notes stored in contacts. You must [receive permission from Apple](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_contacts_notes) before you can submit your app for review with this capability.",
              "type": "boolean",
            },
            "appStoreUrl": Object {
              "description": "URL to your app on the Apple App Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
              "example": "https://apps.apple.com/us/app/expo-client/id982107779",
              "markdownDescription": "URL to your app on the Apple App Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
              "pattern": "^https://(itunes|apps)\\\\.apple\\\\.com/.*?\\\\d+",
              "type": Array [
                "string",
              ],
            },
            "associatedDomains": Object {
              "description": "An array that contains Associated Domains for the standalone app. See [Apple's docs for config](https://developer.apple.com/documentation/uikit/core_app/allowing_apps_and_websites_to_link_to_your_content/enabling_universal_links). 

**Bare workflow** - Use Xcode to set this. See [Apple's documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/enabling_universal_links) for details.",
              "items": Object {
                "type": "string",
              },
              "markdownDescription": "An array that contains Associated Domains for the standalone app. See [Apple's docs for config](https://developer.apple.com/documentation/uikit/core_app/allowing_apps_and_websites_to_link_to_your_content/enabling_universal_links). 

**Bare workflow** - Use Xcode to set this. See [Apple's documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/enabling_universal_links) for details.",
              "meta": Object {
                "bareWorkflow": "Use Xcode to set this. See [Apple's documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/enabling_universal_links) for details.",
                "regexHuman": "Entries must follow the format \`applinks:<fully qualified domain>[:port number]\`. See [Apple's docs for details](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_associated-domains)",
              },
              "type": "array",
              "uniqueItems": true,
            },
            "backgroundColor": Object {
              "description": "The background color for your iOS app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.",
              "markdownDescription": "The background color for your iOS app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "buildNumber": Object {
              "description": "Build number for your iOS standalone app. Corresponds to \`CFBundleVersion\` and must match Apple's [specified format](https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102364). (Note: Transporter will pull the value for \`Version Number\` from \`expo.version\` and NOT from \`expo.ios.buildNumber\`.)

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleVersion\`",
              "markdownDescription": "Build number for your iOS standalone app. Corresponds to \`CFBundleVersion\` and must match Apple's [specified format](https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102364). (Note: Transporter will pull the value for \`Version Number\` from \`expo.version\` and NOT from \`expo.ios.buildNumber\`.)

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleVersion\`",
              "meta": Object {
                "bareWorkflow": "Set this value in \`info.plist\` under \`CFBundleVersion\`",
              },
              "pattern": "^[A-Za-z0-9\\\\.]+$",
              "type": "string",
            },
            "bundleIdentifier": Object {
              "description": "The bundle identifier for your iOS standalone app. You make it up, but it needs to be unique on the App Store. See [this StackOverflow question](http://stackoverflow.com/questions/11347470/what-does-bundle-identifier-mean-in-the-ios-project).

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
              "markdownDescription": "The bundle identifier for your iOS standalone app. You make it up, but it needs to be unique on the App Store. See [this StackOverflow question](http://stackoverflow.com/questions/11347470/what-does-bundle-identifier-mean-in-the-ios-project).

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
              "meta": Object {
                "bareWorkflow": "Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
                "regexHuman": "iOS bundle identifier notation unique name for your app. For example, \`host.exp.expo\`, where \`exp.host\` is our domain and \`expo\` is our app name.",
              },
              "pattern": "^[a-zA-Z0-9.-]+$",
              "patternErrorMessage": "iOS bundle identifier notation unique name for your app. For example, \`host.exp.expo\`, where \`exp.host\` is our domain and \`expo\` is our app name.",
              "type": "string",
            },
            "config": Object {
              "additionalProperties": false,
              "description": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
              "markdownDescription": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
              "properties": Object {
                "branch": Object {
                  "additionalProperties": false,
                  "description": "[Branch](https://branch.io/) key to hook up Branch linking services.",
                  "markdownDescription": "[Branch](https://branch.io/) key to hook up Branch linking services.",
                  "properties": Object {
                    "apiKey": Object {
                      "description": "Your Branch API key",
                      "markdownDescription": "Your Branch API key",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "googleMapsApiKey": Object {
                  "description": "[Google Maps iOS SDK](https://developers.google.com/maps/documentation/ios-sdk/start) key for your standalone app.",
                  "markdownDescription": "[Google Maps iOS SDK](https://developers.google.com/maps/documentation/ios-sdk/start) key for your standalone app.",
                  "type": "string",
                },
                "googleMobileAdsAppId": Object {
                  "description": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
                  "markdownDescription": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
                  "type": "string",
                },
                "googleMobileAdsAutoInit": Object {
                  "description": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Client and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`.](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
                  "fallback": false,
                  "markdownDescription": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Client and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`.](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
                  "type": "boolean",
                },
                "googleSignIn": Object {
                  "additionalProperties": false,
                  "description": "[Google Sign-In iOS SDK](https://developers.google.com/identity/sign-in/ios/start-integrating) keys for your standalone app.",
                  "markdownDescription": "[Google Sign-In iOS SDK](https://developers.google.com/identity/sign-in/ios/start-integrating) keys for your standalone app.",
                  "properties": Object {
                    "reservedClientId": Object {
                      "description": "The reserved client ID URL scheme. Can be found in \`GoogleService-Info.plist\`.",
                      "markdownDescription": "The reserved client ID URL scheme. Can be found in \`GoogleService-Info.plist\`.",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "usesNonExemptEncryption": Object {
                  "description": "Sets \`ITSAppUsesNonExemptEncryption\` in the standalone ipa's Info.plist to the given boolean value.",
                  "markdownDescription": "Sets \`ITSAppUsesNonExemptEncryption\` in the standalone ipa's Info.plist to the given boolean value.",
                  "type": "boolean",
                },
              },
              "type": "object",
            },
            "googleServicesFile": Object {
              "description": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase.",
              "markdownDescription": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase.",
              "type": "string",
            },
            "icon": Object {
              "description": "Local path or remote URL to an image to use for your app's icon on iOS. If specified, this overrides the top-level \`icon\` key. Use a 1024x1024 icon which follows Apple's interface guidelines for icons, including color profile and transparency. 

 Expo will generate the other required sizes. This icon will appear on the home screen and within the Expo app.",
              "markdownDescription": "Local path or remote URL to an image to use for your app's icon on iOS. If specified, this overrides the top-level \`icon\` key. Use a 1024x1024 icon which follows Apple's interface guidelines for icons, including color profile and transparency. 

 Expo will generate the other required sizes. This icon will appear on the home screen and within the Expo app.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
            "infoPlist": Object {
              "additionalProperties": true,
              "description": "Dictionary of arbitrary configuration to add to your standalone app's native Info.plist. Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
              "markdownDescription": "Dictionary of arbitrary configuration to add to your standalone app's native Info.plist. Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
              "properties": Object {},
              "type": "object",
            },
            "isRemoteJSEnabled": Object {
              "description": "@deprecated Use \`updates.enabled\` instead.",
              "markdownDescription": "@deprecated Use \`updates.enabled\` instead.",
              "meta": Object {
                "deprecated": true,
              },
              "type": "boolean",
            },
            "isTabletOnly": Object {
              "description": "If true, indicates that your standalone iOS app does not support handsets, and only supports tablets.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
              "markdownDescription": "If true, indicates that your standalone iOS app does not support handsets, and only supports tablets.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
              "meta": Object {
                "bareWorkflow": "Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
              },
              "type": "boolean",
            },
            "loadJSInBackgroundExperimental": Object {
              "description": "@deprecated Use \`updates\` key with \`fallbackToCacheTimeout: 0\` instead.",
              "markdownDescription": "@deprecated Use \`updates\` key with \`fallbackToCacheTimeout: 0\` instead.",
              "meta": Object {
                "deprecated": true,
              },
              "type": "boolean",
            },
            "merchantId": Object {
              "description": "Merchant ID for use with Apple Pay in your standalone app.",
              "markdownDescription": "Merchant ID for use with Apple Pay in your standalone app.",
              "type": "string",
            },
            "requireFullScreen": Object {
              "description": "If true, indicates that your standalone iOS app does not support Slide Over and Split View on iPad. Defaults to \`true\` currently, but will change to \`false\` in a future SDK version.

**Bare workflow** - Use Xcode to set \`UIRequiresFullScreen\`",
              "markdownDescription": "If true, indicates that your standalone iOS app does not support Slide Over and Split View on iPad. Defaults to \`true\` currently, but will change to \`false\` in a future SDK version.

**Bare workflow** - Use Xcode to set \`UIRequiresFullScreen\`",
              "meta": Object {
                "bareWorkflow": "Use Xcode to set \`UIRequiresFullScreen\`",
              },
              "type": "boolean",
            },
            "splash": Object {
              "description": "Configuration for loading and splash screen for standalone iOS apps.",
              "markdownDescription": "Configuration for loading and splash screen for standalone iOS apps.",
              "properties": Object {
                "backgroundColor": Object {
                  "description": "Color to fill the loading screen background",
                  "markdownDescription": "Color to fill the loading screen background",
                  "meta": Object {
                    "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
                  },
                  "pattern": "^#|(&#x23;)\\\\d{6}$",
                  "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
                  "type": "string",
                },
                "image": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
                "resizeMode": Object {
                  "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
                  "enum": Array [
                    "cover",
                    "contain",
                  ],
                  "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
                  "type": "string",
                },
                "tabletImage": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
                "userInterfaceStyle": Object {
                  "description": "Supported user interface styles. If left blank, \`light\` will be used. Use \`automatic\` if you would like to support either \`light\` or \`dark\` depending on iOS settings.",
                  "enum": Array [
                    "light",
                    "dark",
                    "automatic",
                  ],
                  "fallback": "light",
                  "markdownDescription": "Supported user interface styles. If left blank, \`light\` will be used. Use \`automatic\` if you would like to support either \`light\` or \`dark\` depending on iOS settings.",
                  "type": "string",
                },
                "xib": Object {
                  "description": "Local path to a XIB file as the loading screen. It overrides other loading screen options. Note: This will only be used in the standalone app (i.e., after you build the app). It will not be used in the Expo client.",
                  "markdownDescription": "Local path to a XIB file as the loading screen. It overrides other loading screen options. Note: This will only be used in the standalone app (i.e., after you build the app). It will not be used in the Expo client.",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".xib interface builder document",
                    "contentTypePattern": "^text/xml$",
                  },
                  "type": "string",
                },
              },
              "type": "object",
            },
            "supportsTablet": Object {
              "description": "Whether your standalone iOS app supports tablet screen sizes. Defaults to \`false\`.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
              "markdownDescription": "Whether your standalone iOS app supports tablet screen sizes. Defaults to \`false\`.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
              "meta": Object {
                "bareWorkflow": "Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
              },
              "type": "boolean",
            },
            "userInterfaceStyle": Object {
              "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
              "enum": Array [
                "light",
                "dark",
                "automatic",
              ],
              "fallback": "light",
              "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
              "type": "string",
            },
            "usesAppleSignIn": Object {
              "description": "A boolean indicating if the app uses Apple Sign-In. See \`AppleAuthentication\` docs for details.",
              "fallback": false,
              "markdownDescription": "A boolean indicating if the app uses Apple Sign-In. See \`AppleAuthentication\` docs for details.",
              "type": "boolean",
            },
            "usesIcloudStorage": Object {
              "description": "A boolean indicating if the app uses iCloud Storage for \`DocumentPicker\`. See \`DocumentPicker\` docs for details.

**Bare workflow** - Use Xcode to set this.",
              "markdownDescription": "A boolean indicating if the app uses iCloud Storage for \`DocumentPicker\`. See \`DocumentPicker\` docs for details.

**Bare workflow** - Use Xcode to set this.",
              "meta": Object {
                "bareWorkflow": "Use Xcode to set this.",
              },
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "loading": Object {
          "additionalProperties": false,
          "description": "@deprecated Use \`splash\` instead. Configuration for the loading screen that users see when opening your app, while fetching & caching bundle and assets.",
          "markdownDescription": "@deprecated Use \`splash\` instead. Configuration for the loading screen that users see when opening your app, while fetching & caching bundle and assets.",
          "meta": Object {
            "deprecated": true,
          },
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to fill the loading screen background",
              "markdownDescription": "Color to fill the loading screen background",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "backgroundImage": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "exponentIconColor": Object {
              "description": "If no icon is provided, we will show the Expo logo. You can choose between \`white\` and \`blue\`.",
              "enum": Array [
                "white",
                "blue",
              ],
              "markdownDescription": "If no icon is provided, we will show the Expo logo. You can choose between \`white\` and \`blue\`.",
              "type": "string",
            },
            "exponentIconGrayscale": Object {
              "description": "Similar to \`exponentIconColor\` but instead indicate if it should be grayscale (\`1\`) or not (\`0\`).",
              "markdownDescription": "Similar to \`exponentIconColor\` but instead indicate if it should be grayscale (\`1\`) or not (\`0\`).",
              "maximum": 1,
              "minimum": 0,
              "type": "number",
            },
            "hideExponentText": Object {
              "description": "By default, Expo shows some text at the bottom of the loading screen. Set this to \`true\` to disable.",
              "markdownDescription": "By default, Expo shows some text at the bottom of the loading screen. Set this to \`true\` to disable.",
              "type": "boolean",
            },
            "icon": Object {
              "description": "Local path or remote URL to an image to display while starting up the app. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to display while starting up the app. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
          },
          "type": "object",
        },
        "locales": Object {
          "additionalProperties": Object {
            "type": Array [
              "string",
              "object",
            ],
          },
          "description": "Provide overrides by locale for System Dialog prompts like Permissions Boxes

**Bare workflow** - To add or change language and localization information in your iOS app, you need to use Xcode.",
          "markdownDescription": "Provide overrides by locale for System Dialog prompts like Permissions Boxes

**Bare workflow** - To add or change language and localization information in your iOS app, you need to use Xcode.",
          "meta": Object {
            "bareWorkflow": "To add or change language and localization information in your iOS app, you need to use Xcode.",
          },
          "properties": Object {},
          "type": "object",
        },
        "name": Object {
          "description": "The name of your app as it appears both within Expo client and on your home screen as a standalone app.

**Bare workflow** - To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          "markdownDescription": "The name of your app as it appears both within Expo client and on your home screen as a standalone app.

**Bare workflow** - To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          "meta": Object {
            "bareWorkflow": "To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          },
          "type": "string",
        },
        "nodeModulesPath": Object {
          "type": "string",
        },
        "notification": Object {
          "additionalProperties": false,
          "description": "Configuration for remote (push) notifications.",
          "markdownDescription": "Configuration for remote (push) notifications.",
          "properties": Object {
            "androidCollapsedTitle": Object {
              "description": "If \`androidMode\` is set to \`collapse\`, this title is used for the collapsed notification message. For example, \`'#{unread_notifications} new interactions'\`.",
              "markdownDescription": "If \`androidMode\` is set to \`collapse\`, this title is used for the collapsed notification message. For example, \`'#{unread_notifications} new interactions'\`.",
              "type": "string",
            },
            "androidMode": Object {
              "description": "Show each push notification individually (\`default\`) or collapse into one (\`collapse\`).",
              "enum": Array [
                "default",
                "collapse",
              ],
              "markdownDescription": "Show each push notification individually (\`default\`) or collapse into one (\`collapse\`).",
              "type": "string",
            },
            "color": Object {
              "description": "(Android only) Tint color for the push notification image when it appears in the notification tray. Defaults to \`#ffffff\`",
              "markdownDescription": "(Android only) Tint color for the push notification image when it appears in the notification tray. Defaults to \`#ffffff\`",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "icon": Object {
              "description": "(Android only) Local path or remote URL to an image to use as the icon for push notifications. 96x96 png grayscale with transparency. We recommend following [Google's design guidelines](https://material.io/design/iconography/product-icons.html#design-principles). If not provided, defaults to your app icon.",
              "markdownDescription": "(Android only) Local path or remote URL to an image to use as the icon for push notifications. 96x96 png grayscale with transparency. We recommend following [Google's design guidelines](https://material.io/design/iconography/product-icons.html#design-principles). If not provided, defaults to your app icon.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
            "iosDisplayInForeground": Object {
              "description": "Whether or not to display notifications when the app is in the foreground on iOS. \`_displayInForeground\` option in the individual push notification message overrides this option. [Learn more.](https://docs.expo.io/push-notifications/receiving-notifications/#foreground-notification-behavior) Defaults to \`false\`.",
              "markdownDescription": "Whether or not to display notifications when the app is in the foreground on iOS. \`_displayInForeground\` option in the individual push notification message overrides this option. [Learn more.](https://docs.expo.io/push-notifications/receiving-notifications/#foreground-notification-behavior) Defaults to \`false\`.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "orientation": Object {
          "description": "Locks your app to a specific orientation with portrait or landscape. Defaults to no lock. Valid values: \`default\`, \`portrait\`, \`landscape\`",
          "enum": Array [
            "default",
            "portrait",
            "landscape",
          ],
          "markdownDescription": "Locks your app to a specific orientation with portrait or landscape. Defaults to no lock. Valid values: \`default\`, \`portrait\`, \`landscape\`",
          "type": "string",
        },
        "originalFullName": Object {
          "autogenerated": true,
          "description": "The auto generated Expo account name and slug used for services like Notifications and AuthSession proxy. Formatted like \`@username/slug\`. When unauthenticated, the username is \`@anonymous\`. For published projects, this value will not change when a project is transferred between accounts or renamed.",
          "markdownDescription": "The auto generated Expo account name and slug used for services like Notifications and AuthSession proxy. Formatted like \`@username/slug\`. When unauthenticated, the username is \`@anonymous\`. For published projects, this value will not change when a project is transferred between accounts or renamed.",
          "type": "string",
        },
        "owner": Object {
          "description": "The name of the Expo account that owns the project. This is useful for teams collaborating on a project. If not provided, the owner defaults to the username of the current user.",
          "markdownDescription": "The name of the Expo account that owns the project. This is useful for teams collaborating on a project. If not provided, the owner defaults to the username of the current user.",
          "minLength": 1,
          "type": "string",
        },
        "packagerOpts": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
        "platforms": Object {
          "description": "Platforms that your project explicitly supports. If not specified, it defaults to \`[\\"ios\\", \\"android\\"]\`.",
          "example": Array [
            "ios",
            "android",
            "web",
          ],
          "items": Object {
            "enum": Array [
              "android",
              "ios",
              "web",
            ],
            "type": "string",
          },
          "markdownDescription": "Platforms that your project explicitly supports. If not specified, it defaults to \`[\\"ios\\", \\"android\\"]\`.",
          "type": "array",
          "uniqueItems": true,
        },
        "primaryColor": Object {
          "description": "On Android, this will determine the color of your app in the multitasker. Currently this is not used on iOS, but it may be used for other purposes in the future.",
          "markdownDescription": "On Android, this will determine the color of your app in the multitasker. Currently this is not used on iOS, but it may be used for other purposes in the future.",
          "meta": Object {
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "privacy": Object {
          "description": "Defaults to \`unlisted\`. \`unlisted\` hides the project from search results. \`hidden\` restricts access to the project page to only the owner and other users that have been granted access. Valid values: \`public\`, \`unlisted\`, \`hidden\`.",
          "enum": Array [
            "public",
            "unlisted",
            "hidden",
          ],
          "fallback": "unlisted",
          "markdownDescription": "Defaults to \`unlisted\`. \`unlisted\` hides the project from search results. \`hidden\` restricts access to the project page to only the owner and other users that have been granted access. Valid values: \`public\`, \`unlisted\`, \`hidden\`.",
          "type": "string",
        },
        "rnCliPath": Object {
          "type": "string",
        },
        "runtimeVersion": Object {
          "description": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest for bare workflow projects. If provided, this must match the version set in Expo.plist or AndroidManifest.xml.",
          "markdownDescription": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest for bare workflow projects. If provided, this must match the version set in Expo.plist or AndroidManifest.xml.",
          "meta": Object {
            "regexHuman": "A string beginning with an alphanumeric character followed by any combination of alphanumeric character, \\"_\\", \\"+\\", \\".\\" or \\"-\\". Example: \\"1.0.3a+\\".",
          },
          "pattern": "^[a-zA-Z\\\\d][a-zA-Z\\\\d._+-]*$",
          "patternErrorMessage": "A string beginning with an alphanumeric character followed by any combination of alphanumeric character, \\"_\\", \\"+\\", \\".\\" or \\"-\\". Example: \\"1.0.3a+\\".",
          "type": "string",
        },
        "scheme": Object {
          "description": "**Standalone Apps Only**. URL scheme to link into your app. For example, if we set this to \`'demo'\`, then demo:// URLs would open your app when tapped.

**Bare workflow** - To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
          "markdownDescription": "**Standalone Apps Only**. URL scheme to link into your app. For example, if we set this to \`'demo'\`, then demo:// URLs would open your app when tapped.

**Bare workflow** - To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
          "meta": Object {
            "bareWorkflow": "To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
            "regexHuman": "String beginning with a **lowercase** letter followed by any combination of **lowercase** letters, digits, \\"+\\", \\".\\" or \\"-\\"",
            "standaloneOnly": true,
          },
          "pattern": "^[a-z][a-z0-9+.-]*$",
          "patternErrorMessage": "String beginning with a **lowercase** letter followed by any combination of **lowercase** letters, digits, \\"+\\", \\".\\" or \\"-\\"",
          "type": "string",
        },
        "sdkVersion": Object {
          "description": "The Expo sdkVersion to run the project on. This should line up with the version specified in your package.json.",
          "markdownDescription": "The Expo sdkVersion to run the project on. This should line up with the version specified in your package.json.",
          "pattern": "^(\\\\d+\\\\.\\\\d+\\\\.\\\\d+)|(UNVERSIONED)$",
          "type": "string",
        },
        "slug": Object {
          "description": "The friendly URL name for publishing. For example, \`myAppName\` will refer to the \`expo.io/@project-owner/myAppName\` project.",
          "markdownDescription": "The friendly URL name for publishing. For example, \`myAppName\` will refer to the \`expo.io/@project-owner/myAppName\` project.",
          "pattern": "^[a-zA-Z0-9_\\\\-]+$",
          "type": "string",
        },
        "splash": Object {
          "description": "Configuration for loading and splash screen for standalone apps.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
          "markdownDescription": "Configuration for loading and splash screen for standalone apps.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
          "meta": Object {
            "bareWorkflow": "To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
          },
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to fill the loading screen background

**Bare workflow** - For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
              "markdownDescription": "Color to fill the loading screen background

**Bare workflow** - For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
              "meta": Object {
                "bareWorkflow": "For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "image": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "resizeMode": Object {
              "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "enum": Array [
                "cover",
                "contain",
              ],
              "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "type": "string",
            },
          },
          "type": "object",
        },
        "updates": Object {
          "additionalProperties": false,
          "description": "Configuration for how and when the app should request OTA JavaScript updates",
          "markdownDescription": "Configuration for how and when the app should request OTA JavaScript updates",
          "properties": Object {
            "checkAutomatically": Object {
              "description": "By default, Expo will check for updates every time the app is loaded. Set this to \`ON_ERROR_RECOVERY\` to disable automatic checking unless recovering from an error. Must be one of \`ON_LOAD\` or \`ON_ERROR_RECOVERY\`",
              "enum": Array [
                "ON_ERROR_RECOVERY",
                "ON_LOAD",
              ],
              "markdownDescription": "By default, Expo will check for updates every time the app is loaded. Set this to \`ON_ERROR_RECOVERY\` to disable automatic checking unless recovering from an error. Must be one of \`ON_LOAD\` or \`ON_ERROR_RECOVERY\`",
              "type": "string",
            },
            "enabled": Object {
              "description": "If set to false, your standalone app will never download any code, and will only use code bundled locally on the device. In that case, all updates to your app must be submitted through Apple review. Defaults to true. (Note: This will not work out of the box with ExpoKit projects)",
              "markdownDescription": "If set to false, your standalone app will never download any code, and will only use code bundled locally on the device. In that case, all updates to your app must be submitted through Apple review. Defaults to true. (Note: This will not work out of the box with ExpoKit projects)",
              "type": "boolean",
            },
            "fallbackToCacheTimeout": Object {
              "description": "How long (in ms) to allow for fetching OTA updates before falling back to a cached version of the app. Defaults to 0. Must be between 0 and 300000 (5 minutes).",
              "markdownDescription": "How long (in ms) to allow for fetching OTA updates before falling back to a cached version of the app. Defaults to 0. Must be between 0 and 300000 (5 minutes).",
              "maximum": 300000,
              "minimum": 0,
              "type": "number",
            },
          },
          "type": "object",
        },
        "userInterfaceStyle": Object {
          "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "enum": Array [
            "light",
            "dark",
            "automatic",
          ],
          "fallback": "light",
          "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "type": "string",
        },
        "version": Object {
          "description": "Your app version. In addition to this field, you'll also use \`ios.buildNumber\` and \`android.versionCode\` — read more about how to version your app [here](https://docs.expo.io/distribution/app-stores/#versioning-your-app). On iOS this corresponds to \`CFBundleShortVersionString\`, and on Android, this corresponds to \`versionName\`. The required format can be found [here](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring).

**Bare workflow** - To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          "markdownDescription": "Your app version. In addition to this field, you'll also use \`ios.buildNumber\` and \`android.versionCode\` — read more about how to version your app [here](https://docs.expo.io/distribution/app-stores/#versioning-your-app). On iOS this corresponds to \`CFBundleShortVersionString\`, and on Android, this corresponds to \`versionName\`. The required format can be found [here](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring).

**Bare workflow** - To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          "meta": Object {
            "bareWorkflow": "To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          },
          "type": "string",
        },
        "web": Object {
          "additionalProperties": true,
          "description": "Configuration that is specific to the web platform.",
          "markdownDescription": "Configuration that is specific to the web platform.",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Defines the expected “background color” for the website. This value repeats what is already available in the site’s CSS, but can be used by browsers to draw the background color of a shortcut when the manifest is available before the stylesheet has loaded. This creates a smooth transition between launching the web application and loading the site's content.",
              "markdownDescription": "Defines the expected “background color” for the website. This value repeats what is already available in the site’s CSS, but can be used by browsers to draw the background color of a shortcut when the manifest is available before the stylesheet has loaded. This creates a smooth transition between launching the web application and loading the site's content.",
              "meta": Object {
                "pwa": "background_color",
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "barStyle": Object {
              "description": "If content is set to default, the status bar appears normal. If set to black, the status bar has a black background. If set to black-translucent, the status bar is black and translucent. If set to default or black, the web content is displayed below the status bar. If set to black-translucent, the web content is displayed on the entire screen, partially obscured by the status bar.",
              "enum": Array [
                "default",
                "black",
                "black-translucent",
              ],
              "fallback": "black-translucent",
              "markdownDescription": "If content is set to default, the status bar appears normal. If set to black, the status bar has a black background. If set to black-translucent, the status bar is black and translucent. If set to default or black, the web content is displayed below the status bar. If set to black-translucent, the web content is displayed on the entire screen, partially obscured by the status bar.",
              "meta": Object {
                "html": "apple-mobile-web-app-status-bar-style",
                "pwa": "name",
              },
              "type": "string",
            },
            "config": Object {
              "description": "Firebase web configuration. Used by the expo-firebase packages on both web and native. [Learn more](https://firebase.google.com/docs/reference/js/firebase.html#initializeapp)",
              "markdownDescription": "Firebase web configuration. Used by the expo-firebase packages on both web and native. [Learn more](https://firebase.google.com/docs/reference/js/firebase.html#initializeapp)",
              "properties": Object {
                "firebase": Object {
                  "properties": Object {
                    "apiKey": Object {
                      "type": "string",
                    },
                    "appId": Object {
                      "type": "string",
                    },
                    "authDomain": Object {
                      "type": "string",
                    },
                    "databaseURL": Object {
                      "type": "string",
                    },
                    "measurementId": Object {
                      "type": "string",
                    },
                    "messagingSenderId": Object {
                      "type": "string",
                    },
                    "projectId": Object {
                      "type": "string",
                    },
                    "storageBucket": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "type": "object",
            },
            "dangerous": Object {
              "additionalProperties": true,
              "description": "Experimental features. These will break without deprecation notice.",
              "markdownDescription": "Experimental features. These will break without deprecation notice.",
              "properties": Object {},
              "type": "object",
            },
            "description": Object {
              "description": "Provides a general description of what the pinned website does.",
              "markdownDescription": "Provides a general description of what the pinned website does.",
              "meta": Object {
                "html": "description",
                "pwa": "description",
              },
              "type": "string",
            },
            "dir": Object {
              "description": "Specifies the primary text direction for the name, short_name, and description members. Together with the lang member, it helps the correct display of right-to-left languages.",
              "enum": Array [
                "auto",
                "ltr",
                "rtl",
              ],
              "markdownDescription": "Specifies the primary text direction for the name, short_name, and description members. Together with the lang member, it helps the correct display of right-to-left languages.",
              "meta": Object {
                "pwa": "dir",
              },
              "type": "string",
            },
            "display": Object {
              "description": "Defines the developers’ preferred display mode for the website.",
              "enum": Array [
                "fullscreen",
                "standalone",
                "minimal-ui",
                "browser",
              ],
              "markdownDescription": "Defines the developers’ preferred display mode for the website.",
              "meta": Object {
                "pwa": "display",
              },
              "type": "string",
            },
            "favicon": Object {
              "description": "Relative path of an image to use for your app's favicon.",
              "markdownDescription": "Relative path of an image to use for your app's favicon.",
              "type": "string",
            },
            "lang": Object {
              "description": "Specifies the primary language for the values in the name and short_name members. This value is a string containing a single language tag.",
              "fallback": "en",
              "markdownDescription": "Specifies the primary language for the values in the name and short_name members. This value is a string containing a single language tag.",
              "meta": Object {
                "pwa": "lang",
              },
              "type": "string",
            },
            "name": Object {
              "description": "Defines the title of the document, defaults to the outer level name",
              "markdownDescription": "Defines the title of the document, defaults to the outer level name",
              "meta": Object {
                "pwa": "name",
              },
              "type": "string",
            },
            "orientation": Object {
              "description": "Defines the default orientation for all the website's top level browsing contexts.",
              "enum": Array [
                "any",
                "natural",
                "landscape",
                "landscape-primary",
                "landscape-secondary",
                "portrait",
                "portrait-primary",
                "portrait-secondary",
              ],
              "markdownDescription": "Defines the default orientation for all the website's top level browsing contexts.",
              "meta": Object {
                "pwa": "orientation",
              },
              "type": "string",
            },
            "preferRelatedApplications": Object {
              "description": "Hints for the user agent to indicate to the user that the specified native applications (defined in expo.ios and expo.android) are recommended over the website.",
              "fallback": true,
              "markdownDescription": "Hints for the user agent to indicate to the user that the specified native applications (defined in expo.ios and expo.android) are recommended over the website.",
              "meta": Object {
                "pwa": "prefer_related_applications",
              },
              "type": "boolean",
            },
            "scope": Object {
              "description": "Defines the navigation scope of this website's context. This restricts what web pages can be viewed while the manifest is applied. If the user navigates outside the scope, it returns to a normal web page inside a browser tab/window. If the scope is a relative URL, the base URL will be the URL of the manifest.",
              "markdownDescription": "Defines the navigation scope of this website's context. This restricts what web pages can be viewed while the manifest is applied. If the user navigates outside the scope, it returns to a normal web page inside a browser tab/window. If the scope is a relative URL, the base URL will be the URL of the manifest.",
              "meta": Object {
                "pwa": "scope",
              },
              "type": "string",
            },
            "shortName": Object {
              "description": "A short version of the app's name, 12 characters or fewer. Used in app launcher and new tab pages. Maps to \`short_name\` in the PWA manifest.json. Defaults to the \`name\` property.",
              "markdownDescription": "A short version of the app's name, 12 characters or fewer. Used in app launcher and new tab pages. Maps to \`short_name\` in the PWA manifest.json. Defaults to the \`name\` property.",
              "meta": Object {
                "pwa": "short_name",
                "regexHuman": "Maximum 12 characters long",
              },
              "type": "string",
            },
            "splash": Object {
              "description": "Configuration for PWA splash screens.

**Bare workflow** - Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
              "markdownDescription": "Configuration for PWA splash screens.

**Bare workflow** - Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
              "meta": Object {
                "bareWorkflow": "Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
              },
              "properties": Object {
                "backgroundColor": Object {
                  "description": "Color to fill the loading screen background",
                  "markdownDescription": "Color to fill the loading screen background",
                  "meta": Object {
                    "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
                  },
                  "pattern": "^#|(&#x23;)\\\\d{6}$",
                  "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
                  "type": "string",
                },
                "image": Object {
                  "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
                  "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
                  "meta": Object {
                    "asset": true,
                    "contentTypeHuman": ".png image",
                    "contentTypePattern": "^image/png$",
                  },
                  "type": "string",
                },
                "resizeMode": Object {
                  "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
                  "enum": Array [
                    "cover",
                    "contain",
                  ],
                  "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "startUrl": Object {
              "description": "The URL that loads when a user launches the application (e.g., when added to home screen), typically the index. Note: This has to be a relative URL, relative to the manifest URL.",
              "markdownDescription": "The URL that loads when a user launches the application (e.g., when added to home screen), typically the index. Note: This has to be a relative URL, relative to the manifest URL.",
              "meta": Object {
                "pwa": "start_url",
              },
              "type": "string",
            },
            "themeColor": Object {
              "description": "Defines the color of the Android tool bar, and may be reflected in the app's preview in task switchers.",
              "markdownDescription": "Defines the color of the Android tool bar, and may be reflected in the app's preview in task switchers.",
              "meta": Object {
                "html": "theme-color",
                "pwa": "theme_color",
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "required": Array [
        "name",
        "slug",
      ],
      "type": "object",
    },
  },
  "type": "object",
  "version": "39.0.0.0.0",
}
`;

exports[`vscodeSchema creates expected SDK 41 schema 1`] = `
Object {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "definitions": Object {
    "Android": Object {
      "additionalProperties": false,
      "description": "Configuration that is specific to the Android platform.",
      "markdownDescription": "Configuration that is specific to the Android platform.",
      "meta": Object {
        "standaloneOnly": true,
      },
      "properties": Object {
        "adaptiveIcon": Object {
          "additionalProperties": false,
          "description": "Settings for an Adaptive Launcher Icon on Android. [Learn more](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)",
          "markdownDescription": "Settings for an Adaptive Launcher Icon on Android. [Learn more](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to use as the background for your app's Adaptive Icon on Android. Defaults to white, \`#FFFFFF\`. Has no effect if \`foregroundImage\` is not specified.",
              "markdownDescription": "Color to use as the background for your app's Adaptive Icon on Android. Defaults to white, \`#FFFFFF\`. Has no effect if \`foregroundImage\` is not specified.",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "backgroundImage": Object {
              "description": "Local path or remote URL to a background image for your app's Adaptive Icon on Android. If specified, this overrides the \`backgroundColor\` key. Must have the same dimensions as  foregroundImage\`, and has no effect if \`foregroundImage\` is not specified. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive).",
              "markdownDescription": "Local path or remote URL to a background image for your app's Adaptive Icon on Android. If specified, this overrides the \`backgroundColor\` key. Must have the same dimensions as  foregroundImage\`, and has no effect if \`foregroundImage\` is not specified. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive).",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
            "foregroundImage": Object {
              "description": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` and the \`android.icon\` keys. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive). This icon will appear on the home screen.",
              "markdownDescription": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` and the \`android.icon\` keys. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive). This icon will appear on the home screen.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
          },
          "type": "object",
        },
        "allowBackup": Object {
          "description": "Allows your user's app data to be automatically backed up to their Google Drive. If this is set to false, no backup or restore of the application will ever be performed (this is useful if your app deals with sensitive information). Defaults to the Android default, which is \`true\`.",
          "fallback": true,
          "markdownDescription": "Allows your user's app data to be automatically backed up to their Google Drive. If this is set to false, no backup or restore of the application will ever be performed (this is useful if your app deals with sensitive information). Defaults to the Android default, which is \`true\`.",
          "type": "boolean",
        },
        "backgroundColor": Object {
          "description": "The background color for your Android app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.

**Bare workflow** - This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
          "markdownDescription": "The background color for your Android app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.

**Bare workflow** - This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
          "meta": Object {
            "bareWorkflow": "This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "config": Object {
          "additionalProperties": false,
          "description": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
          "markdownDescription": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
          "properties": Object {
            "branch": Object {
              "additionalProperties": false,
              "description": "[Branch](https://branch.io/) key to hook up Branch linking services.",
              "markdownDescription": "[Branch](https://branch.io/) key to hook up Branch linking services.",
              "properties": Object {
                "apiKey": Object {
                  "description": "Your Branch API key",
                  "markdownDescription": "Your Branch API key",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "googleMaps": Object {
              "additionalProperties": false,
              "description": "[Google Maps Android SDK](https://developers.google.com/maps/documentation/android-api/signup) configuration for your standalone app.",
              "markdownDescription": "[Google Maps Android SDK](https://developers.google.com/maps/documentation/android-api/signup) configuration for your standalone app.",
              "properties": Object {
                "apiKey": Object {
                  "description": "Your Google Maps Android SDK API key",
                  "markdownDescription": "Your Google Maps Android SDK API key",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "googleMobileAdsAppId": Object {
              "description": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
              "markdownDescription": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
              "type": "string",
            },
            "googleMobileAdsAutoInit": Object {
              "description": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Client and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
              "fallback": false,
              "markdownDescription": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Client and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
              "type": "boolean",
            },
            "googleSignIn": Object {
              "additionalProperties": false,
              "deprecated": true,
              "description": "@deprecated Use \`googleServicesFile\` instead. [Google Sign-In Android SDK](https://developers.google.com/identity/sign-in/android/start-integrating) keys for your standalone app.",
              "markdownDescription": "@deprecated Use \`googleServicesFile\` instead. [Google Sign-In Android SDK](https://developers.google.com/identity/sign-in/android/start-integrating) keys for your standalone app.",
              "meta": Object {
                "deprecated": true,
              },
              "properties": Object {
                "apiKey": Object {
                  "description": "The Android API key. Can be found in the credentials section of the developer console or in \`google-services.json\`.",
                  "markdownDescription": "The Android API key. Can be found in the credentials section of the developer console or in \`google-services.json\`.",
                  "type": "string",
                },
                "certificateHash": Object {
                  "description": "The SHA-1 hash of the signing certificate used to build the APK without any separator (\`:\`). Can be found in \`google-services.json\`. https://developers.google.com/android/guides/client-auth",
                  "markdownDescription": "The SHA-1 hash of the signing certificate used to build the APK without any separator (\`:\`). Can be found in \`google-services.json\`. https://developers.google.com/android/guides/client-auth",
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
        "enableDangerousExperimentalLeanBuilds": Object {
          "description": "@deprecated Use EAS Build or compile locally instead. If set to true, APK will contain only unimodules that are explicitly added in package.json and their dependencies",
          "markdownDescription": "@deprecated Use EAS Build or compile locally instead. If set to true, APK will contain only unimodules that are explicitly added in package.json and their dependencies",
          "type": "boolean",
        },
        "googleServicesFile": Object {
          "bareWorkflow": "Add or edit the file directly at \`android/app/google-services.json\`",
          "description": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase. Including this key automatically enables FCM in your standalone app.",
          "markdownDescription": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase. Including this key automatically enables FCM in your standalone app.",
          "type": "string",
        },
        "icon": Object {
          "description": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` key. We recommend that you use a 1024x1024 png file (transparency is recommended for the Google Play Store). This icon will appear on the home screen and within the Expo app.",
          "markdownDescription": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` key. We recommend that you use a 1024x1024 png file (transparency is recommended for the Google Play Store). This icon will appear on the home screen and within the Expo app.",
          "meta": Object {
            "asset": true,
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
            "square": true,
          },
          "type": "string",
        },
        "intentFilters": Object {
          "description": "Configuration for setting an array of custom intent filters in Android manifest. [Learn more](https://developer.android.com/guide/components/intents-filters)

**Bare workflow** - This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
          "example": Array [
            Object {
              "action": "VIEW",
              "autoVerify": true,
              "category": Array [
                "BROWSABLE",
                "DEFAULT",
              ],
              "data": Object {
                "host": "*.expo.io",
                "scheme": "https",
              },
            },
          ],
          "exampleString": "
 [{ 
 \\"autoVerify\\": true, 
 \\"action\\": \\"VIEW\\", 
 \\"data\\": { 
 \\"scheme\\": \\"https\\", 
 \\"host\\": \\"*.expo.io\\" 
 }, 
 \\"category\\": [\\"BROWSABLE\\", \\"DEFAULT\\"] 
 }]",
          "items": Object {
            "additionalProperties": false,
            "properties": Object {
              "action": Object {
                "type": "string",
              },
              "autoVerify": Object {
                "description": "You may also use an intent filter to set your app as the default handler for links (without showing the user a dialog with options). To do so use \`true\` and then configure your server to serve a JSON file verifying that you own the domain. [Learn more](https://developer.android.com/training/app-links)",
                "markdownDescription": "You may also use an intent filter to set your app as the default handler for links (without showing the user a dialog with options). To do so use \`true\` and then configure your server to serve a JSON file verifying that you own the domain. [Learn more](https://developer.android.com/training/app-links)",
                "type": "boolean",
              },
              "category": Object {
                "anyOf": Array [
                  Object {
                    "type": Array [
                      "string",
                    ],
                  },
                  Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                  },
                ],
              },
              "data": Object {
                "anyOf": Array [
                  Object {
                    "$ref": "#/definitions/AndroidIntentFiltersData",
                  },
                  Object {
                    "items": Object {
                      "$ref": "#/definitions/AndroidIntentFiltersData",
                    },
                    "type": Array [
                      "array",
                    ],
                  },
                ],
              },
            },
            "required": Array [
              "action",
            ],
            "type": "object",
          },
          "markdownDescription": "Configuration for setting an array of custom intent filters in Android manifest. [Learn more](https://developer.android.com/guide/components/intents-filters)

**Bare workflow** - This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
          "meta": Object {
            "bareWorkflow": "This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
          },
          "type": "array",
          "uniqueItems": true,
        },
        "package": Object {
          "description": "The package name for your Android standalone app. You make it up, but it needs to be unique on the Play Store. See [this StackOverflow question](http://stackoverflow.com/questions/6273892/android-package-name-convention).

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
          "markdownDescription": "The package name for your Android standalone app. You make it up, but it needs to be unique on the Play Store. See [this StackOverflow question](http://stackoverflow.com/questions/6273892/android-package-name-convention).

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
          "meta": Object {
            "bareWorkflow": "This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
            "regexHuman": "Reverse DNS notation unique name for your app. Valid Android Application ID. For example, \`com.example.app\`, where \`com.example\` is our domain and \`app\` is our app. The name may only contain lowercase and uppercase letters (a-z, A-Z), numbers (0-9) and underscores (_), separated by periods (.). Each component of the name should start with a lowercase letter.",
          },
          "pattern": "^[a-zA-Z][a-zA-Z0-9\\\\_]*(\\\\.[a-zA-Z][a-zA-Z0-9\\\\_]*)+$",
          "patternErrorMessage": "Reverse DNS notation unique name for your app. Valid Android Application ID. For example, \`com.example.app\`, where \`com.example\` is our domain and \`app\` is our app. The name may only contain lowercase and uppercase letters (a-z, A-Z), numbers (0-9) and underscores (_), separated by periods (.). Each component of the name should start with a lowercase letter.",
          "type": "string",
        },
        "permissions": Object {
          "bareWorkflow": "To change the permissions your app requests, you'll need to edit \`AndroidManifest.xml\` manually. To prevent your app from requesting one of the permissions listed below, you'll need to explicitly add it to \`AndroidManifest.xml\` along with a \`tools:node=\\"remove\\"\` tag.",
          "description": "List of permissions used by the standalone app. 

 To use ONLY the following minimum necessary permissions and none of the extras supported by Expo in a default managed app, set \`permissions\` to \`[]\`. The minimum necessary permissions do not require a Privacy Policy when uploading to Google Play Store and are: 
• receive data from Internet 
• view network connections 
• full network access 
• change your audio settings 
• prevent device from sleeping 

 To use ALL permissions supported by Expo by default, do not specify the \`permissions\` key. 

  To use the minimum necessary permissions ALONG with certain additional permissions, specify those extras in \`permissions\`, e.g.

 \`[ \\"CAMERA\\", \\"ACCESS_FINE_LOCATION\\" ]\`.

  You can specify the following permissions depending on what you need:

- \`ACCESS_COARSE_LOCATION\`
- \`ACCESS_FINE_LOCATION\`
- \`ACCESS_BACKGROUND_LOCATION\`
- \`CAMERA\`
- \`RECORD_AUDIO\`
- \`READ_CONTACTS\`
- \`WRITE_CONTACTS\`
- \`READ_CALENDAR\`
- \`WRITE_CALENDAR\`
- \`READ_EXTERNAL_STORAGE\`
- \`WRITE_EXTERNAL_STORAGE\`
- \`USE_FINGERPRINT\`
- \`USE_BIOMETRIC\`
- \`WRITE_SETTINGS\`
- \`VIBRATE\`
- \`READ_PHONE_STATE\`
- \`com.anddoes.launcher.permission.UPDATE_COUNT\`
- \`com.android.launcher.permission.INSTALL_SHORTCUT\`
- \`com.google.android.c2dm.permission.RECEIVE\`
- \`com.google.android.gms.permission.ACTIVITY_RECOGNITION\`
- \`com.google.android.providers.gsf.permission.READ_GSERVICES\`
- \`com.htc.launcher.permission.READ_SETTINGS\`
- \`com.htc.launcher.permission.UPDATE_SHORTCUT\`
- \`com.majeur.launcher.permission.UPDATE_BADGE\`
- \`com.sec.android.provider.badge.permission.READ\`
- \`com.sec.android.provider.badge.permission.WRITE\`
- \`com.sonyericsson.home.permission.BROADCAST_BADGE\`
",
          "items": Object {
            "type": "string",
          },
          "markdownDescription": "List of permissions used by the standalone app. 

 To use ONLY the following minimum necessary permissions and none of the extras supported by Expo in a default managed app, set \`permissions\` to \`[]\`. The minimum necessary permissions do not require a Privacy Policy when uploading to Google Play Store and are: 
• receive data from Internet 
• view network connections 
• full network access 
• change your audio settings 
• prevent device from sleeping 

 To use ALL permissions supported by Expo by default, do not specify the \`permissions\` key. 

  To use the minimum necessary permissions ALONG with certain additional permissions, specify those extras in \`permissions\`, e.g.

 \`[ \\"CAMERA\\", \\"ACCESS_FINE_LOCATION\\" ]\`.

  You can specify the following permissions depending on what you need:

- \`ACCESS_COARSE_LOCATION\`
- \`ACCESS_FINE_LOCATION\`
- \`ACCESS_BACKGROUND_LOCATION\`
- \`CAMERA\`
- \`RECORD_AUDIO\`
- \`READ_CONTACTS\`
- \`WRITE_CONTACTS\`
- \`READ_CALENDAR\`
- \`WRITE_CALENDAR\`
- \`READ_EXTERNAL_STORAGE\`
- \`WRITE_EXTERNAL_STORAGE\`
- \`USE_FINGERPRINT\`
- \`USE_BIOMETRIC\`
- \`WRITE_SETTINGS\`
- \`VIBRATE\`
- \`READ_PHONE_STATE\`
- \`com.anddoes.launcher.permission.UPDATE_COUNT\`
- \`com.android.launcher.permission.INSTALL_SHORTCUT\`
- \`com.google.android.c2dm.permission.RECEIVE\`
- \`com.google.android.gms.permission.ACTIVITY_RECOGNITION\`
- \`com.google.android.providers.gsf.permission.READ_GSERVICES\`
- \`com.htc.launcher.permission.READ_SETTINGS\`
- \`com.htc.launcher.permission.UPDATE_SHORTCUT\`
- \`com.majeur.launcher.permission.UPDATE_BADGE\`
- \`com.sec.android.provider.badge.permission.READ\`
- \`com.sec.android.provider.badge.permission.WRITE\`
- \`com.sonyericsson.home.permission.BROADCAST_BADGE\`
",
          "type": "array",
        },
        "playStoreUrl": Object {
          "description": "URL to your app on the Google Play Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
          "example": "https://play.google.com/store/apps/details?id=host.exp.exponent",
          "markdownDescription": "URL to your app on the Google Play Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
          "pattern": "^https://play\\\\.google\\\\.com/",
          "type": Array [
            "string",
          ],
        },
        "softwareKeyboardLayoutMode": Object {
          "description": "Determines how the software keyboard will impact the layout of your application. This maps to the \`android:windowSoftInputMode\` property. Defaults to \`resize\`. Valid values: \`resize\`, \`pan\`.",
          "enum": Array [
            "resize",
            "pan",
          ],
          "fallback": "resize",
          "markdownDescription": "Determines how the software keyboard will impact the layout of your application. This maps to the \`android:windowSoftInputMode\` property. Defaults to \`resize\`. Valid values: \`resize\`, \`pan\`.",
          "type": "string",
        },
        "splash": Object {
          "description": "Configuration for loading and splash screen for managed and standalone Android apps.",
          "markdownDescription": "Configuration for loading and splash screen for managed and standalone Android apps.",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to fill the loading screen background",
              "markdownDescription": "Color to fill the loading screen background",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "hdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 1.5x\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 1.5x\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "image": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "mdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Natural sized image (baseline)\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Natural sized image (baseline)\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "resizeMode": Object {
              "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\`, \`contain\` or \`native\`, defaults to \`contain\`.",
              "enum": Array [
                "cover",
                "contain",
                "native",
              ],
              "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\`, \`contain\` or \`native\`, defaults to \`contain\`.",
              "type": "string",
            },
            "xhdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 2x\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 2x\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "xxhdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 3x\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 3x\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "xxxhdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 4x\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 4x\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
          },
          "type": "object",
        },
        "useNextNotificationsApi": Object {
          "description": "A Boolean value that indicates whether the app should use the new notifications API.",
          "fallback": false,
          "markdownDescription": "A Boolean value that indicates whether the app should use the new notifications API.",
          "type": "boolean",
        },
        "userInterfaceStyle": Object {
          "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "enum": Array [
            "light",
            "dark",
            "automatic",
          ],
          "fallback": "light",
          "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "type": "string",
        },
        "versionCode": Object {
          "description": "Version number required by Google Play. Increment by one for each release. Must be a positive integer. [Learn more](https://developer.android.com/studio/publish/versioning.html)

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`versionCode\`",
          "markdownDescription": "Version number required by Google Play. Increment by one for each release. Must be a positive integer. [Learn more](https://developer.android.com/studio/publish/versioning.html)

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`versionCode\`",
          "maximum": 2100000000,
          "meta": Object {
            "bareWorkflow": "This is set in \`android/app/build.gradle\` as \`versionCode\`",
          },
          "minimum": 0,
          "type": "integer",
        },
      },
      "type": "object",
    },
    "AndroidIntentFiltersData": Object {
      "additionalProperties": false,
      "properties": Object {
        "host": Object {
          "description": "the hostname, e.g. \`myapp.io\`",
          "markdownDescription": "the hostname, e.g. \`myapp.io\`",
          "type": "string",
        },
        "mimeType": Object {
          "description": "a MIME type for URLs that should be matched by the filter",
          "markdownDescription": "a MIME type for URLs that should be matched by the filter",
          "type": "string",
        },
        "path": Object {
          "description": "an exact path for URLs that should be matched by the filter, e.g. \`/records\`",
          "markdownDescription": "an exact path for URLs that should be matched by the filter, e.g. \`/records\`",
          "type": "string",
        },
        "pathPattern": Object {
          "description": " a regex for paths that should be matched by the filter, e.g. \`.*\`",
          "markdownDescription": " a regex for paths that should be matched by the filter, e.g. \`.*\`",
          "type": "string",
        },
        "pathPrefix": Object {
          "description": "a prefix for paths that should be matched by the filter, e.g. \`/records/\` will match \`/records/123\`",
          "markdownDescription": "a prefix for paths that should be matched by the filter, e.g. \`/records/\` will match \`/records/123\`",
          "type": "string",
        },
        "port": Object {
          "description": "the port, e.g. \`3000\`",
          "markdownDescription": "the port, e.g. \`3000\`",
          "type": "string",
        },
        "scheme": Object {
          "description": "the scheme of the URL, e.g. \`https\`",
          "markdownDescription": "the scheme of the URL, e.g. \`https\`",
          "type": "string",
        },
      },
      "type": "object",
    },
    "IOS": Object {
      "additionalProperties": false,
      "description": "Configuration that is specific to the iOS platform.",
      "markdownDescription": "Configuration that is specific to the iOS platform.",
      "meta": Object {
        "standaloneOnly": true,
      },
      "properties": Object {
        "accessesContactNotes": Object {
          "description": "A Boolean value that indicates whether the app may access the notes stored in contacts. You must [receive permission from Apple](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_contacts_notes) before you can submit your app for review with this capability.",
          "fallback": false,
          "markdownDescription": "A Boolean value that indicates whether the app may access the notes stored in contacts. You must [receive permission from Apple](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_contacts_notes) before you can submit your app for review with this capability.",
          "type": "boolean",
        },
        "appStoreUrl": Object {
          "description": "URL to your app on the Apple App Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
          "example": "https://apps.apple.com/us/app/expo-client/id982107779",
          "markdownDescription": "URL to your app on the Apple App Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
          "pattern": "^https://(itunes|apps)\\\\.apple\\\\.com/.*?\\\\d+",
          "type": Array [
            "string",
          ],
        },
        "associatedDomains": Object {
          "description": "An array that contains Associated Domains for the standalone app. See [Apple's docs for config](https://developer.apple.com/documentation/safariservices/supporting_associated_domains). 

**Bare workflow** - Use Xcode to set this. See [Apple's documentation](https://developer.apple.com/documentation/safariservices/supporting_associated_domains) for details.",
          "items": Object {
            "type": "string",
          },
          "markdownDescription": "An array that contains Associated Domains for the standalone app. See [Apple's docs for config](https://developer.apple.com/documentation/safariservices/supporting_associated_domains). 

**Bare workflow** - Use Xcode to set this. See [Apple's documentation](https://developer.apple.com/documentation/safariservices/supporting_associated_domains) for details.",
          "meta": Object {
            "bareWorkflow": "Use Xcode to set this. See [Apple's documentation](https://developer.apple.com/documentation/safariservices/supporting_associated_domains) for details.",
            "regexHuman": "Entries must follow the format \`applinks:<fully qualified domain>[:port number]\`. See [Apple's docs for details](https://developer.apple.com/documentation/safariservices/supporting_associated_domains)",
          },
          "type": "array",
          "uniqueItems": true,
        },
        "backgroundColor": Object {
          "description": "The background color for your iOS app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.",
          "markdownDescription": "The background color for your iOS app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.",
          "meta": Object {
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "buildNumber": Object {
          "description": "Build number for your iOS standalone app. Corresponds to \`CFBundleVersion\` and must match Apple's [specified format](https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102364). (Note: Transporter will pull the value for \`Version Number\` from \`expo.version\` and NOT from \`expo.ios.buildNumber\`.)

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleVersion\`",
          "markdownDescription": "Build number for your iOS standalone app. Corresponds to \`CFBundleVersion\` and must match Apple's [specified format](https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102364). (Note: Transporter will pull the value for \`Version Number\` from \`expo.version\` and NOT from \`expo.ios.buildNumber\`.)

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleVersion\`",
          "meta": Object {
            "bareWorkflow": "Set this value in \`info.plist\` under \`CFBundleVersion\`",
          },
          "pattern": "^[A-Za-z0-9\\\\.]+$",
          "type": "string",
        },
        "bundleIdentifier": Object {
          "description": "The bundle identifier for your iOS standalone app. You make it up, but it needs to be unique on the App Store. See [this StackOverflow question](http://stackoverflow.com/questions/11347470/what-does-bundle-identifier-mean-in-the-ios-project).

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
          "markdownDescription": "The bundle identifier for your iOS standalone app. You make it up, but it needs to be unique on the App Store. See [this StackOverflow question](http://stackoverflow.com/questions/11347470/what-does-bundle-identifier-mean-in-the-ios-project).

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
          "meta": Object {
            "bareWorkflow": "Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
            "regexHuman": "iOS bundle identifier notation unique name for your app. For example, \`host.exp.expo\`, where \`exp.host\` is our domain and \`expo\` is our app name.",
          },
          "pattern": "^[a-zA-Z0-9.-]+$",
          "patternErrorMessage": "iOS bundle identifier notation unique name for your app. For example, \`host.exp.expo\`, where \`exp.host\` is our domain and \`expo\` is our app name.",
          "type": "string",
        },
        "config": Object {
          "additionalProperties": false,
          "description": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
          "markdownDescription": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
          "properties": Object {
            "branch": Object {
              "additionalProperties": false,
              "description": "[Branch](https://branch.io/) key to hook up Branch linking services.",
              "markdownDescription": "[Branch](https://branch.io/) key to hook up Branch linking services.",
              "properties": Object {
                "apiKey": Object {
                  "description": "Your Branch API key",
                  "markdownDescription": "Your Branch API key",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "googleMapsApiKey": Object {
              "description": "[Google Maps iOS SDK](https://developers.google.com/maps/documentation/ios-sdk/start) key for your standalone app.",
              "markdownDescription": "[Google Maps iOS SDK](https://developers.google.com/maps/documentation/ios-sdk/start) key for your standalone app.",
              "type": "string",
            },
            "googleMobileAdsAppId": Object {
              "description": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
              "markdownDescription": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
              "type": "string",
            },
            "googleMobileAdsAutoInit": Object {
              "description": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Go and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`.](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
              "fallback": false,
              "markdownDescription": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Go and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`.](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
              "type": "boolean",
            },
            "googleSignIn": Object {
              "additionalProperties": false,
              "description": "[Google Sign-In iOS SDK](https://developers.google.com/identity/sign-in/ios/start-integrating) keys for your standalone app.",
              "markdownDescription": "[Google Sign-In iOS SDK](https://developers.google.com/identity/sign-in/ios/start-integrating) keys for your standalone app.",
              "properties": Object {
                "reservedClientId": Object {
                  "description": "The reserved client ID URL scheme. Can be found in \`GoogleService-Info.plist\`.",
                  "markdownDescription": "The reserved client ID URL scheme. Can be found in \`GoogleService-Info.plist\`.",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "usesNonExemptEncryption": Object {
              "description": "Sets \`ITSAppUsesNonExemptEncryption\` in the standalone ipa's Info.plist to the given boolean value.",
              "markdownDescription": "Sets \`ITSAppUsesNonExemptEncryption\` in the standalone ipa's Info.plist to the given boolean value.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "entitlements": Object {
          "additionalProperties": true,
          "description": "Dictionary of arbitrary configuration to add to your standalone app's native *.entitlements (plist). Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
          "markdownDescription": "Dictionary of arbitrary configuration to add to your standalone app's native *.entitlements (plist). Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
          "properties": Object {},
          "type": "object",
        },
        "googleServicesFile": Object {
          "description": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase.",
          "markdownDescription": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase.",
          "type": "string",
        },
        "icon": Object {
          "description": "Local path or remote URL to an image to use for your app's icon on iOS. If specified, this overrides the top-level \`icon\` key. Use a 1024x1024 icon which follows Apple's interface guidelines for icons, including color profile and transparency. 

 Expo will generate the other required sizes. This icon will appear on the home screen and within the Expo app.",
          "markdownDescription": "Local path or remote URL to an image to use for your app's icon on iOS. If specified, this overrides the top-level \`icon\` key. Use a 1024x1024 icon which follows Apple's interface guidelines for icons, including color profile and transparency. 

 Expo will generate the other required sizes. This icon will appear on the home screen and within the Expo app.",
          "meta": Object {
            "asset": true,
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
            "square": true,
          },
          "type": "string",
        },
        "infoPlist": Object {
          "additionalProperties": true,
          "description": "Dictionary of arbitrary configuration to add to your standalone app's native Info.plist. Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
          "markdownDescription": "Dictionary of arbitrary configuration to add to your standalone app's native Info.plist. Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
          "properties": Object {},
          "type": "object",
        },
        "isRemoteJSEnabled": Object {
          "description": "@deprecated Use \`updates.enabled\` instead.",
          "markdownDescription": "@deprecated Use \`updates.enabled\` instead.",
          "meta": Object {
            "deprecated": true,
          },
          "type": "boolean",
        },
        "isTabletOnly": Object {
          "description": "If true, indicates that your standalone iOS app does not support handsets, and only supports tablets.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
          "markdownDescription": "If true, indicates that your standalone iOS app does not support handsets, and only supports tablets.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
          "meta": Object {
            "bareWorkflow": "Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
          },
          "type": "boolean",
        },
        "loadJSInBackgroundExperimental": Object {
          "description": "@deprecated Use \`updates\` key with \`fallbackToCacheTimeout: 0\` instead.",
          "markdownDescription": "@deprecated Use \`updates\` key with \`fallbackToCacheTimeout: 0\` instead.",
          "meta": Object {
            "deprecated": true,
          },
          "type": "boolean",
        },
        "merchantId": Object {
          "description": "Merchant ID for use with Apple Pay in your standalone app.",
          "markdownDescription": "Merchant ID for use with Apple Pay in your standalone app.",
          "type": "string",
        },
        "requireFullScreen": Object {
          "description": "If true, indicates that your standalone iOS app does not support Slide Over and Split View on iPad. Defaults to \`true\` currently, but will change to \`false\` in a future SDK version.

**Bare workflow** - Use Xcode to set \`UIRequiresFullScreen\`",
          "markdownDescription": "If true, indicates that your standalone iOS app does not support Slide Over and Split View on iPad. Defaults to \`true\` currently, but will change to \`false\` in a future SDK version.

**Bare workflow** - Use Xcode to set \`UIRequiresFullScreen\`",
          "meta": Object {
            "bareWorkflow": "Use Xcode to set \`UIRequiresFullScreen\`",
          },
          "type": "boolean",
        },
        "splash": Object {
          "description": "Configuration for loading and splash screen for standalone iOS apps.",
          "markdownDescription": "Configuration for loading and splash screen for standalone iOS apps.",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to fill the loading screen background",
              "markdownDescription": "Color to fill the loading screen background",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "image": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "resizeMode": Object {
              "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "enum": Array [
                "cover",
                "contain",
              ],
              "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "type": "string",
            },
            "tabletImage": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "xib": Object {
              "description": "@deprecated Apple has deprecated \`.xib\` splash screens in favor of \`.storyboard\` files. Local path to a XIB file as the loading screen. It overrides other loading screen options. Note: This will only be used in the standalone app (i.e., after you build the app). It will not be used in the Expo Go.",
              "markdownDescription": "@deprecated Apple has deprecated \`.xib\` splash screens in favor of \`.storyboard\` files. Local path to a XIB file as the loading screen. It overrides other loading screen options. Note: This will only be used in the standalone app (i.e., after you build the app). It will not be used in the Expo Go.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".xib interface builder document",
                "contentTypePattern": "^text/xml$",
                "deprecated": true,
              },
              "type": "string",
            },
          },
          "type": "object",
        },
        "supportsTablet": Object {
          "description": "Whether your standalone iOS app supports tablet screen sizes. Defaults to \`false\`.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
          "markdownDescription": "Whether your standalone iOS app supports tablet screen sizes. Defaults to \`false\`.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
          "meta": Object {
            "bareWorkflow": "Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
          },
          "type": "boolean",
        },
        "userInterfaceStyle": Object {
          "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "enum": Array [
            "light",
            "dark",
            "automatic",
          ],
          "fallback": "light",
          "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "type": "string",
        },
        "usesAppleSignIn": Object {
          "description": "A boolean indicating if the app uses Apple Sign-In. See \`AppleAuthentication\` docs for details.",
          "fallback": false,
          "markdownDescription": "A boolean indicating if the app uses Apple Sign-In. See \`AppleAuthentication\` docs for details.",
          "type": "boolean",
        },
        "usesIcloudStorage": Object {
          "description": "A boolean indicating if the app uses iCloud Storage for \`DocumentPicker\`. See \`DocumentPicker\` docs for details.

**Bare workflow** - Use Xcode, or ios.entitlements to configure this.",
          "markdownDescription": "A boolean indicating if the app uses iCloud Storage for \`DocumentPicker\`. See \`DocumentPicker\` docs for details.

**Bare workflow** - Use Xcode, or ios.entitlements to configure this.",
          "meta": Object {
            "bareWorkflow": "Use Xcode, or ios.entitlements to configure this.",
          },
          "type": "boolean",
        },
      },
      "type": "object",
    },
    "PublishHook": Object {
      "additionalProperties": true,
      "properties": Object {
        "config": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
        "file": Object {
          "type": "string",
        },
      },
      "type": "object",
    },
    "Splash": Object {
      "description": "Configuration for loading and splash screen for standalone apps.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
      "markdownDescription": "Configuration for loading and splash screen for standalone apps.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
      "meta": Object {
        "bareWorkflow": "To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
      },
      "properties": Object {
        "backgroundColor": Object {
          "description": "Color to fill the loading screen background

**Bare workflow** - For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
          "markdownDescription": "Color to fill the loading screen background

**Bare workflow** - For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
          "meta": Object {
            "bareWorkflow": "For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "image": Object {
          "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
          "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
          "meta": Object {
            "asset": true,
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
          },
          "type": "string",
        },
        "resizeMode": Object {
          "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
          "enum": Array [
            "cover",
            "contain",
          ],
          "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
          "type": "string",
        },
      },
      "type": "object",
    },
    "Web": Object {
      "additionalProperties": true,
      "description": "Configuration that is specific to the web platform.",
      "markdownDescription": "Configuration that is specific to the web platform.",
      "properties": Object {
        "backgroundColor": Object {
          "description": "Defines the expected “background color” for the website. This value repeats what is already available in the site’s CSS, but can be used by browsers to draw the background color of a shortcut when the manifest is available before the stylesheet has loaded. This creates a smooth transition between launching the web application and loading the site's content.",
          "markdownDescription": "Defines the expected “background color” for the website. This value repeats what is already available in the site’s CSS, but can be used by browsers to draw the background color of a shortcut when the manifest is available before the stylesheet has loaded. This creates a smooth transition between launching the web application and loading the site's content.",
          "meta": Object {
            "pwa": "background_color",
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "barStyle": Object {
          "description": "If content is set to default, the status bar appears normal. If set to black, the status bar has a black background. If set to black-translucent, the status bar is black and translucent. If set to default or black, the web content is displayed below the status bar. If set to black-translucent, the web content is displayed on the entire screen, partially obscured by the status bar.",
          "enum": Array [
            "default",
            "black",
            "black-translucent",
          ],
          "fallback": "black-translucent",
          "markdownDescription": "If content is set to default, the status bar appears normal. If set to black, the status bar has a black background. If set to black-translucent, the status bar is black and translucent. If set to default or black, the web content is displayed below the status bar. If set to black-translucent, the web content is displayed on the entire screen, partially obscured by the status bar.",
          "meta": Object {
            "html": "apple-mobile-web-app-status-bar-style",
            "pwa": "name",
          },
          "type": "string",
        },
        "config": Object {
          "description": "Firebase web configuration. Used by the expo-firebase packages on both web and native. [Learn more](https://firebase.google.com/docs/reference/js/firebase.html#initializeapp)",
          "markdownDescription": "Firebase web configuration. Used by the expo-firebase packages on both web and native. [Learn more](https://firebase.google.com/docs/reference/js/firebase.html#initializeapp)",
          "properties": Object {
            "firebase": Object {
              "properties": Object {
                "apiKey": Object {
                  "type": "string",
                },
                "appId": Object {
                  "type": "string",
                },
                "authDomain": Object {
                  "type": "string",
                },
                "databaseURL": Object {
                  "type": "string",
                },
                "measurementId": Object {
                  "type": "string",
                },
                "messagingSenderId": Object {
                  "type": "string",
                },
                "projectId": Object {
                  "type": "string",
                },
                "storageBucket": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
        "dangerous": Object {
          "additionalProperties": true,
          "description": "Experimental features. These will break without deprecation notice.",
          "markdownDescription": "Experimental features. These will break without deprecation notice.",
          "properties": Object {},
          "type": "object",
        },
        "description": Object {
          "description": "Provides a general description of what the pinned website does.",
          "markdownDescription": "Provides a general description of what the pinned website does.",
          "meta": Object {
            "html": "description",
            "pwa": "description",
          },
          "type": "string",
        },
        "dir": Object {
          "description": "Specifies the primary text direction for the name, short_name, and description members. Together with the lang member, it helps the correct display of right-to-left languages.",
          "enum": Array [
            "auto",
            "ltr",
            "rtl",
          ],
          "markdownDescription": "Specifies the primary text direction for the name, short_name, and description members. Together with the lang member, it helps the correct display of right-to-left languages.",
          "meta": Object {
            "pwa": "dir",
          },
          "type": "string",
        },
        "display": Object {
          "description": "Defines the developers’ preferred display mode for the website.",
          "enum": Array [
            "fullscreen",
            "standalone",
            "minimal-ui",
            "browser",
          ],
          "markdownDescription": "Defines the developers’ preferred display mode for the website.",
          "meta": Object {
            "pwa": "display",
          },
          "type": "string",
        },
        "favicon": Object {
          "description": "Relative path of an image to use for your app's favicon.",
          "markdownDescription": "Relative path of an image to use for your app's favicon.",
          "type": "string",
        },
        "lang": Object {
          "description": "Specifies the primary language for the values in the name and short_name members. This value is a string containing a single language tag.",
          "fallback": "en",
          "markdownDescription": "Specifies the primary language for the values in the name and short_name members. This value is a string containing a single language tag.",
          "meta": Object {
            "pwa": "lang",
          },
          "type": "string",
        },
        "name": Object {
          "description": "Defines the title of the document, defaults to the outer level name",
          "markdownDescription": "Defines the title of the document, defaults to the outer level name",
          "meta": Object {
            "pwa": "name",
          },
          "type": "string",
        },
        "orientation": Object {
          "description": "Defines the default orientation for all the website's top level browsing contexts.",
          "enum": Array [
            "any",
            "natural",
            "landscape",
            "landscape-primary",
            "landscape-secondary",
            "portrait",
            "portrait-primary",
            "portrait-secondary",
          ],
          "markdownDescription": "Defines the default orientation for all the website's top level browsing contexts.",
          "meta": Object {
            "pwa": "orientation",
          },
          "type": "string",
        },
        "preferRelatedApplications": Object {
          "description": "Hints for the user agent to indicate to the user that the specified native applications (defined in expo.ios and expo.android) are recommended over the website.",
          "fallback": true,
          "markdownDescription": "Hints for the user agent to indicate to the user that the specified native applications (defined in expo.ios and expo.android) are recommended over the website.",
          "meta": Object {
            "pwa": "prefer_related_applications",
          },
          "type": "boolean",
        },
        "scope": Object {
          "description": "Defines the navigation scope of this website's context. This restricts what web pages can be viewed while the manifest is applied. If the user navigates outside the scope, it returns to a normal web page inside a browser tab/window. If the scope is a relative URL, the base URL will be the URL of the manifest.",
          "markdownDescription": "Defines the navigation scope of this website's context. This restricts what web pages can be viewed while the manifest is applied. If the user navigates outside the scope, it returns to a normal web page inside a browser tab/window. If the scope is a relative URL, the base URL will be the URL of the manifest.",
          "meta": Object {
            "pwa": "scope",
          },
          "type": "string",
        },
        "shortName": Object {
          "description": "A short version of the app's name, 12 characters or fewer. Used in app launcher and new tab pages. Maps to \`short_name\` in the PWA manifest.json. Defaults to the \`name\` property.",
          "markdownDescription": "A short version of the app's name, 12 characters or fewer. Used in app launcher and new tab pages. Maps to \`short_name\` in the PWA manifest.json. Defaults to the \`name\` property.",
          "meta": Object {
            "pwa": "short_name",
            "regexHuman": "Maximum 12 characters long",
          },
          "type": "string",
        },
        "splash": Object {
          "description": "Configuration for PWA splash screens.

**Bare workflow** - Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
          "markdownDescription": "Configuration for PWA splash screens.

**Bare workflow** - Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
          "meta": Object {
            "bareWorkflow": "Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
          },
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to fill the loading screen background",
              "markdownDescription": "Color to fill the loading screen background",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "image": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "resizeMode": Object {
              "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "enum": Array [
                "cover",
                "contain",
              ],
              "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "type": "string",
            },
          },
          "type": "object",
        },
        "startUrl": Object {
          "description": "The URL that loads when a user launches the application (e.g., when added to home screen), typically the index. Note: This has to be a relative URL, relative to the manifest URL.",
          "markdownDescription": "The URL that loads when a user launches the application (e.g., when added to home screen), typically the index. Note: This has to be a relative URL, relative to the manifest URL.",
          "meta": Object {
            "pwa": "start_url",
          },
          "type": "string",
        },
        "themeColor": Object {
          "description": "Defines the color of the Android tool bar, and may be reflected in the app's preview in task switchers.",
          "markdownDescription": "Defines the color of the Android tool bar, and may be reflected in the app's preview in task switchers.",
          "meta": Object {
            "html": "theme-color",
            "pwa": "theme_color",
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
      },
      "type": "object",
    },
  },
  "description": "The Expo manifest (app.json) validation and documentation.",
  "properties": Object {
    "expo": Object {
      "additionalProperties": false,
      "properties": Object {
        "_internal": Object {
          "additionalProperties": true,
          "description": "Internal properties for developer tools",
          "markdownDescription": "Internal properties for developer tools",
          "properties": Object {
            "pluginHistory": Object {
              "additionalProperties": true,
              "description": "List of plugins already run on the config",
              "markdownDescription": "List of plugins already run on the config",
              "properties": Object {},
              "type": "object",
            },
          },
          "type": "object",
        },
        "android": Object {
          "$ref": "#/definitions/Android",
        },
        "androidNavigationBar": Object {
          "additionalProperties": false,
          "description": "Configuration for the bottom navigation bar on Android.",
          "markdownDescription": "Configuration for the bottom navigation bar on Android.",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Specifies the background color of the navigation bar.",
              "markdownDescription": "Specifies the background color of the navigation bar.",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "barStyle": Object {
              "description": "Configure the navigation bar icons to have a light or dark color. Supported on Android Oreo and newer. Valid values: \`'light-content'\`, \`'dark-content'\`",
              "enum": Array [
                "light-content",
                "dark-content",
              ],
              "markdownDescription": "Configure the navigation bar icons to have a light or dark color. Supported on Android Oreo and newer. Valid values: \`'light-content'\`, \`'dark-content'\`",
              "type": "string",
            },
            "visible": Object {
              "description": "Determines how and when the navigation bar is shown. [Learn more](https://developer.android.com/training/system-ui/immersive). Valid values: \`leanback\`, \`immersive\`, \`sticky-immersive\` 

 \`leanback\` results in the navigation bar being hidden until the first touch gesture is registered. 

 \`immersive\` results in the navigation bar being hidden until the user swipes up from the edge where the navigation bar is hidden. 

 \`sticky-immersive\` is identical to \`'immersive'\` except that the navigation bar will be semi-transparent and will be hidden again after a short period of time",
              "enum": Array [
                "leanback",
                "immersive",
                "sticky-immersive",
              ],
              "markdownDescription": "Determines how and when the navigation bar is shown. [Learn more](https://developer.android.com/training/system-ui/immersive). Valid values: \`leanback\`, \`immersive\`, \`sticky-immersive\` 

 \`leanback\` results in the navigation bar being hidden until the first touch gesture is registered. 

 \`immersive\` results in the navigation bar being hidden until the user swipes up from the edge where the navigation bar is hidden. 

 \`sticky-immersive\` is identical to \`'immersive'\` except that the navigation bar will be semi-transparent and will be hidden again after a short period of time",
              "type": "string",
            },
          },
          "type": "object",
        },
        "androidStatusBar": Object {
          "additionalProperties": false,
          "description": "Configuration for the status bar on Android. For more details please navigate to [Configuring StatusBar](https://docs.expo.io/guides/configuring-statusbar/).",
          "markdownDescription": "Configuration for the status bar on Android. For more details please navigate to [Configuring StatusBar](https://docs.expo.io/guides/configuring-statusbar/).",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Specifies the background color of the status bar. Defaults to \`#00000000\` (transparent) for \`dark-content\` bar style and \`#00000088\` (semi-transparent black) for \`light-content\` bar style",
              "markdownDescription": "Specifies the background color of the status bar. Defaults to \`#00000000\` (transparent) for \`dark-content\` bar style and \`#00000088\` (semi-transparent black) for \`light-content\` bar style",
              "meta": Object {
                "regexHuman": "6 character long hex color string \`'#RRGGBB'\`, for example, \`'#000000'\` for black. Or 8 character long hex color string \`'#RRGGBBAA'\`, for example, \`'#00000088'\` for semi-transparent black.",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string \`'#RRGGBB'\`, for example, \`'#000000'\` for black. Or 8 character long hex color string \`'#RRGGBBAA'\`, for example, \`'#00000088'\` for semi-transparent black.",
              "type": "string",
            },
            "barStyle": Object {
              "description": "Configures the status bar icons to have a light or dark color. Valid values: \`light-content\`, \`dark-content\`. Defaults to \`dark-content\`",
              "enum": Array [
                "light-content",
                "dark-content",
              ],
              "markdownDescription": "Configures the status bar icons to have a light or dark color. Valid values: \`light-content\`, \`dark-content\`. Defaults to \`dark-content\`",
              "type": "string",
            },
            "hidden": Object {
              "description": "Instructs the system whether the status bar should be visible or not. Defaults to \`false\`",
              "markdownDescription": "Instructs the system whether the status bar should be visible or not. Defaults to \`false\`",
              "type": "boolean",
            },
            "translucent": Object {
              "description": "Sets \`android:windowTranslucentStatus\` in \`styles.xml\`. When false, the system status bar pushes the content of your app down (similar to \`position: relative\`). When true, the status bar floats above the content in your app (similar to \`position: absolute\`). Defaults to \`true\` to match the iOS status bar behavior (which can only float above content).",
              "markdownDescription": "Sets \`android:windowTranslucentStatus\` in \`styles.xml\`. When false, the system status bar pushes the content of your app down (similar to \`position: relative\`). When true, the status bar floats above the content in your app (similar to \`position: absolute\`). Defaults to \`true\` to match the iOS status bar behavior (which can only float above content).",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "androidStatusBarColor": Object {
          "description": "@deprecated Use \`androidStatusBar\` instead.",
          "markdownDescription": "@deprecated Use \`androidStatusBar\` instead.",
          "meta": Object {
            "deprecated": true,
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "appKey": Object {
          "description": "By default, Expo looks for the application registered with the AppRegistry as \`main\`. If you would like to change this, you can specify the name in this property.",
          "markdownDescription": "By default, Expo looks for the application registered with the AppRegistry as \`main\`. If you would like to change this, you can specify the name in this property.",
          "type": "string",
        },
        "assetBundlePatterns": Object {
          "description": "An array of file glob strings which point to assets that will be bundled within your standalone app binary. Read more in the [Offline Support guide](https://docs.expo.io/guides/offline-support/)",
          "items": Object {
            "type": "string",
          },
          "markdownDescription": "An array of file glob strings which point to assets that will be bundled within your standalone app binary. Read more in the [Offline Support guide](https://docs.expo.io/guides/offline-support/)",
          "type": "array",
        },
        "backgroundColor": Object {
          "description": "The background color for your app, behind any of your React views. This is also known as the root view background color.",
          "markdownDescription": "The background color for your app, behind any of your React views. This is also known as the root view background color.",
          "meta": Object {
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`. Default is white: \`'#ffffff'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`. Default is white: \`'#ffffff'\`",
          "type": "string",
        },
        "currentFullName": Object {
          "autogenerated": true,
          "description": "The auto generated Expo account name and slug used for display purposes. Formatted like \`@username/slug\`. When unauthenticated, the username is \`@anonymous\`. For published projects, this value may change when a project is transferred between accounts or renamed.",
          "markdownDescription": "The auto generated Expo account name and slug used for display purposes. Formatted like \`@username/slug\`. When unauthenticated, the username is \`@anonymous\`. For published projects, this value may change when a project is transferred between accounts or renamed.",
          "type": "string",
        },
        "description": Object {
          "description": "A short description of what your app is and why it is great.",
          "markdownDescription": "A short description of what your app is and why it is great.",
          "type": "string",
        },
        "developmentClient": Object {
          "additionalProperties": false,
          "description": "Settings that apply specifically to running this app in a development client",
          "markdownDescription": "Settings that apply specifically to running this app in a development client",
          "properties": Object {
            "silentLaunch": Object {
              "description": "If true, the app will launch in a development client with no additional dialogs or progress indicators, just like in a standalone app.",
              "fallback": false,
              "markdownDescription": "If true, the app will launch in a development client with no additional dialogs or progress indicators, just like in a standalone app.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "entryPoint": Object {
          "description": "The relative path to your main JavaScript file.",
          "markdownDescription": "The relative path to your main JavaScript file.",
          "type": "string",
        },
        "experiments": Object {
          "additionalProperties": false,
          "description": "Enable experimental features that may be unstable, unsupported, or removed without deprecation notices.",
          "markdownDescription": "Enable experimental features that may be unstable, unsupported, or removed without deprecation notices.",
          "properties": Object {
            "turboModules": Object {
              "description": "Enables Turbo Modules, which are a type of native modules that use a different way of communicating between JS and platform code. When installing a Turbo Module you will need to enable this experimental option (the library still needs to be a part of Expo SDK already, like react-native-reanimated v2). Turbo Modules do not support remote debugging and enabling this option will disable remote debugging.",
              "fallback": false,
              "markdownDescription": "Enables Turbo Modules, which are a type of native modules that use a different way of communicating between JS and platform code. When installing a Turbo Module you will need to enable this experimental option (the library still needs to be a part of Expo SDK already, like react-native-reanimated v2). Turbo Modules do not support remote debugging and enabling this option will disable remote debugging.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "extra": Object {
          "additionalProperties": true,
          "description": "Any extra fields you want to pass to your experience. Values are accessible via \`Expo.Constants.manifest.extra\` ([Learn more](https://docs.expo.io/versions/latest/sdk/constants/#constantsmanifest))",
          "markdownDescription": "Any extra fields you want to pass to your experience. Values are accessible via \`Expo.Constants.manifest.extra\` ([Learn more](https://docs.expo.io/versions/latest/sdk/constants/#constantsmanifest))",
          "properties": Object {},
          "type": "object",
        },
        "facebookAdvertiserIDCollectionEnabled": Object {
          "description": "Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA and Android Advertising ID, automatically. If you don't set this property, Facebook's default policy will be used. (Applicable only to standalone apps.)

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA and Android Advertising ID, automatically. If you don't set this property, Facebook's default policy will be used. (Applicable only to standalone apps.)

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "boolean",
        },
        "facebookAppId": Object {
          "description": "Used for all Facebook libraries. Set up your Facebook App ID at https://developers.facebook.com.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for all Facebook libraries. Set up your Facebook App ID at https://developers.facebook.com.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "pattern": "^[0-9]+$",
          "type": "string",
        },
        "facebookAutoInitEnabled": Object {
          "description": "Whether the Facebook SDK should be initialized automatically. The default in Expo (Client and in standalone apps) is \`false\`.",
          "markdownDescription": "Whether the Facebook SDK should be initialized automatically. The default in Expo (Client and in standalone apps) is \`false\`.",
          "type": "boolean",
        },
        "facebookAutoLogAppEventsEnabled": Object {
          "description": "Whether the Facebook SDK log app events automatically. If you don't set this property, Facebook's default will be used. (Applicable only to standalone apps.) Note: The Facebook SDK must be initialized for app events to work. You may autoinitialize Facebook SDK by setting \`facebookAutoInitEnabled\` to \`true\`

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Whether the Facebook SDK log app events automatically. If you don't set this property, Facebook's default will be used. (Applicable only to standalone apps.) Note: The Facebook SDK must be initialized for app events to work. You may autoinitialize Facebook SDK by setting \`facebookAutoInitEnabled\` to \`true\`

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "boolean",
        },
        "facebookDisplayName": Object {
          "description": "Used for native Facebook login.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for native Facebook login.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "string",
        },
        "facebookScheme": Object {
          "description": "Used for Facebook native login. Starts with 'fb' and followed by a string of digits, like 'fb1234567890'. You can find your scheme [here](https://developers.facebook.com/docs/facebook-login/ios)in the 'Configuring Your info.plist' section (only applicable to standalone apps and custom Expo Go apps).

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for Facebook native login. Starts with 'fb' and followed by a string of digits, like 'fb1234567890'. You can find your scheme [here](https://developers.facebook.com/docs/facebook-login/ios)in the 'Configuring Your info.plist' section (only applicable to standalone apps and custom Expo Go apps).

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "pattern": "^fb[0-9]+[A-Za-z]*$",
          "type": "string",
        },
        "githubUrl": Object {
          "description": "If you would like to share the source code of your app on Github, enter the URL for the repository here and it will be linked to from your Expo project page.",
          "example": "https://github.com/expo/expo",
          "markdownDescription": "If you would like to share the source code of your app on Github, enter the URL for the repository here and it will be linked to from your Expo project page.",
          "pattern": "^https://github\\\\.com/",
          "type": Array [
            "string",
          ],
        },
        "hooks": Object {
          "additionalProperties": false,
          "description": "Configuration for scripts to run to hook into the publish process",
          "markdownDescription": "Configuration for scripts to run to hook into the publish process",
          "properties": Object {
            "postExport": Object {
              "items": Object {
                "$ref": "#/definitions/PublishHook",
              },
              "type": "array",
            },
            "postPublish": Object {
              "items": Object {
                "$ref": "#/definitions/PublishHook",
              },
              "type": "array",
            },
          },
          "type": "object",
        },
        "icon": Object {
          "description": "Local path or remote URL to an image to use for your app's icon. We recommend that you use a 1024x1024 png file. This icon will appear on the home screen and within the Expo app.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
          "markdownDescription": "Local path or remote URL to an image to use for your app's icon. We recommend that you use a 1024x1024 png file. This icon will appear on the home screen and within the Expo app.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
          "meta": Object {
            "asset": true,
            "bareWorkflow": "To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
            "square": true,
          },
          "type": "string",
        },
        "ios": Object {
          "$ref": "#/definitions/IOS",
        },
        "locales": Object {
          "additionalProperties": Object {
            "type": Array [
              "string",
              "object",
            ],
          },
          "description": "Provide overrides by locale for System Dialog prompts like Permissions Boxes

**Bare workflow** - To add or change language and localization information in your iOS app, you need to use Xcode.",
          "markdownDescription": "Provide overrides by locale for System Dialog prompts like Permissions Boxes

**Bare workflow** - To add or change language and localization information in your iOS app, you need to use Xcode.",
          "meta": Object {
            "bareWorkflow": "To add or change language and localization information in your iOS app, you need to use Xcode.",
          },
          "properties": Object {},
          "type": "object",
        },
        "name": Object {
          "description": "The name of your app as it appears both within Expo Go and on your home screen as a standalone app.

**Bare workflow** - To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          "markdownDescription": "The name of your app as it appears both within Expo Go and on your home screen as a standalone app.

**Bare workflow** - To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          "meta": Object {
            "bareWorkflow": "To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          },
          "type": "string",
        },
        "notification": Object {
          "additionalProperties": false,
          "description": "Configuration for remote (push) notifications.",
          "markdownDescription": "Configuration for remote (push) notifications.",
          "properties": Object {
            "androidCollapsedTitle": Object {
              "description": "If \`androidMode\` is set to \`collapse\`, this title is used for the collapsed notification message. For example, \`'#{unread_notifications} new interactions'\`.",
              "markdownDescription": "If \`androidMode\` is set to \`collapse\`, this title is used for the collapsed notification message. For example, \`'#{unread_notifications} new interactions'\`.",
              "type": "string",
            },
            "androidMode": Object {
              "description": "Show each push notification individually (\`default\`) or collapse into one (\`collapse\`).",
              "enum": Array [
                "default",
                "collapse",
              ],
              "markdownDescription": "Show each push notification individually (\`default\`) or collapse into one (\`collapse\`).",
              "type": "string",
            },
            "color": Object {
              "description": "(Android only) Tint color for the push notification image when it appears in the notification tray. Defaults to \`#ffffff\`",
              "markdownDescription": "(Android only) Tint color for the push notification image when it appears in the notification tray. Defaults to \`#ffffff\`",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "icon": Object {
              "description": "(Android only) Local path or remote URL to an image to use as the icon for push notifications. 96x96 png grayscale with transparency. We recommend following [Google's design guidelines](https://material.io/design/iconography/product-icons.html#design-principles). If not provided, defaults to your app icon.",
              "markdownDescription": "(Android only) Local path or remote URL to an image to use as the icon for push notifications. 96x96 png grayscale with transparency. We recommend following [Google's design guidelines](https://material.io/design/iconography/product-icons.html#design-principles). If not provided, defaults to your app icon.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
            "iosDisplayInForeground": Object {
              "description": "Whether or not to display notifications when the app is in the foreground on iOS. \`_displayInForeground\` option in the individual push notification message overrides this option. [Learn more.](https://docs.expo.io/push-notifications/receiving-notifications/#foreground-notification-behavior) Defaults to \`false\`.",
              "markdownDescription": "Whether or not to display notifications when the app is in the foreground on iOS. \`_displayInForeground\` option in the individual push notification message overrides this option. [Learn more.](https://docs.expo.io/push-notifications/receiving-notifications/#foreground-notification-behavior) Defaults to \`false\`.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "orientation": Object {
          "description": "Locks your app to a specific orientation with portrait or landscape. Defaults to no lock. Valid values: \`default\`, \`portrait\`, \`landscape\`",
          "enum": Array [
            "default",
            "portrait",
            "landscape",
          ],
          "markdownDescription": "Locks your app to a specific orientation with portrait or landscape. Defaults to no lock. Valid values: \`default\`, \`portrait\`, \`landscape\`",
          "type": "string",
        },
        "originalFullName": Object {
          "autogenerated": true,
          "description": "The auto generated Expo account name and slug used for services like Notifications and AuthSession proxy. Formatted like \`@username/slug\`. When unauthenticated, the username is \`@anonymous\`. For published projects, this value will not change when a project is transferred between accounts or renamed.",
          "markdownDescription": "The auto generated Expo account name and slug used for services like Notifications and AuthSession proxy. Formatted like \`@username/slug\`. When unauthenticated, the username is \`@anonymous\`. For published projects, this value will not change when a project is transferred between accounts or renamed.",
          "type": "string",
        },
        "owner": Object {
          "description": "The name of the Expo account that owns the project. This is useful for teams collaborating on a project. If not provided, the owner defaults to the username of the current user.",
          "markdownDescription": "The name of the Expo account that owns the project. This is useful for teams collaborating on a project. If not provided, the owner defaults to the username of the current user.",
          "minLength": 1,
          "type": "string",
        },
        "platforms": Object {
          "description": "Platforms that your project explicitly supports. If not specified, it defaults to \`[\\"ios\\", \\"android\\"]\`.",
          "example": Array [
            "ios",
            "android",
            "web",
          ],
          "items": Object {
            "enum": Array [
              "android",
              "ios",
              "web",
            ],
            "type": "string",
          },
          "markdownDescription": "Platforms that your project explicitly supports. If not specified, it defaults to \`[\\"ios\\", \\"android\\"]\`.",
          "type": "array",
          "uniqueItems": true,
        },
        "plugins": Object {
          "description": "Config plugins for adding extra functionality to your project. [Learn more](https://docs.expo.io/guides/config-plugins/).

**Bare workflow** - Plugins that add modifications can only be used with [prebuilding](https://expo.fyi/prebuilding) and managed EAS Build",
          "items": Object {
            "anyOf": Array [
              Object {
                "type": Array [
                  "string",
                ],
              },
              Object {
                "additionalItems": false,
                "items": Array [
                  Object {
                    "type": Array [
                      "string",
                    ],
                  },
                  Object {},
                ],
                "type": "array",
              },
            ],
          },
          "markdownDescription": "Config plugins for adding extra functionality to your project. [Learn more](https://docs.expo.io/guides/config-plugins/).

**Bare workflow** - Plugins that add modifications can only be used with [prebuilding](https://expo.fyi/prebuilding) and managed EAS Build",
          "meta": Object {
            "bareWorkflow": "Plugins that add modifications can only be used with [prebuilding](https://expo.fyi/prebuilding) and managed EAS Build",
          },
          "type": "array",
        },
        "primaryColor": Object {
          "description": "On Android, this will determine the color of your app in the multitasker. Currently this is not used on iOS, but it may be used for other purposes in the future.",
          "markdownDescription": "On Android, this will determine the color of your app in the multitasker. Currently this is not used on iOS, but it may be used for other purposes in the future.",
          "meta": Object {
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "privacy": Object {
          "description": "Defaults to \`unlisted\`. \`unlisted\` hides the project from search results. \`hidden\` restricts access to the project page to only the owner and other users that have been granted access. Valid values: \`public\`, \`unlisted\`, \`hidden\`.",
          "enum": Array [
            "public",
            "unlisted",
            "hidden",
          ],
          "fallback": "unlisted",
          "markdownDescription": "Defaults to \`unlisted\`. \`unlisted\` hides the project from search results. \`hidden\` restricts access to the project page to only the owner and other users that have been granted access. Valid values: \`public\`, \`unlisted\`, \`hidden\`.",
          "type": "string",
        },
        "runtimeVersion": Object {
          "description": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest for bare workflow projects. If provided, this must match the version set in Expo.plist or AndroidManifest.xml.",
          "markdownDescription": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest for bare workflow projects. If provided, this must match the version set in Expo.plist or AndroidManifest.xml.",
          "meta": Object {
            "regexHuman": "A string beginning with an alphanumeric character followed by any combination of alphanumeric character, \\"_\\", \\"+\\", \\".\\" or \\"-\\". Example: \\"1.0.3a+\\".",
          },
          "pattern": "^[a-zA-Z\\\\d][a-zA-Z\\\\d._+-]*$",
          "patternErrorMessage": "A string beginning with an alphanumeric character followed by any combination of alphanumeric character, \\"_\\", \\"+\\", \\".\\" or \\"-\\". Example: \\"1.0.3a+\\".",
          "type": "string",
        },
        "scheme": Object {
          "description": "**Standalone Apps Only**. URL scheme to link into your app. For example, if we set this to \`'demo'\`, then demo:// URLs would open your app when tapped.

**Bare workflow** - To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
          "markdownDescription": "**Standalone Apps Only**. URL scheme to link into your app. For example, if we set this to \`'demo'\`, then demo:// URLs would open your app when tapped.

**Bare workflow** - To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
          "meta": Object {
            "bareWorkflow": "To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
            "regexHuman": "String beginning with a **lowercase** letter followed by any combination of **lowercase** letters, digits, \\"+\\", \\".\\" or \\"-\\"",
            "standaloneOnly": true,
          },
          "pattern": "^[a-z][a-z0-9+.-]*$",
          "patternErrorMessage": "String beginning with a **lowercase** letter followed by any combination of **lowercase** letters, digits, \\"+\\", \\".\\" or \\"-\\"",
          "type": "string",
        },
        "sdkVersion": Object {
          "description": "The Expo sdkVersion to run the project on. This should line up with the version specified in your package.json.",
          "markdownDescription": "The Expo sdkVersion to run the project on. This should line up with the version specified in your package.json.",
          "pattern": "^(\\\\d+\\\\.\\\\d+\\\\.\\\\d+)|(UNVERSIONED)$",
          "type": "string",
        },
        "slug": Object {
          "description": "The friendly URL name for publishing. For example, \`myAppName\` will refer to the \`expo.io/@project-owner/myAppName\` project.",
          "markdownDescription": "The friendly URL name for publishing. For example, \`myAppName\` will refer to the \`expo.io/@project-owner/myAppName\` project.",
          "pattern": "^[a-zA-Z0-9_\\\\-]+$",
          "type": "string",
        },
        "splash": Object {
          "$ref": "#/definitions/Splash",
        },
        "updates": Object {
          "additionalProperties": false,
          "description": "Configuration for how and when the app should request OTA JavaScript updates",
          "markdownDescription": "Configuration for how and when the app should request OTA JavaScript updates",
          "properties": Object {
            "checkAutomatically": Object {
              "description": "By default, Expo will check for updates every time the app is loaded. Set this to \`ON_ERROR_RECOVERY\` to disable automatic checking unless recovering from an error. Must be one of \`ON_LOAD\` or \`ON_ERROR_RECOVERY\`",
              "enum": Array [
                "ON_ERROR_RECOVERY",
                "ON_LOAD",
              ],
              "markdownDescription": "By default, Expo will check for updates every time the app is loaded. Set this to \`ON_ERROR_RECOVERY\` to disable automatic checking unless recovering from an error. Must be one of \`ON_LOAD\` or \`ON_ERROR_RECOVERY\`",
              "type": "string",
            },
            "enabled": Object {
              "description": "If set to false, your standalone app will never download any code, and will only use code bundled locally on the device. In that case, all updates to your app must be submitted through Apple review. Defaults to true. (Note: This will not work out of the box with ExpoKit projects)",
              "markdownDescription": "If set to false, your standalone app will never download any code, and will only use code bundled locally on the device. In that case, all updates to your app must be submitted through Apple review. Defaults to true. (Note: This will not work out of the box with ExpoKit projects)",
              "type": "boolean",
            },
            "fallbackToCacheTimeout": Object {
              "description": "How long (in ms) to allow for fetching OTA updates before falling back to a cached version of the app. Defaults to 0. Must be between 0 and 300000 (5 minutes).",
              "markdownDescription": "How long (in ms) to allow for fetching OTA updates before falling back to a cached version of the app. Defaults to 0. Must be between 0 and 300000 (5 minutes).",
              "maximum": 300000,
              "minimum": 0,
              "type": "number",
            },
          },
          "type": "object",
        },
        "userInterfaceStyle": Object {
          "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "enum": Array [
            "light",
            "dark",
            "automatic",
          ],
          "fallback": "light",
          "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "type": "string",
        },
        "version": Object {
          "description": "Your app version. In addition to this field, you'll also use \`ios.buildNumber\` and \`android.versionCode\` — read more about how to version your app [here](https://docs.expo.io/distribution/app-stores/#versioning-your-app). On iOS this corresponds to \`CFBundleShortVersionString\`, and on Android, this corresponds to \`versionName\`. The required format can be found [here](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring).

**Bare workflow** - To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          "markdownDescription": "Your app version. In addition to this field, you'll also use \`ios.buildNumber\` and \`android.versionCode\` — read more about how to version your app [here](https://docs.expo.io/distribution/app-stores/#versioning-your-app). On iOS this corresponds to \`CFBundleShortVersionString\`, and on Android, this corresponds to \`versionName\`. The required format can be found [here](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring).

**Bare workflow** - To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          "meta": Object {
            "bareWorkflow": "To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          },
          "type": "string",
        },
        "web": Object {
          "$ref": "#/definitions/Web",
        },
      },
      "required": Array [
        "name",
        "slug",
      ],
      "type": "object",
    },
  },
  "type": "object",
  "version": "41.0.0.0.0",
}
`;

exports[`vscodeSchema creates expected SDK 45 schema 1`] = `
Object {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": true,
  "definitions": Object {
    "Android": Object {
      "additionalProperties": false,
      "description": "Configuration that is specific to the Android platform.",
      "markdownDescription": "Configuration that is specific to the Android platform.",
      "meta": Object {
        "standaloneOnly": true,
      },
      "properties": Object {
        "adaptiveIcon": Object {
          "additionalProperties": false,
          "description": "Settings for an Adaptive Launcher Icon on Android. [Learn more](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)",
          "markdownDescription": "Settings for an Adaptive Launcher Icon on Android. [Learn more](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to use as the background for your app's Adaptive Icon on Android. Defaults to white, \`#FFFFFF\`. Has no effect if \`foregroundImage\` is not specified.",
              "markdownDescription": "Color to use as the background for your app's Adaptive Icon on Android. Defaults to white, \`#FFFFFF\`. Has no effect if \`foregroundImage\` is not specified.",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "backgroundImage": Object {
              "description": "Local path or remote URL to a background image for your app's Adaptive Icon on Android. If specified, this overrides the \`backgroundColor\` key. Must have the same dimensions as  foregroundImage\`, and has no effect if \`foregroundImage\` is not specified. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive).",
              "markdownDescription": "Local path or remote URL to a background image for your app's Adaptive Icon on Android. If specified, this overrides the \`backgroundColor\` key. Must have the same dimensions as  foregroundImage\`, and has no effect if \`foregroundImage\` is not specified. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive).",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
            "foregroundImage": Object {
              "description": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` and the \`android.icon\` keys. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive). This icon will appear on the home screen.",
              "markdownDescription": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` and the \`android.icon\` keys. Should follow the [specified guidelines](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive). This icon will appear on the home screen.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
          },
          "type": "object",
        },
        "allowBackup": Object {
          "description": "Allows your user's app data to be automatically backed up to their Google Drive. If this is set to false, no backup or restore of the application will ever be performed (this is useful if your app deals with sensitive information). Defaults to the Android default, which is \`true\`.",
          "fallback": true,
          "markdownDescription": "Allows your user's app data to be automatically backed up to their Google Drive. If this is set to false, no backup or restore of the application will ever be performed (this is useful if your app deals with sensitive information). Defaults to the Android default, which is \`true\`.",
          "type": "boolean",
        },
        "backgroundColor": Object {
          "description": "The background color for your Android app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.

**Bare workflow** - This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
          "markdownDescription": "The background color for your Android app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present.

**Bare workflow** - This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
          "meta": Object {
            "bareWorkflow": "This is set in \`android/app/src/main/AndroidManifest.xml\` under \`android:windowBackground\`",
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "blockedPermissions": Object {
          "description": "List of permissions to block in the final \`AndroidManifest.xml\`. This is useful for removing permissions that are added by native package \`AndroidManifest.xml\` files which are merged into the final manifest. Internally this feature uses the \`tools:node=\\"remove\\"\` XML attribute to remove permissions. Not available in the classic \`expo build:android\` or Expo Go.",
          "items": Object {
            "type": "string",
          },
          "markdownDescription": "List of permissions to block in the final \`AndroidManifest.xml\`. This is useful for removing permissions that are added by native package \`AndroidManifest.xml\` files which are merged into the final manifest. Internally this feature uses the \`tools:node=\\"remove\\"\` XML attribute to remove permissions. Not available in the classic \`expo build:android\` or Expo Go.",
          "type": "array",
        },
        "config": Object {
          "additionalProperties": false,
          "description": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
          "markdownDescription": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
          "properties": Object {
            "branch": Object {
              "additionalProperties": false,
              "description": "[Branch](https://branch.io/) key to hook up Branch linking services.",
              "markdownDescription": "[Branch](https://branch.io/) key to hook up Branch linking services.",
              "properties": Object {
                "apiKey": Object {
                  "description": "Your Branch API key",
                  "markdownDescription": "Your Branch API key",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "googleMaps": Object {
              "additionalProperties": false,
              "description": "[Google Maps Android SDK](https://developers.google.com/maps/documentation/android-api/signup) configuration for your standalone app.",
              "markdownDescription": "[Google Maps Android SDK](https://developers.google.com/maps/documentation/android-api/signup) configuration for your standalone app.",
              "properties": Object {
                "apiKey": Object {
                  "description": "Your Google Maps Android SDK API key",
                  "markdownDescription": "Your Google Maps Android SDK API key",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "googleMobileAdsAppId": Object {
              "description": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
              "markdownDescription": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
              "type": "string",
            },
            "googleMobileAdsAutoInit": Object {
              "description": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Client and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
              "fallback": false,
              "markdownDescription": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Client and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
              "type": "boolean",
            },
            "googleSignIn": Object {
              "additionalProperties": false,
              "deprecated": true,
              "description": "@deprecated Use \`googleServicesFile\` instead. [Google Sign-In Android SDK](https://developers.google.com/identity/sign-in/android/start-integrating) keys for your standalone app.",
              "markdownDescription": "@deprecated Use \`googleServicesFile\` instead. [Google Sign-In Android SDK](https://developers.google.com/identity/sign-in/android/start-integrating) keys for your standalone app.",
              "meta": Object {
                "deprecated": true,
              },
              "properties": Object {
                "apiKey": Object {
                  "description": "The Android API key. Can be found in the credentials section of the developer console or in \`google-services.json\`.",
                  "markdownDescription": "The Android API key. Can be found in the credentials section of the developer console or in \`google-services.json\`.",
                  "type": "string",
                },
                "certificateHash": Object {
                  "description": "The SHA-1 hash of the signing certificate used to build the APK without any separator (\`:\`). Can be found in \`google-services.json\`. https://developers.google.com/android/guides/client-auth",
                  "markdownDescription": "The SHA-1 hash of the signing certificate used to build the APK without any separator (\`:\`). Can be found in \`google-services.json\`. https://developers.google.com/android/guides/client-auth",
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
        "googleServicesFile": Object {
          "description": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase. Including this key automatically enables FCM in your standalone app.

**Bare workflow** - Add or edit the file directly at \`android/app/google-services.json\`",
          "markdownDescription": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase. Including this key automatically enables FCM in your standalone app.

**Bare workflow** - Add or edit the file directly at \`android/app/google-services.json\`",
          "meta": Object {
            "bareWorkflow": "Add or edit the file directly at \`android/app/google-services.json\`",
          },
          "type": "string",
        },
        "icon": Object {
          "description": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` key. We recommend that you use a 1024x1024 png file (transparency is recommended for the Google Play Store). This icon will appear on the home screen and within the Expo app.",
          "markdownDescription": "Local path or remote URL to an image to use for your app's icon on Android. If specified, this overrides the top-level \`icon\` key. We recommend that you use a 1024x1024 png file (transparency is recommended for the Google Play Store). This icon will appear on the home screen and within the Expo app.",
          "meta": Object {
            "asset": true,
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
            "square": true,
          },
          "type": "string",
        },
        "intentFilters": Object {
          "description": "Configuration for setting an array of custom intent filters in Android manifest. [Learn more](https://developer.android.com/guide/components/intents-filters)

**Bare workflow** - This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
          "example": Array [
            Object {
              "action": "VIEW",
              "autoVerify": true,
              "category": Array [
                "BROWSABLE",
                "DEFAULT",
              ],
              "data": Object {
                "host": "*.example.com",
                "scheme": "https",
              },
            },
          ],
          "exampleString": "
 [{ 
 \\"autoVerify\\": true, 
 \\"action\\": \\"VIEW\\", 
 \\"data\\": { 
 \\"scheme\\": \\"https\\", 
 \\"host\\": \\"*.example.com\\" 
 }, 
 \\"category\\": [\\"BROWSABLE\\", \\"DEFAULT\\"] 
 }]",
          "items": Object {
            "additionalProperties": false,
            "properties": Object {
              "action": Object {
                "type": "string",
              },
              "autoVerify": Object {
                "description": "You may also use an intent filter to set your app as the default handler for links (without showing the user a dialog with options). To do so use \`true\` and then configure your server to serve a JSON file verifying that you own the domain. [Learn more](https://developer.android.com/training/app-links)",
                "markdownDescription": "You may also use an intent filter to set your app as the default handler for links (without showing the user a dialog with options). To do so use \`true\` and then configure your server to serve a JSON file verifying that you own the domain. [Learn more](https://developer.android.com/training/app-links)",
                "type": "boolean",
              },
              "category": Object {
                "anyOf": Array [
                  Object {
                    "type": Array [
                      "string",
                    ],
                  },
                  Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                  },
                ],
              },
              "data": Object {
                "anyOf": Array [
                  Object {
                    "$ref": "#/definitions/AndroidIntentFiltersData",
                  },
                  Object {
                    "items": Object {
                      "$ref": "#/definitions/AndroidIntentFiltersData",
                    },
                    "type": Array [
                      "array",
                    ],
                  },
                ],
              },
            },
            "required": Array [
              "action",
            ],
            "type": "object",
          },
          "markdownDescription": "Configuration for setting an array of custom intent filters in Android manifest. [Learn more](https://developer.android.com/guide/components/intents-filters)

**Bare workflow** - This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
          "meta": Object {
            "bareWorkflow": "This is set in \`AndroidManifest.xml\` directly. [Learn more.](https://developer.android.com/guide/components/intents-filters)",
          },
          "type": "array",
          "uniqueItems": true,
        },
        "jsEngine": Object {
          "description": "Specifies the JavaScript engine for Android apps. Supported only on EAS Build and in Expo Go. Defaults to \`jsc\`. Valid values: \`hermes\`, \`jsc\`.

**Bare workflow** - To change the JavaScript engine, update the \`expo.jsEngine\` value in \`android/gradle.properties\`",
          "enum": Array [
            "hermes",
            "jsc",
          ],
          "fallback": "jsc",
          "markdownDescription": "Specifies the JavaScript engine for Android apps. Supported only on EAS Build and in Expo Go. Defaults to \`jsc\`. Valid values: \`hermes\`, \`jsc\`.

**Bare workflow** - To change the JavaScript engine, update the \`expo.jsEngine\` value in \`android/gradle.properties\`",
          "meta": Object {
            "bareWorkflow": "To change the JavaScript engine, update the \`expo.jsEngine\` value in \`android/gradle.properties\`",
          },
          "type": "string",
        },
        "package": Object {
          "description": "The package name for your Android standalone app. You make it up, but it needs to be unique on the Play Store. See [this StackOverflow question](http://stackoverflow.com/questions/6273892/android-package-name-convention).

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
          "markdownDescription": "The package name for your Android standalone app. You make it up, but it needs to be unique on the Play Store. See [this StackOverflow question](http://stackoverflow.com/questions/6273892/android-package-name-convention).

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
          "meta": Object {
            "bareWorkflow": "This is set in \`android/app/build.gradle\` as \`applicationId\` as well as in your \`AndroidManifest.xml\` file (multiple places).",
            "regexHuman": "Reverse DNS notation unique name for your app. Valid Android Application ID. For example, \`com.example.app\`, where \`com.example\` is our domain and \`app\` is our app. The name may only contain lowercase and uppercase letters (a-z, A-Z), numbers (0-9) and underscores (_), separated by periods (.). Each component of the name should start with a lowercase letter.",
          },
          "pattern": "^[a-zA-Z][a-zA-Z0-9\\\\_]*(\\\\.[a-zA-Z][a-zA-Z0-9\\\\_]*)+$",
          "patternErrorMessage": "Reverse DNS notation unique name for your app. Valid Android Application ID. For example, \`com.example.app\`, where \`com.example\` is our domain and \`app\` is our app. The name may only contain lowercase and uppercase letters (a-z, A-Z), numbers (0-9) and underscores (_), separated by periods (.). Each component of the name should start with a lowercase letter.",
          "type": "string",
        },
        "permissions": Object {
          "description": "List of permissions used by the standalone app. 

 To use ONLY the following minimum necessary permissions and none of the extras supported by Expo in a default managed app, set \`permissions\` to \`[]\`. The minimum necessary permissions do not require a Privacy Policy when uploading to Google Play Store and are: 
• receive data from Internet 
• view network connections 
• full network access 
• change your audio settings 
• prevent device from sleeping 

 To use ALL permissions supported by Expo by default, do not specify the \`permissions\` key. 

  To use the minimum necessary permissions ALONG with certain additional permissions, specify those extras in \`permissions\`, e.g.

 \`[ \\"CAMERA\\", \\"ACCESS_FINE_LOCATION\\" ]\`.

  You can specify the following permissions depending on what you need:

- \`ACCESS_COARSE_LOCATION\`
- \`ACCESS_FINE_LOCATION\`
- \`ACCESS_BACKGROUND_LOCATION\`
- \`CAMERA\`
- \`RECORD_AUDIO\`
- \`READ_CONTACTS\`
- \`WRITE_CONTACTS\`
- \`READ_CALENDAR\`
- \`WRITE_CALENDAR\`
- \`READ_EXTERNAL_STORAGE\`
- \`WRITE_EXTERNAL_STORAGE\`
- \`USE_FINGERPRINT\`
- \`USE_BIOMETRIC\`
- \`WRITE_SETTINGS\`
- \`VIBRATE\`
- \`READ_PHONE_STATE\`
- \`com.anddoes.launcher.permission.UPDATE_COUNT\`
- \`com.android.launcher.permission.INSTALL_SHORTCUT\`
- \`com.google.android.c2dm.permission.RECEIVE\`
- \`com.google.android.gms.permission.ACTIVITY_RECOGNITION\`
- \`com.google.android.providers.gsf.permission.READ_GSERVICES\`
- \`com.htc.launcher.permission.READ_SETTINGS\`
- \`com.htc.launcher.permission.UPDATE_SHORTCUT\`
- \`com.majeur.launcher.permission.UPDATE_BADGE\`
- \`com.sec.android.provider.badge.permission.READ\`
- \`com.sec.android.provider.badge.permission.WRITE\`
- \`com.sonyericsson.home.permission.BROADCAST_BADGE\`


**Bare workflow** - To change the permissions your app requests, you'll need to edit \`AndroidManifest.xml\` manually. To prevent your app from requesting one of the permissions listed below, you'll need to explicitly add it to \`AndroidManifest.xml\` along with a \`tools:node=\\"remove\\"\` tag.",
          "items": Object {
            "type": "string",
          },
          "markdownDescription": "List of permissions used by the standalone app. 

 To use ONLY the following minimum necessary permissions and none of the extras supported by Expo in a default managed app, set \`permissions\` to \`[]\`. The minimum necessary permissions do not require a Privacy Policy when uploading to Google Play Store and are: 
• receive data from Internet 
• view network connections 
• full network access 
• change your audio settings 
• prevent device from sleeping 

 To use ALL permissions supported by Expo by default, do not specify the \`permissions\` key. 

  To use the minimum necessary permissions ALONG with certain additional permissions, specify those extras in \`permissions\`, e.g.

 \`[ \\"CAMERA\\", \\"ACCESS_FINE_LOCATION\\" ]\`.

  You can specify the following permissions depending on what you need:

- \`ACCESS_COARSE_LOCATION\`
- \`ACCESS_FINE_LOCATION\`
- \`ACCESS_BACKGROUND_LOCATION\`
- \`CAMERA\`
- \`RECORD_AUDIO\`
- \`READ_CONTACTS\`
- \`WRITE_CONTACTS\`
- \`READ_CALENDAR\`
- \`WRITE_CALENDAR\`
- \`READ_EXTERNAL_STORAGE\`
- \`WRITE_EXTERNAL_STORAGE\`
- \`USE_FINGERPRINT\`
- \`USE_BIOMETRIC\`
- \`WRITE_SETTINGS\`
- \`VIBRATE\`
- \`READ_PHONE_STATE\`
- \`com.anddoes.launcher.permission.UPDATE_COUNT\`
- \`com.android.launcher.permission.INSTALL_SHORTCUT\`
- \`com.google.android.c2dm.permission.RECEIVE\`
- \`com.google.android.gms.permission.ACTIVITY_RECOGNITION\`
- \`com.google.android.providers.gsf.permission.READ_GSERVICES\`
- \`com.htc.launcher.permission.READ_SETTINGS\`
- \`com.htc.launcher.permission.UPDATE_SHORTCUT\`
- \`com.majeur.launcher.permission.UPDATE_BADGE\`
- \`com.sec.android.provider.badge.permission.READ\`
- \`com.sec.android.provider.badge.permission.WRITE\`
- \`com.sonyericsson.home.permission.BROADCAST_BADGE\`


**Bare workflow** - To change the permissions your app requests, you'll need to edit \`AndroidManifest.xml\` manually. To prevent your app from requesting one of the permissions listed below, you'll need to explicitly add it to \`AndroidManifest.xml\` along with a \`tools:node=\\"remove\\"\` tag.",
          "meta": Object {
            "bareWorkflow": "To change the permissions your app requests, you'll need to edit \`AndroidManifest.xml\` manually. To prevent your app from requesting one of the permissions listed below, you'll need to explicitly add it to \`AndroidManifest.xml\` along with a \`tools:node=\\"remove\\"\` tag.",
          },
          "type": "array",
        },
        "playStoreUrl": Object {
          "description": "URL to your app on the Google Play Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
          "example": "https://play.google.com/store/apps/details?id=host.exp.exponent",
          "markdownDescription": "URL to your app on the Google Play Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
          "pattern": "^https://play\\\\.google\\\\.com/",
          "type": Array [
            "string",
          ],
        },
        "runtimeVersion": Object {
          "$ref": "#/definitions/RuntimeVersion",
          "description": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest for the Android platform. If provided, this will override the top level runtimeVersion key.
Set this to \`{\\"policy\\": \\"nativeVersion\\"}\` to generate it automatically.",
          "markdownDescription": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest for the Android platform. If provided, this will override the top level runtimeVersion key.
Set this to \`{\\"policy\\": \\"nativeVersion\\"}\` to generate it automatically.",
        },
        "softwareKeyboardLayoutMode": Object {
          "description": "Determines how the software keyboard will impact the layout of your application. This maps to the \`android:windowSoftInputMode\` property. Defaults to \`resize\`. Valid values: \`resize\`, \`pan\`.",
          "enum": Array [
            "resize",
            "pan",
          ],
          "fallback": "resize",
          "markdownDescription": "Determines how the software keyboard will impact the layout of your application. This maps to the \`android:windowSoftInputMode\` property. Defaults to \`resize\`. Valid values: \`resize\`, \`pan\`.",
          "type": "string",
        },
        "splash": Object {
          "description": "Configuration for loading and splash screen for managed and standalone Android apps.",
          "markdownDescription": "Configuration for loading and splash screen for managed and standalone Android apps.",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to fill the loading screen background",
              "markdownDescription": "Color to fill the loading screen background",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "hdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 1.5x\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 1.5x\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "image": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "mdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Natural sized image (baseline)\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Natural sized image (baseline)\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "resizeMode": Object {
              "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\`, \`contain\` or \`native\`, defaults to \`contain\`.",
              "enum": Array [
                "cover",
                "contain",
                "native",
              ],
              "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\`, \`contain\` or \`native\`, defaults to \`contain\`.",
              "type": "string",
            },
            "xhdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 2x\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 2x\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "xxhdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 3x\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 3x\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "xxxhdpi": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 4x\`",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen in \\"native\\" mode. Image size and aspect ratio are up to you. [Learn more]( https://developer.android.com/training/multiscreen/screendensities) 

 \`Scale 4x\`",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
          },
          "type": "object",
        },
        "useNextNotificationsApi": Object {
          "deprecated": true,
          "description": "@deprecated A Boolean value that indicates whether the app should use the new notifications API.",
          "fallback": false,
          "markdownDescription": "@deprecated A Boolean value that indicates whether the app should use the new notifications API.",
          "type": "boolean",
        },
        "userInterfaceStyle": Object {
          "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`. Requires \`expo-system-ui\` be installed in your project to work on Android.",
          "enum": Array [
            "light",
            "dark",
            "automatic",
          ],
          "fallback": "light",
          "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`. Requires \`expo-system-ui\` be installed in your project to work on Android.",
          "type": "string",
        },
        "versionCode": Object {
          "description": "Version number required by Google Play. Increment by one for each release. Must be a positive integer. [Learn more](https://developer.android.com/studio/publish/versioning.html)

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`versionCode\`",
          "markdownDescription": "Version number required by Google Play. Increment by one for each release. Must be a positive integer. [Learn more](https://developer.android.com/studio/publish/versioning.html)

**Bare workflow** - This is set in \`android/app/build.gradle\` as \`versionCode\`",
          "maximum": 2100000000,
          "meta": Object {
            "bareWorkflow": "This is set in \`android/app/build.gradle\` as \`versionCode\`",
          },
          "minimum": 0,
          "type": "integer",
        },
      },
      "type": "object",
    },
    "AndroidIntentFiltersData": Object {
      "additionalProperties": false,
      "properties": Object {
        "host": Object {
          "description": "Hostname, e.g. \`myapp.io\`",
          "markdownDescription": "Hostname, e.g. \`myapp.io\`",
          "type": "string",
        },
        "mimeType": Object {
          "description": "MIME type for URLs that should be matched by the filter",
          "markdownDescription": "MIME type for URLs that should be matched by the filter",
          "type": "string",
        },
        "path": Object {
          "description": "Exact path for URLs that should be matched by the filter, e.g. \`/records\`",
          "markdownDescription": "Exact path for URLs that should be matched by the filter, e.g. \`/records\`",
          "type": "string",
        },
        "pathPattern": Object {
          "description": "Pattern for paths that should be matched by the filter, e.g. \`.*\`. Must begin with \`/\`",
          "markdownDescription": "Pattern for paths that should be matched by the filter, e.g. \`.*\`. Must begin with \`/\`",
          "type": "string",
        },
        "pathPrefix": Object {
          "description": "Prefix for paths that should be matched by the filter, e.g. \`/records/\` will match \`/records/123\`",
          "markdownDescription": "Prefix for paths that should be matched by the filter, e.g. \`/records/\` will match \`/records/123\`",
          "type": "string",
        },
        "port": Object {
          "description": "Port, e.g. \`3000\`",
          "markdownDescription": "Port, e.g. \`3000\`",
          "type": "string",
        },
        "scheme": Object {
          "description": "Scheme of the URL, e.g. \`https\`",
          "markdownDescription": "Scheme of the URL, e.g. \`https\`",
          "type": "string",
        },
      },
      "type": "object",
    },
    "IOS": Object {
      "additionalProperties": false,
      "description": "Configuration that is specific to the iOS platform.",
      "markdownDescription": "Configuration that is specific to the iOS platform.",
      "meta": Object {
        "standaloneOnly": true,
      },
      "properties": Object {
        "accessesContactNotes": Object {
          "description": "A Boolean value that indicates whether the app may access the notes stored in contacts. You must [receive permission from Apple](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_contacts_notes) before you can submit your app for review with this capability.",
          "fallback": false,
          "markdownDescription": "A Boolean value that indicates whether the app may access the notes stored in contacts. You must [receive permission from Apple](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_contacts_notes) before you can submit your app for review with this capability.",
          "type": "boolean",
        },
        "appStoreUrl": Object {
          "description": "URL to your app on the Apple App Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
          "example": "https://apps.apple.com/us/app/expo-client/id982107779",
          "markdownDescription": "URL to your app on the Apple App Store, if you have deployed it there. This is used to link to your store page from your Expo project page if your app is public.",
          "pattern": "^https://(itunes|apps)\\\\.apple\\\\.com/.*?\\\\d+",
          "type": Array [
            "string",
          ],
        },
        "associatedDomains": Object {
          "description": "An array that contains Associated Domains for the standalone app. [Learn more](https://developer.apple.com/documentation/safariservices/supporting_associated_domains).

**Bare workflow** - Build with EAS, or use Xcode to enable this capability manually. [Learn more](https://developer.apple.com/documentation/safariservices/supporting_associated_domains).",
          "items": Object {
            "type": "string",
          },
          "markdownDescription": "An array that contains Associated Domains for the standalone app. [Learn more](https://developer.apple.com/documentation/safariservices/supporting_associated_domains).

**Bare workflow** - Build with EAS, or use Xcode to enable this capability manually. [Learn more](https://developer.apple.com/documentation/safariservices/supporting_associated_domains).",
          "meta": Object {
            "bareWorkflow": "Build with EAS, or use Xcode to enable this capability manually. [Learn more](https://developer.apple.com/documentation/safariservices/supporting_associated_domains).",
            "regexHuman": "Entries must follow the format \`applinks:<fully qualified domain>[:port number]\`. [Learn more](https://developer.apple.com/documentation/safariservices/supporting_associated_domains).",
          },
          "type": "array",
          "uniqueItems": true,
        },
        "backgroundColor": Object {
          "description": "The background color for your iOS app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present. Requires \`expo-system-ui\` be installed in your project to work on iOS.",
          "markdownDescription": "The background color for your iOS app, behind any of your React views. Overrides the top-level \`backgroundColor\` key if it is present. Requires \`expo-system-ui\` be installed in your project to work on iOS.",
          "meta": Object {
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "bitcode": Object {
          "anyOf": Array [
            Object {
              "type": Array [
                "boolean",
              ],
            },
            Object {
              "type": Array [
                "string",
              ],
            },
          ],
          "description": "Enable iOS Bitcode optimizations in the native build. Accepts the name of an iOS build configuration to enable for a single configuration and disable for all others, e.g. Debug, Release. Not available in the classic 'expo build:ios' or Expo Go. Defaults to \`undefined\` which uses the template's predefined settings.",
          "markdownDescription": "Enable iOS Bitcode optimizations in the native build. Accepts the name of an iOS build configuration to enable for a single configuration and disable for all others, e.g. Debug, Release. Not available in the classic 'expo build:ios' or Expo Go. Defaults to \`undefined\` which uses the template's predefined settings.",
        },
        "buildNumber": Object {
          "description": "Build number for your iOS standalone app. Corresponds to \`CFBundleVersion\` and must match Apple's [specified format](https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102364). (Note: Transporter will pull the value for \`Version Number\` from \`expo.version\` and NOT from \`expo.ios.buildNumber\`.)

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleVersion\`",
          "markdownDescription": "Build number for your iOS standalone app. Corresponds to \`CFBundleVersion\` and must match Apple's [specified format](https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102364). (Note: Transporter will pull the value for \`Version Number\` from \`expo.version\` and NOT from \`expo.ios.buildNumber\`.)

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleVersion\`",
          "meta": Object {
            "bareWorkflow": "Set this value in \`info.plist\` under \`CFBundleVersion\`",
          },
          "pattern": "^[A-Za-z0-9\\\\.]+$",
          "type": "string",
        },
        "bundleIdentifier": Object {
          "description": "The bundle identifier for your iOS standalone app. You make it up, but it needs to be unique on the App Store. See [this StackOverflow question](http://stackoverflow.com/questions/11347470/what-does-bundle-identifier-mean-in-the-ios-project).

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
          "markdownDescription": "The bundle identifier for your iOS standalone app. You make it up, but it needs to be unique on the App Store. See [this StackOverflow question](http://stackoverflow.com/questions/11347470/what-does-bundle-identifier-mean-in-the-ios-project).

**Bare workflow** - Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
          "meta": Object {
            "bareWorkflow": "Set this value in \`info.plist\` under \`CFBundleIdentifier\`",
            "regexHuman": "iOS bundle identifier notation unique name for your app. For example, \`host.exp.expo\`, where \`exp.host\` is our domain and \`expo\` is our app name.",
          },
          "pattern": "^[a-zA-Z0-9.-]+$",
          "patternErrorMessage": "iOS bundle identifier notation unique name for your app. For example, \`host.exp.expo\`, where \`exp.host\` is our domain and \`expo\` is our app name.",
          "type": "string",
        },
        "config": Object {
          "additionalProperties": false,
          "description": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
          "markdownDescription": "Note: This property key is not included in the production manifest and will evaluate to \`undefined\`. It is used internally only in the build process, because it contains API keys that some may want to keep private.",
          "properties": Object {
            "branch": Object {
              "additionalProperties": false,
              "description": "[Branch](https://branch.io/) key to hook up Branch linking services.",
              "markdownDescription": "[Branch](https://branch.io/) key to hook up Branch linking services.",
              "properties": Object {
                "apiKey": Object {
                  "description": "Your Branch API key",
                  "markdownDescription": "Your Branch API key",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "googleMapsApiKey": Object {
              "description": "[Google Maps iOS SDK](https://developers.google.com/maps/documentation/ios-sdk/start) key for your standalone app.",
              "markdownDescription": "[Google Maps iOS SDK](https://developers.google.com/maps/documentation/ios-sdk/start) key for your standalone app.",
              "type": "string",
            },
            "googleMobileAdsAppId": Object {
              "description": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
              "markdownDescription": "[Google Mobile Ads App ID](https://support.google.com/admob/answer/6232340) Google AdMob App ID. ",
              "type": "string",
            },
            "googleMobileAdsAutoInit": Object {
              "description": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Go and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`.](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
              "fallback": false,
              "markdownDescription": "A boolean indicating whether to initialize Google App Measurement and begin sending user-level event data to Google immediately when the app starts. The default in Expo (Go and in standalone apps) is \`false\`. [Sets the opposite of the given value to the following key in \`Info.plist\`.](https://developers.google.com/admob/ios/eu-consent#delay_app_measurement_optional)",
              "type": "boolean",
            },
            "googleSignIn": Object {
              "additionalProperties": false,
              "description": "@deprecated Use \`ios.googleServicesFile\` instead.",
              "markdownDescription": "@deprecated Use \`ios.googleServicesFile\` instead.",
              "meta": Object {
                "deprecated": true,
              },
              "properties": Object {
                "reservedClientId": Object {
                  "description": "@deprecated Use \`ios.googleServicesFile\` instead.",
                  "markdownDescription": "@deprecated Use \`ios.googleServicesFile\` instead.",
                  "meta": Object {
                    "deprecated": true,
                  },
                  "type": "string",
                },
              },
              "type": "object",
            },
            "usesNonExemptEncryption": Object {
              "description": "Sets \`ITSAppUsesNonExemptEncryption\` in the standalone ipa's Info.plist to the given boolean value.",
              "markdownDescription": "Sets \`ITSAppUsesNonExemptEncryption\` in the standalone ipa's Info.plist to the given boolean value.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "entitlements": Object {
          "additionalProperties": true,
          "description": "Dictionary of arbitrary configuration to add to your standalone app's native *.entitlements (plist). Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
          "markdownDescription": "Dictionary of arbitrary configuration to add to your standalone app's native *.entitlements (plist). Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
          "properties": Object {},
          "type": "object",
        },
        "googleServicesFile": Object {
          "description": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase.",
          "markdownDescription": "[Firebase Configuration File](https://support.google.com/firebase/answer/7015592) Location of the \`GoogleService-Info.plist\` file for configuring Firebase.",
          "type": "string",
        },
        "icon": Object {
          "description": "Local path or remote URL to an image to use for your app's icon on iOS. If specified, this overrides the top-level \`icon\` key. Use a 1024x1024 icon which follows Apple's interface guidelines for icons, including color profile and transparency. 

 Expo will generate the other required sizes. This icon will appear on the home screen and within the Expo app.",
          "markdownDescription": "Local path or remote URL to an image to use for your app's icon on iOS. If specified, this overrides the top-level \`icon\` key. Use a 1024x1024 icon which follows Apple's interface guidelines for icons, including color profile and transparency. 

 Expo will generate the other required sizes. This icon will appear on the home screen and within the Expo app.",
          "meta": Object {
            "asset": true,
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
            "square": true,
          },
          "type": "string",
        },
        "infoPlist": Object {
          "additionalProperties": true,
          "description": "Dictionary of arbitrary configuration to add to your standalone app's native Info.plist. Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
          "markdownDescription": "Dictionary of arbitrary configuration to add to your standalone app's native Info.plist. Applied prior to all other Expo-specific configuration. No other validation is performed, so use this at your own risk of rejection from the App Store.",
          "properties": Object {},
          "type": "object",
        },
        "isTabletOnly": Object {
          "description": "If true, indicates that your standalone iOS app does not support handsets, and only supports tablets.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
          "markdownDescription": "If true, indicates that your standalone iOS app does not support handsets, and only supports tablets.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
          "meta": Object {
            "bareWorkflow": "Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations\`",
          },
          "type": "boolean",
        },
        "jsEngine": Object {
          "description": "Specifies the JavaScript engine for iOS apps. Supported only on EAS Build. Defaults to \`jsc\`. Valid values: \`hermes\`, \`jsc\`.

**Bare workflow** - To change the JavaScript engine, update the \`expo.jsEngine\` value in \`ios/Podfile.properties.json\`",
          "enum": Array [
            "hermes",
            "jsc",
          ],
          "fallback": "jsc",
          "markdownDescription": "Specifies the JavaScript engine for iOS apps. Supported only on EAS Build. Defaults to \`jsc\`. Valid values: \`hermes\`, \`jsc\`.

**Bare workflow** - To change the JavaScript engine, update the \`expo.jsEngine\` value in \`ios/Podfile.properties.json\`",
          "meta": Object {
            "bareWorkflow": "To change the JavaScript engine, update the \`expo.jsEngine\` value in \`ios/Podfile.properties.json\`",
          },
          "type": "string",
        },
        "merchantId": Object {
          "description": "@deprecated Merchant ID for use with Apple Pay in your standalone app.",
          "markdownDescription": "@deprecated Merchant ID for use with Apple Pay in your standalone app.",
          "meta": Object {
            "deprecated": true,
          },
          "type": "string",
        },
        "requireFullScreen": Object {
          "description": "If true, indicates that your standalone iOS app does not support Slide Over and Split View on iPad. Defaults to \`false\`

**Bare workflow** - Use Xcode to set \`UIRequiresFullScreen\`",
          "markdownDescription": "If true, indicates that your standalone iOS app does not support Slide Over and Split View on iPad. Defaults to \`false\`

**Bare workflow** - Use Xcode to set \`UIRequiresFullScreen\`",
          "meta": Object {
            "bareWorkflow": "Use Xcode to set \`UIRequiresFullScreen\`",
          },
          "type": "boolean",
        },
        "runtimeVersion": Object {
          "$ref": "#/definitions/RuntimeVersion",
          "description": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest for the iOS platform. If provided, this will override the top level runtimeVersion key.
Set this to \`{\\"policy\\": \\"nativeVersion\\"}\` to generate it automatically.",
          "markdownDescription": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest for the iOS platform. If provided, this will override the top level runtimeVersion key.
Set this to \`{\\"policy\\": \\"nativeVersion\\"}\` to generate it automatically.",
        },
        "splash": Object {
          "description": "Configuration for loading and splash screen for standalone iOS apps.",
          "markdownDescription": "Configuration for loading and splash screen for standalone iOS apps.",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to fill the loading screen background",
              "markdownDescription": "Color to fill the loading screen background",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "image": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "resizeMode": Object {
              "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "enum": Array [
                "cover",
                "contain",
              ],
              "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "type": "string",
            },
            "tabletImage": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "xib": Object {
              "description": "@deprecated Apple has deprecated \`.xib\` splash screens in favor of \`.storyboard\` files. Local path to a XIB file as the loading screen. It overrides other loading screen options. Note: This will only be used in the standalone app (i.e., after you build the app). It will not be used in the Expo Go.",
              "markdownDescription": "@deprecated Apple has deprecated \`.xib\` splash screens in favor of \`.storyboard\` files. Local path to a XIB file as the loading screen. It overrides other loading screen options. Note: This will only be used in the standalone app (i.e., after you build the app). It will not be used in the Expo Go.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".xib interface builder document",
                "contentTypePattern": "^text/xml$",
                "deprecated": true,
              },
              "type": "string",
            },
          },
          "type": "object",
        },
        "supportsTablet": Object {
          "description": "Whether your standalone iOS app supports tablet screen sizes. Defaults to \`false\`.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
          "markdownDescription": "Whether your standalone iOS app supports tablet screen sizes. Defaults to \`false\`.

**Bare workflow** - Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
          "meta": Object {
            "bareWorkflow": "Set this value in \`info.plist\` under \`UISupportedInterfaceOrientations~ipad\`",
          },
          "type": "boolean",
        },
        "userInterfaceStyle": Object {
          "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "enum": Array [
            "light",
            "dark",
            "automatic",
          ],
          "fallback": "light",
          "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`.",
          "type": "string",
        },
        "usesAppleSignIn": Object {
          "description": "A boolean indicating if the app uses Apple Sign-In. See \`AppleAuthentication\` docs for details.",
          "fallback": false,
          "markdownDescription": "A boolean indicating if the app uses Apple Sign-In. See \`AppleAuthentication\` docs for details.",
          "type": "boolean",
        },
        "usesIcloudStorage": Object {
          "description": "A boolean indicating if the app uses iCloud Storage for \`DocumentPicker\`. See \`DocumentPicker\` docs for details.

**Bare workflow** - Use Xcode, or ios.entitlements to configure this.",
          "markdownDescription": "A boolean indicating if the app uses iCloud Storage for \`DocumentPicker\`. See \`DocumentPicker\` docs for details.

**Bare workflow** - Use Xcode, or ios.entitlements to configure this.",
          "meta": Object {
            "bareWorkflow": "Use Xcode, or ios.entitlements to configure this.",
          },
          "type": "boolean",
        },
      },
      "type": "object",
    },
    "PublishHook": Object {
      "additionalProperties": true,
      "properties": Object {
        "config": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
        "file": Object {
          "type": "string",
        },
      },
      "type": "object",
    },
    "RuntimeVersion": Object {
      "oneOf": Array [
        Object {
          "meta": Object {
            "notHuman": "String beginning with an alphanumeric character followed by any combination of alphanumeric character, \\"_\\", \\"+\\", \\".\\",\\"(\\", \\")\\", or \\"-\\". May not be a decimal ending in a 0. Valid examples: \\"1.0.3a+\\", \\"1.0.0\\", \\"._+()-0a1\\", \\"0\\".",
            "regexHuman": "String beginning with an alphanumeric character followed by any combination of alphanumeric character, \\"_\\", \\"+\\", \\".\\",\\"(\\", \\")\\", or \\"-\\". May not be a decimal ending in a 0. Valid examples: \\"1.0.3a+\\", \\"1.0.0\\", \\"._+()-0a1\\", \\"0\\".",
          },
          "not": Object {
            "pattern": "^\\\\d+\\\\.\\\\d*0$",
          },
          "pattern": "^[a-zA-Z\\\\d][a-zA-Z\\\\d._+()-]{0,254}$",
          "patternErrorMessage": "String beginning with an alphanumeric character followed by any combination of alphanumeric character, \\"_\\", \\"+\\", \\".\\",\\"(\\", \\")\\", or \\"-\\". May not be a decimal ending in a 0. Valid examples: \\"1.0.3a+\\", \\"1.0.0\\", \\"._+()-0a1\\", \\"0\\".",
          "type": "string",
        },
        Object {
          "meta": Object {
            "regexHuman": "An 'exposdk:' prefix followed by the SDK version of your project. Example: \\"exposdk:44.0.0\\".",
          },
          "pattern": "^exposdk:((\\\\d+\\\\.\\\\d+\\\\.\\\\d+)|(UNVERSIONED))$",
          "patternErrorMessage": "An 'exposdk:' prefix followed by the SDK version of your project. Example: \\"exposdk:44.0.0\\".",
          "type": "string",
        },
        Object {
          "$ref": "#/definitions/RuntimeVersionSDKVersionPolicy",
        },
      ],
      "tsType": "string | { policy: 'nativeVersion' | 'sdkVersion'; }",
    },
    "RuntimeVersionSDKVersionPolicy": Object {
      "additionalProperties": false,
      "properties": Object {
        "policy": Object {
          "enum": Array [
            "nativeVersion",
            "sdkVersion",
          ],
          "type": "string",
        },
      },
      "required": Array [
        "policy",
      ],
      "type": "object",
    },
    "Splash": Object {
      "description": "Configuration for loading and splash screen for standalone apps.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
      "markdownDescription": "Configuration for loading and splash screen for standalone apps.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
      "meta": Object {
        "bareWorkflow": "To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\` (Android Studio can [generate the appropriate image files for you](https://developer.android.com/studio/write/image-asset-studio)). Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each required size.",
      },
      "properties": Object {
        "backgroundColor": Object {
          "description": "Color to fill the loading screen background

**Bare workflow** - For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
          "markdownDescription": "Color to fill the loading screen background

**Bare workflow** - For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
          "meta": Object {
            "bareWorkflow": "For Android, edit the \`colorPrimary\` item in \`android/app/src/main/res/values/colors.xml\`",
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "image": Object {
          "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
          "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
          "meta": Object {
            "asset": true,
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
          },
          "type": "string",
        },
        "resizeMode": Object {
          "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
          "enum": Array [
            "cover",
            "contain",
          ],
          "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
          "type": "string",
        },
      },
      "type": "object",
    },
    "Web": Object {
      "additionalProperties": true,
      "description": "Configuration that is specific to the web platform.",
      "markdownDescription": "Configuration that is specific to the web platform.",
      "properties": Object {
        "backgroundColor": Object {
          "description": "Defines the expected “background color” for the website. This value repeats what is already available in the site’s CSS, but can be used by browsers to draw the background color of a shortcut when the manifest is available before the stylesheet has loaded. This creates a smooth transition between launching the web application and loading the site's content.",
          "markdownDescription": "Defines the expected “background color” for the website. This value repeats what is already available in the site’s CSS, but can be used by browsers to draw the background color of a shortcut when the manifest is available before the stylesheet has loaded. This creates a smooth transition between launching the web application and loading the site's content.",
          "meta": Object {
            "pwa": "background_color",
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "barStyle": Object {
          "description": "If content is set to default, the status bar appears normal. If set to black, the status bar has a black background. If set to black-translucent, the status bar is black and translucent. If set to default or black, the web content is displayed below the status bar. If set to black-translucent, the web content is displayed on the entire screen, partially obscured by the status bar.",
          "enum": Array [
            "default",
            "black",
            "black-translucent",
          ],
          "fallback": "black-translucent",
          "markdownDescription": "If content is set to default, the status bar appears normal. If set to black, the status bar has a black background. If set to black-translucent, the status bar is black and translucent. If set to default or black, the web content is displayed below the status bar. If set to black-translucent, the web content is displayed on the entire screen, partially obscured by the status bar.",
          "meta": Object {
            "html": "apple-mobile-web-app-status-bar-style",
            "pwa": "name",
          },
          "type": "string",
        },
        "config": Object {
          "description": "Firebase web configuration. Used by the expo-firebase packages on both web and native. [Learn more](https://firebase.google.com/docs/reference/js/firebase.html#initializeapp)",
          "markdownDescription": "Firebase web configuration. Used by the expo-firebase packages on both web and native. [Learn more](https://firebase.google.com/docs/reference/js/firebase.html#initializeapp)",
          "properties": Object {
            "firebase": Object {
              "properties": Object {
                "apiKey": Object {
                  "type": "string",
                },
                "appId": Object {
                  "type": "string",
                },
                "authDomain": Object {
                  "type": "string",
                },
                "databaseURL": Object {
                  "type": "string",
                },
                "measurementId": Object {
                  "type": "string",
                },
                "messagingSenderId": Object {
                  "type": "string",
                },
                "projectId": Object {
                  "type": "string",
                },
                "storageBucket": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
        "dangerous": Object {
          "additionalProperties": true,
          "description": "Experimental features. These will break without deprecation notice.",
          "markdownDescription": "Experimental features. These will break without deprecation notice.",
          "properties": Object {},
          "type": "object",
        },
        "description": Object {
          "description": "Provides a general description of what the pinned website does.",
          "markdownDescription": "Provides a general description of what the pinned website does.",
          "meta": Object {
            "html": "description",
            "pwa": "description",
          },
          "type": "string",
        },
        "dir": Object {
          "description": "Specifies the primary text direction for the name, short_name, and description members. Together with the lang member, it helps the correct display of right-to-left languages.",
          "enum": Array [
            "auto",
            "ltr",
            "rtl",
          ],
          "markdownDescription": "Specifies the primary text direction for the name, short_name, and description members. Together with the lang member, it helps the correct display of right-to-left languages.",
          "meta": Object {
            "pwa": "dir",
          },
          "type": "string",
        },
        "display": Object {
          "description": "Defines the developers’ preferred display mode for the website.",
          "enum": Array [
            "fullscreen",
            "standalone",
            "minimal-ui",
            "browser",
          ],
          "markdownDescription": "Defines the developers’ preferred display mode for the website.",
          "meta": Object {
            "pwa": "display",
          },
          "type": "string",
        },
        "favicon": Object {
          "description": "Relative path of an image to use for your app's favicon.",
          "markdownDescription": "Relative path of an image to use for your app's favicon.",
          "type": "string",
        },
        "lang": Object {
          "description": "Specifies the primary language for the values in the name and short_name members. This value is a string containing a single language tag.",
          "fallback": "en",
          "markdownDescription": "Specifies the primary language for the values in the name and short_name members. This value is a string containing a single language tag.",
          "meta": Object {
            "pwa": "lang",
          },
          "type": "string",
        },
        "name": Object {
          "description": "Defines the title of the document, defaults to the outer level name",
          "markdownDescription": "Defines the title of the document, defaults to the outer level name",
          "meta": Object {
            "pwa": "name",
          },
          "type": "string",
        },
        "orientation": Object {
          "description": "Defines the default orientation for all the website's top level browsing contexts.",
          "enum": Array [
            "any",
            "natural",
            "landscape",
            "landscape-primary",
            "landscape-secondary",
            "portrait",
            "portrait-primary",
            "portrait-secondary",
          ],
          "markdownDescription": "Defines the default orientation for all the website's top level browsing contexts.",
          "meta": Object {
            "pwa": "orientation",
          },
          "type": "string",
        },
        "preferRelatedApplications": Object {
          "description": "Hints for the user agent to indicate to the user that the specified native applications (defined in expo.ios and expo.android) are recommended over the website.",
          "fallback": true,
          "markdownDescription": "Hints for the user agent to indicate to the user that the specified native applications (defined in expo.ios and expo.android) are recommended over the website.",
          "meta": Object {
            "pwa": "prefer_related_applications",
          },
          "type": "boolean",
        },
        "scope": Object {
          "description": "Defines the navigation scope of this website's context. This restricts what web pages can be viewed while the manifest is applied. If the user navigates outside the scope, it returns to a normal web page inside a browser tab/window. If the scope is a relative URL, the base URL will be the URL of the manifest.",
          "markdownDescription": "Defines the navigation scope of this website's context. This restricts what web pages can be viewed while the manifest is applied. If the user navigates outside the scope, it returns to a normal web page inside a browser tab/window. If the scope is a relative URL, the base URL will be the URL of the manifest.",
          "meta": Object {
            "pwa": "scope",
          },
          "type": "string",
        },
        "shortName": Object {
          "description": "A short version of the app's name, 12 characters or fewer. Used in app launcher and new tab pages. Maps to \`short_name\` in the PWA manifest.json. Defaults to the \`name\` property.",
          "markdownDescription": "A short version of the app's name, 12 characters or fewer. Used in app launcher and new tab pages. Maps to \`short_name\` in the PWA manifest.json. Defaults to the \`name\` property.",
          "meta": Object {
            "pwa": "short_name",
            "regexHuman": "Maximum 12 characters long",
          },
          "type": "string",
        },
        "splash": Object {
          "description": "Configuration for PWA splash screens.

**Bare workflow** - Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
          "markdownDescription": "Configuration for PWA splash screens.

**Bare workflow** - Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
          "meta": Object {
            "bareWorkflow": "Use [expo-splash-screen](https://github.com/expo/expo/tree/main/packages/expo-splash-screen#expo-splash-screen)",
          },
          "properties": Object {
            "backgroundColor": Object {
              "description": "Color to fill the loading screen background",
              "markdownDescription": "Color to fill the loading screen background",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "image": Object {
              "description": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "markdownDescription": "Local path or remote URL to an image to fill the background of the loading screen. Image size and aspect ratio are up to you. Must be a .png.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
              },
              "type": "string",
            },
            "resizeMode": Object {
              "description": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "enum": Array [
                "cover",
                "contain",
              ],
              "markdownDescription": "Determines how the \`image\` will be displayed in the splash loading screen. Must be one of \`cover\` or \`contain\`, defaults to \`contain\`.",
              "type": "string",
            },
          },
          "type": "object",
        },
        "startUrl": Object {
          "description": "The URL that loads when a user launches the application (e.g., when added to home screen), typically the index. Note: This has to be a relative URL, relative to the manifest URL.",
          "markdownDescription": "The URL that loads when a user launches the application (e.g., when added to home screen), typically the index. Note: This has to be a relative URL, relative to the manifest URL.",
          "meta": Object {
            "pwa": "start_url",
          },
          "type": "string",
        },
        "themeColor": Object {
          "description": "Defines the color of the Android tool bar, and may be reflected in the app's preview in task switchers.",
          "markdownDescription": "Defines the color of the Android tool bar, and may be reflected in the app's preview in task switchers.",
          "meta": Object {
            "html": "theme-color",
            "pwa": "theme_color",
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
      },
      "type": "object",
    },
  },
  "description": "The Expo manifest (app.json) validation and documentation.",
  "properties": Object {
    "expo": Object {
      "additionalProperties": false,
      "properties": Object {
        "android": Object {
          "$ref": "#/definitions/Android",
        },
        "androidNavigationBar": Object {
          "additionalProperties": false,
          "description": "Configuration for the bottom navigation bar on Android. Can be used to configure the \`expo-navigation-bar\` module in EAS Build.",
          "markdownDescription": "Configuration for the bottom navigation bar on Android. Can be used to configure the \`expo-navigation-bar\` module in EAS Build.",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Specifies the background color of the navigation bar.",
              "markdownDescription": "Specifies the background color of the navigation bar.",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "barStyle": Object {
              "description": "Configure the navigation bar icons to have a light or dark color. Supported on Android Oreo and newer. Valid values: \`'light-content'\`, \`'dark-content'\`",
              "enum": Array [
                "light-content",
                "dark-content",
              ],
              "markdownDescription": "Configure the navigation bar icons to have a light or dark color. Supported on Android Oreo and newer. Valid values: \`'light-content'\`, \`'dark-content'\`",
              "type": "string",
            },
            "visible": Object {
              "description": "Determines how and when the navigation bar is shown. [Learn more](https://developer.android.com/training/system-ui/immersive). Requires \`expo-navigation-bar\` be installed in your project. Valid values: \`leanback\`, \`immersive\`, \`sticky-immersive\` 

 \`leanback\` results in the navigation bar being hidden until the first touch gesture is registered. 

 \`immersive\` results in the navigation bar being hidden until the user swipes up from the edge where the navigation bar is hidden. 

 \`sticky-immersive\` is identical to \`'immersive'\` except that the navigation bar will be semi-transparent and will be hidden again after a short period of time.",
              "enum": Array [
                "leanback",
                "immersive",
                "sticky-immersive",
              ],
              "markdownDescription": "Determines how and when the navigation bar is shown. [Learn more](https://developer.android.com/training/system-ui/immersive). Requires \`expo-navigation-bar\` be installed in your project. Valid values: \`leanback\`, \`immersive\`, \`sticky-immersive\` 

 \`leanback\` results in the navigation bar being hidden until the first touch gesture is registered. 

 \`immersive\` results in the navigation bar being hidden until the user swipes up from the edge where the navigation bar is hidden. 

 \`sticky-immersive\` is identical to \`'immersive'\` except that the navigation bar will be semi-transparent and will be hidden again after a short period of time.",
              "type": "string",
            },
          },
          "type": "object",
        },
        "androidStatusBar": Object {
          "additionalProperties": false,
          "description": "Configuration for the status bar on Android. For more details please navigate to [Configuring StatusBar](https://docs.expo.dev/guides/configuring-statusbar/).",
          "markdownDescription": "Configuration for the status bar on Android. For more details please navigate to [Configuring StatusBar](https://docs.expo.dev/guides/configuring-statusbar/).",
          "properties": Object {
            "backgroundColor": Object {
              "description": "Specifies the background color of the status bar. Defaults to \`#00000000\` (transparent) for \`dark-content\` bar style and \`#00000088\` (semi-transparent black) for \`light-content\` bar style",
              "markdownDescription": "Specifies the background color of the status bar. Defaults to \`#00000000\` (transparent) for \`dark-content\` bar style and \`#00000088\` (semi-transparent black) for \`light-content\` bar style",
              "meta": Object {
                "regexHuman": "6 character long hex color string \`'#RRGGBB'\`, for example, \`'#000000'\` for black. Or 8 character long hex color string \`'#RRGGBBAA'\`, for example, \`'#00000088'\` for semi-transparent black.",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string \`'#RRGGBB'\`, for example, \`'#000000'\` for black. Or 8 character long hex color string \`'#RRGGBBAA'\`, for example, \`'#00000088'\` for semi-transparent black.",
              "type": "string",
            },
            "barStyle": Object {
              "description": "Configures the status bar icons to have a light or dark color. Valid values: \`light-content\`, \`dark-content\`. Defaults to \`dark-content\`",
              "enum": Array [
                "light-content",
                "dark-content",
              ],
              "markdownDescription": "Configures the status bar icons to have a light or dark color. Valid values: \`light-content\`, \`dark-content\`. Defaults to \`dark-content\`",
              "type": "string",
            },
            "hidden": Object {
              "description": "Instructs the system whether the status bar should be visible or not. Defaults to \`false\`",
              "markdownDescription": "Instructs the system whether the status bar should be visible or not. Defaults to \`false\`",
              "type": "boolean",
            },
            "translucent": Object {
              "description": "Sets \`android:windowTranslucentStatus\` in \`styles.xml\`. When false, the system status bar pushes the content of your app down (similar to \`position: relative\`). When true, the status bar floats above the content in your app (similar to \`position: absolute\`). Defaults to \`true\` to match the iOS status bar behavior (which can only float above content).",
              "markdownDescription": "Sets \`android:windowTranslucentStatus\` in \`styles.xml\`. When false, the system status bar pushes the content of your app down (similar to \`position: relative\`). When true, the status bar floats above the content in your app (similar to \`position: absolute\`). Defaults to \`true\` to match the iOS status bar behavior (which can only float above content).",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "appKey": Object {
          "description": "@deprecated By default, Expo looks for the application registered with the AppRegistry as \`main\`. If you would like to change this, you can specify the name in this property.",
          "markdownDescription": "@deprecated By default, Expo looks for the application registered with the AppRegistry as \`main\`. If you would like to change this, you can specify the name in this property.",
          "meta": Object {
            "deprecated": true,
          },
          "type": "string",
        },
        "assetBundlePatterns": Object {
          "description": "An array of file glob strings which point to assets that will be bundled within your standalone app binary. Read more in the [Offline Support guide](https://docs.expo.dev/guides/offline-support/)",
          "items": Object {
            "type": "string",
          },
          "markdownDescription": "An array of file glob strings which point to assets that will be bundled within your standalone app binary. Read more in the [Offline Support guide](https://docs.expo.dev/guides/offline-support/)",
          "type": "array",
        },
        "backgroundColor": Object {
          "description": "The background color for your app, behind any of your React views. This is also known as the root view background color. Requires \`expo-system-ui\` be installed in your project to work on iOS.",
          "markdownDescription": "The background color for your app, behind any of your React views. This is also known as the root view background color. Requires \`expo-system-ui\` be installed in your project to work on iOS.",
          "meta": Object {
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`. Default is white: \`'#ffffff'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`. Default is white: \`'#ffffff'\`",
          "type": "string",
        },
        "description": Object {
          "description": "A short description of what your app is and why it is great.",
          "markdownDescription": "A short description of what your app is and why it is great.",
          "type": "string",
        },
        "developmentClient": Object {
          "additionalProperties": false,
          "description": "Settings that apply specifically to running this app in a development client",
          "markdownDescription": "Settings that apply specifically to running this app in a development client",
          "properties": Object {
            "silentLaunch": Object {
              "description": "If true, the app will launch in a development client with no additional dialogs or progress indicators, just like in a standalone app.",
              "fallback": false,
              "markdownDescription": "If true, the app will launch in a development client with no additional dialogs or progress indicators, just like in a standalone app.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "entryPoint": Object {
          "description": "The relative path to your main JavaScript file.",
          "markdownDescription": "The relative path to your main JavaScript file.",
          "type": "string",
        },
        "experiments": Object {
          "additionalProperties": false,
          "description": "Enable experimental features that may be unstable, unsupported, or removed without deprecation notices.",
          "markdownDescription": "Enable experimental features that may be unstable, unsupported, or removed without deprecation notices.",
          "properties": Object {
            "turboModules": Object {
              "description": "Enables Turbo Modules, which are a type of native modules that use a different way of communicating between JS and platform code. When installing a Turbo Module you will need to enable this experimental option (the library still needs to be a part of Expo SDK already, like react-native-reanimated v2). Turbo Modules do not support remote debugging and enabling this option will disable remote debugging.",
              "fallback": false,
              "markdownDescription": "Enables Turbo Modules, which are a type of native modules that use a different way of communicating between JS and platform code. When installing a Turbo Module you will need to enable this experimental option (the library still needs to be a part of Expo SDK already, like react-native-reanimated v2). Turbo Modules do not support remote debugging and enabling this option will disable remote debugging.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "extra": Object {
          "additionalProperties": true,
          "description": "Any extra fields you want to pass to your experience. Values are accessible via \`Expo.Constants.manifest.extra\` ([Learn more](https://docs.expo.dev/versions/latest/sdk/constants/#constantsmanifest))",
          "markdownDescription": "Any extra fields you want to pass to your experience. Values are accessible via \`Expo.Constants.manifest.extra\` ([Learn more](https://docs.expo.dev/versions/latest/sdk/constants/#constantsmanifest))",
          "properties": Object {},
          "type": "object",
        },
        "facebookAdvertiserIDCollectionEnabled": Object {
          "description": "Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA and Android Advertising ID, automatically. If you don't set this property, Facebook's default policy will be used. (Applicable only to standalone apps.)

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Whether the Facebook SDK should collect advertiser ID properties, like the Apple IDFA and Android Advertising ID, automatically. If you don't set this property, Facebook's default policy will be used. (Applicable only to standalone apps.)

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "boolean",
        },
        "facebookAppId": Object {
          "description": "Used for all Facebook libraries. Set up your Facebook App ID at https://developers.facebook.com.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for all Facebook libraries. Set up your Facebook App ID at https://developers.facebook.com.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "pattern": "^[0-9]+$",
          "type": "string",
        },
        "facebookAutoInitEnabled": Object {
          "description": "Whether the Facebook SDK should be initialized automatically. The default in Expo (Client and in standalone apps) is \`false\`.",
          "markdownDescription": "Whether the Facebook SDK should be initialized automatically. The default in Expo (Client and in standalone apps) is \`false\`.",
          "type": "boolean",
        },
        "facebookAutoLogAppEventsEnabled": Object {
          "description": "Whether the Facebook SDK log app events automatically. If you don't set this property, Facebook's default will be used. (Applicable only to standalone apps.) Note: The Facebook SDK must be initialized for app events to work. You may autoinitialize Facebook SDK by setting \`facebookAutoInitEnabled\` to \`true\`

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Whether the Facebook SDK log app events automatically. If you don't set this property, Facebook's default will be used. (Applicable only to standalone apps.) Note: The Facebook SDK must be initialized for app events to work. You may autoinitialize Facebook SDK by setting \`facebookAutoInitEnabled\` to \`true\`

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "boolean",
        },
        "facebookDisplayName": Object {
          "description": "Used for native Facebook login.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for native Facebook login.

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "type": "string",
        },
        "facebookScheme": Object {
          "description": "Used for Facebook native login. Starts with 'fb' and followed by a string of digits, like 'fb1234567890'. You can find your scheme [here](https://developers.facebook.com/docs/facebook-login/ios)in the 'Configuring Your info.plist' section (only applicable to standalone apps and custom Expo Go apps).

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "markdownDescription": "Used for Facebook native login. Starts with 'fb' and followed by a string of digits, like 'fb1234567890'. You can find your scheme [here](https://developers.facebook.com/docs/facebook-login/ios)in the 'Configuring Your info.plist' section (only applicable to standalone apps and custom Expo Go apps).

**Bare workflow** - For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          "meta": Object {
            "bareWorkflow": "For details, check the [Facebook iOS SDK documentation](https://developers.facebook.com/docs/facebook-login/ios/#4--configure-your-project) and [Android SDK documentation](https://developers.facebook.com/docs/facebook-login/android#manifest)",
          },
          "pattern": "^fb[0-9]+[A-Za-z]*$",
          "type": "string",
        },
        "githubUrl": Object {
          "description": "If you would like to share the source code of your app on Github, enter the URL for the repository here and it will be linked to from your Expo project page.",
          "example": "https://github.com/expo/expo",
          "markdownDescription": "If you would like to share the source code of your app on Github, enter the URL for the repository here and it will be linked to from your Expo project page.",
          "pattern": "^https://github\\\\.com/",
          "type": Array [
            "string",
          ],
        },
        "hooks": Object {
          "additionalProperties": false,
          "description": "Configuration for scripts to run to hook into the publish process",
          "markdownDescription": "Configuration for scripts to run to hook into the publish process",
          "properties": Object {
            "postExport": Object {
              "items": Object {
                "$ref": "#/definitions/PublishHook",
              },
              "type": "array",
            },
            "postPublish": Object {
              "items": Object {
                "$ref": "#/definitions/PublishHook",
              },
              "type": "array",
            },
          },
          "type": "object",
        },
        "icon": Object {
          "description": "Local path or remote URL to an image to use for your app's icon. We recommend that you use a 1024x1024 png file. This icon will appear on the home screen and within the Expo app.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
          "markdownDescription": "Local path or remote URL to an image to use for your app's icon. We recommend that you use a 1024x1024 png file. This icon will appear on the home screen and within the Expo app.

**Bare workflow** - To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
          "meta": Object {
            "asset": true,
            "bareWorkflow": "To change your app's icon, edit or replace the files in \`ios/<PROJECT-NAME>/Assets.xcassets/AppIcon.appiconset\` (we recommend using Xcode), and \`android/app/src/main/res/mipmap-<RESOLUTION>\`. Be sure to follow the guidelines for each platform ([iOS](https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/), [Android 7.1 and below](https://material.io/design/iconography/#icon-treatments), and [Android 8+](https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive)) and to provide your new icon in each existing size.",
            "contentTypeHuman": ".png image",
            "contentTypePattern": "^image/png$",
            "square": true,
          },
          "type": "string",
        },
        "ios": Object {
          "$ref": "#/definitions/IOS",
        },
        "jsEngine": Object {
          "description": "Specifies the JavaScript engine for apps. Supported only on EAS Build. Defaults to \`jsc\`. Valid values: \`hermes\`, \`jsc\`.

**Bare workflow** - To change the JavaScript engine, update the \`expo.jsEngine\` value in \`ios/Podfile.properties.json\` or \`android/gradle.properties\`",
          "enum": Array [
            "hermes",
            "jsc",
          ],
          "fallback": "jsc",
          "markdownDescription": "Specifies the JavaScript engine for apps. Supported only on EAS Build. Defaults to \`jsc\`. Valid values: \`hermes\`, \`jsc\`.

**Bare workflow** - To change the JavaScript engine, update the \`expo.jsEngine\` value in \`ios/Podfile.properties.json\` or \`android/gradle.properties\`",
          "meta": Object {
            "bareWorkflow": "To change the JavaScript engine, update the \`expo.jsEngine\` value in \`ios/Podfile.properties.json\` or \`android/gradle.properties\`",
          },
          "type": "string",
        },
        "locales": Object {
          "additionalProperties": Object {
            "type": Array [
              "string",
              "object",
            ],
          },
          "description": "Provide overrides by locale for System Dialog prompts like Permissions Boxes

**Bare workflow** - To add or change language and localization information in your iOS app, you need to use Xcode.",
          "markdownDescription": "Provide overrides by locale for System Dialog prompts like Permissions Boxes

**Bare workflow** - To add or change language and localization information in your iOS app, you need to use Xcode.",
          "meta": Object {
            "bareWorkflow": "To add or change language and localization information in your iOS app, you need to use Xcode.",
          },
          "properties": Object {},
          "type": "object",
        },
        "name": Object {
          "description": "The name of your app as it appears both within Expo Go and on your home screen as a standalone app.

**Bare workflow** - To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          "markdownDescription": "The name of your app as it appears both within Expo Go and on your home screen as a standalone app.

**Bare workflow** - To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          "meta": Object {
            "bareWorkflow": "To change the name of your app, edit the 'Display Name' field in Xcode and the \`app_name\` string in \`android/app/src/main/res/values/strings.xml\`",
          },
          "type": "string",
        },
        "notification": Object {
          "additionalProperties": false,
          "description": "Configuration for remote (push) notifications.",
          "markdownDescription": "Configuration for remote (push) notifications.",
          "properties": Object {
            "androidCollapsedTitle": Object {
              "description": "If \`androidMode\` is set to \`collapse\`, this title is used for the collapsed notification message. For example, \`'#{unread_notifications} new interactions'\`.",
              "markdownDescription": "If \`androidMode\` is set to \`collapse\`, this title is used for the collapsed notification message. For example, \`'#{unread_notifications} new interactions'\`.",
              "type": "string",
            },
            "androidMode": Object {
              "description": "Show each push notification individually (\`default\`) or collapse into one (\`collapse\`).",
              "enum": Array [
                "default",
                "collapse",
              ],
              "markdownDescription": "Show each push notification individually (\`default\`) or collapse into one (\`collapse\`).",
              "type": "string",
            },
            "color": Object {
              "description": "(Android only) Tint color for the push notification image when it appears in the notification tray. Defaults to \`#ffffff\`",
              "markdownDescription": "(Android only) Tint color for the push notification image when it appears in the notification tray. Defaults to \`#ffffff\`",
              "meta": Object {
                "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
              },
              "pattern": "^#|(&#x23;)\\\\d{6}$",
              "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
              "type": "string",
            },
            "icon": Object {
              "description": "(Android only) Local path or remote URL to an image to use as the icon for push notifications. 96x96 png grayscale with transparency. We recommend following [Google's design guidelines](https://material.io/design/iconography/product-icons.html#design-principles). If not provided, defaults to your app icon.",
              "markdownDescription": "(Android only) Local path or remote URL to an image to use as the icon for push notifications. 96x96 png grayscale with transparency. We recommend following [Google's design guidelines](https://material.io/design/iconography/product-icons.html#design-principles). If not provided, defaults to your app icon.",
              "meta": Object {
                "asset": true,
                "contentTypeHuman": ".png image",
                "contentTypePattern": "^image/png$",
                "square": true,
              },
              "type": "string",
            },
            "iosDisplayInForeground": Object {
              "description": "Whether or not to display notifications when the app is in the foreground on iOS. \`_displayInForeground\` option in the individual push notification message overrides this option. [Learn more.](https://docs.expo.dev/push-notifications/receiving-notifications/#foreground-notification-behavior) Defaults to \`false\`.",
              "markdownDescription": "Whether or not to display notifications when the app is in the foreground on iOS. \`_displayInForeground\` option in the individual push notification message overrides this option. [Learn more.](https://docs.expo.dev/push-notifications/receiving-notifications/#foreground-notification-behavior) Defaults to \`false\`.",
              "type": "boolean",
            },
          },
          "type": "object",
        },
        "orientation": Object {
          "description": "Locks your app to a specific orientation with portrait or landscape. Defaults to no lock. Valid values: \`default\`, \`portrait\`, \`landscape\`",
          "enum": Array [
            "default",
            "portrait",
            "landscape",
          ],
          "markdownDescription": "Locks your app to a specific orientation with portrait or landscape. Defaults to no lock. Valid values: \`default\`, \`portrait\`, \`landscape\`",
          "type": "string",
        },
        "owner": Object {
          "description": "The name of the Expo account that owns the project. This is useful for teams collaborating on a project. If not provided, the owner defaults to the username of the current user.",
          "markdownDescription": "The name of the Expo account that owns the project. This is useful for teams collaborating on a project. If not provided, the owner defaults to the username of the current user.",
          "minLength": 1,
          "type": "string",
        },
        "platforms": Object {
          "description": "Platforms that your project explicitly supports. If not specified, it defaults to \`[\\"ios\\", \\"android\\"]\`.",
          "example": Array [
            "ios",
            "android",
            "web",
          ],
          "items": Object {
            "enum": Array [
              "android",
              "ios",
              "web",
            ],
            "type": "string",
          },
          "markdownDescription": "Platforms that your project explicitly supports. If not specified, it defaults to \`[\\"ios\\", \\"android\\"]\`.",
          "type": "array",
          "uniqueItems": true,
        },
        "plugins": Object {
          "description": "Config plugins for adding extra functionality to your project. [Learn more](https://docs.expo.dev/guides/config-plugins/).

**Bare workflow** - Plugins that add modifications can only be used with [prebuilding](https://expo.fyi/prebuilding) and managed EAS Build",
          "items": Object {
            "anyOf": Array [
              Object {
                "type": Array [
                  "string",
                ],
              },
              Object {
                "additionalItems": false,
                "items": Array [
                  Object {
                    "type": Array [
                      "string",
                    ],
                  },
                  Object {},
                ],
                "type": "array",
              },
            ],
          },
          "markdownDescription": "Config plugins for adding extra functionality to your project. [Learn more](https://docs.expo.dev/guides/config-plugins/).

**Bare workflow** - Plugins that add modifications can only be used with [prebuilding](https://expo.fyi/prebuilding) and managed EAS Build",
          "meta": Object {
            "bareWorkflow": "Plugins that add modifications can only be used with [prebuilding](https://expo.fyi/prebuilding) and managed EAS Build",
          },
          "type": "array",
        },
        "primaryColor": Object {
          "description": "On Android, this will determine the color of your app in the multitasker. Currently this is not used on iOS, but it may be used for other purposes in the future.",
          "markdownDescription": "On Android, this will determine the color of your app in the multitasker. Currently this is not used on iOS, but it may be used for other purposes in the future.",
          "meta": Object {
            "regexHuman": "6 character long hex color string, for example, \`'#000000'\`",
          },
          "pattern": "^#|(&#x23;)\\\\d{6}$",
          "patternErrorMessage": "6 character long hex color string, for example, \`'#000000'\`",
          "type": "string",
        },
        "privacy": Object {
          "description": "Defaults to \`unlisted\`. \`unlisted\` hides the project from search results. \`hidden\` restricts access to the project page to only the owner and other users that have been granted access. Valid values: \`public\`, \`unlisted\`, \`hidden\`.",
          "enum": Array [
            "public",
            "unlisted",
            "hidden",
          ],
          "fallback": "unlisted",
          "markdownDescription": "Defaults to \`unlisted\`. \`unlisted\` hides the project from search results. \`hidden\` restricts access to the project page to only the owner and other users that have been granted access. Valid values: \`public\`, \`unlisted\`, \`hidden\`.",
          "type": "string",
        },
        "runtimeVersion": Object {
          "$ref": "#/definitions/RuntimeVersion",
          "description": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest.
Set this to \`{\\"policy\\": \\"nativeVersion\\"}\` to generate it automatically.",
          "markdownDescription": "**Note: Don't use this property unless you are sure what you're doing** 

The runtime version associated with this manifest.
Set this to \`{\\"policy\\": \\"nativeVersion\\"}\` to generate it automatically.",
        },
        "scheme": Object {
          "description": "**Standalone Apps Only**. URL scheme to link into your app. For example, if we set this to \`'demo'\`, then demo:// URLs would open your app when tapped.

**Bare workflow** - To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
          "markdownDescription": "**Standalone Apps Only**. URL scheme to link into your app. For example, if we set this to \`'demo'\`, then demo:// URLs would open your app when tapped.

**Bare workflow** - To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
          "meta": Object {
            "bareWorkflow": "To change your app's scheme, replace all occurrences of the old scheme in \`Info.plist\` and \`AndroidManifest.xml\`",
            "regexHuman": "String beginning with a **lowercase** letter followed by any combination of **lowercase** letters, digits, \\"+\\", \\".\\" or \\"-\\"",
            "standaloneOnly": true,
          },
          "pattern": "^[a-z][a-z0-9+.-]*$",
          "patternErrorMessage": "String beginning with a **lowercase** letter followed by any combination of **lowercase** letters, digits, \\"+\\", \\".\\" or \\"-\\"",
          "type": "string",
        },
        "sdkVersion": Object {
          "description": "The Expo sdkVersion to run the project on. This should line up with the version specified in your package.json.",
          "markdownDescription": "The Expo sdkVersion to run the project on. This should line up with the version specified in your package.json.",
          "pattern": "^(\\\\d+\\\\.\\\\d+\\\\.\\\\d+)|(UNVERSIONED)$",
          "type": "string",
        },
        "slug": Object {
          "description": "The friendly URL name for publishing. For example, \`myAppName\` will refer to the \`expo.dev/@project-owner/myAppName\` project.",
          "markdownDescription": "The friendly URL name for publishing. For example, \`myAppName\` will refer to the \`expo.dev/@project-owner/myAppName\` project.",
          "pattern": "^[a-zA-Z0-9_\\\\-]+$",
          "type": "string",
        },
        "splash": Object {
          "$ref": "#/definitions/Splash",
        },
        "updates": Object {
          "additionalProperties": false,
          "description": "Configuration for how and when the app should request OTA JavaScript updates",
          "markdownDescription": "Configuration for how and when the app should request OTA JavaScript updates",
          "properties": Object {
            "checkAutomatically": Object {
              "description": "By default, Expo will check for updates every time the app is loaded. Set this to \`ON_ERROR_RECOVERY\` to disable automatic checking unless recovering from an error. Must be one of \`ON_LOAD\` or \`ON_ERROR_RECOVERY\`",
              "enum": Array [
                "ON_ERROR_RECOVERY",
                "ON_LOAD",
              ],
              "markdownDescription": "By default, Expo will check for updates every time the app is loaded. Set this to \`ON_ERROR_RECOVERY\` to disable automatic checking unless recovering from an error. Must be one of \`ON_LOAD\` or \`ON_ERROR_RECOVERY\`",
              "type": "string",
            },
            "codeSigningCertificate": Object {
              "description": "Local path of a PEM-formatted X.509 certificate used for requiring and verifying signed Expo updates",
              "markdownDescription": "Local path of a PEM-formatted X.509 certificate used for requiring and verifying signed Expo updates",
              "type": "string",
            },
            "codeSigningMetadata": Object {
              "additionalProperties": false,
              "description": "Metadata for \`codeSigningCertificate\`",
              "markdownDescription": "Metadata for \`codeSigningCertificate\`",
              "properties": Object {
                "alg": Object {
                  "description": "Algorithm used to generate manifest code signing signature.",
                  "enum": Array [
                    "rsa-v1_5-sha256",
                  ],
                  "markdownDescription": "Algorithm used to generate manifest code signing signature.",
                  "type": "string",
                },
                "keyid": Object {
                  "description": "Identifier for the key in the certificate. Used to instruct signing mechanisms when signing or verifying signatures.",
                  "markdownDescription": "Identifier for the key in the certificate. Used to instruct signing mechanisms when signing or verifying signatures.",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "enabled": Object {
              "description": "If set to false, your standalone app will never download any code, and will only use code bundled locally on the device. In that case, all updates to your app must be submitted through app store review. Defaults to true. (Note: This will not work out of the box with ExpoKit projects)",
              "markdownDescription": "If set to false, your standalone app will never download any code, and will only use code bundled locally on the device. In that case, all updates to your app must be submitted through app store review. Defaults to true. (Note: This will not work out of the box with ExpoKit projects)",
              "type": "boolean",
            },
            "fallbackToCacheTimeout": Object {
              "description": "How long (in ms) to allow for fetching OTA updates before falling back to a cached version of the app. Defaults to 0. Must be between 0 and 300000 (5 minutes).",
              "markdownDescription": "How long (in ms) to allow for fetching OTA updates before falling back to a cached version of the app. Defaults to 0. Must be between 0 and 300000 (5 minutes).",
              "maximum": 300000,
              "minimum": 0,
              "type": "number",
            },
            "url": Object {
              "description": "URL from which expo-updates will fetch update manifests",
              "markdownDescription": "URL from which expo-updates will fetch update manifests",
              "type": "string",
            },
          },
          "type": "object",
        },
        "userInterfaceStyle": Object {
          "description": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`. Requires \`expo-system-ui\` be installed in your project to work on Android.",
          "enum": Array [
            "light",
            "dark",
            "automatic",
          ],
          "fallback": "light",
          "markdownDescription": "Configuration to force the app to always use the light or dark user-interface appearance, such as \\"dark mode\\", or make it automatically adapt to the system preferences. If not provided, defaults to \`light\`. Requires \`expo-system-ui\` be installed in your project to work on Android.",
          "type": "string",
        },
        "version": Object {
          "description": "Your app version. In addition to this field, you'll also use \`ios.buildNumber\` and \`android.versionCode\` — read more about how to version your app [here](https://docs.expo.dev/distribution/app-stores/#versioning-your-app). On iOS this corresponds to \`CFBundleShortVersionString\`, and on Android, this corresponds to \`versionName\`. The required format can be found [here](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring).

**Bare workflow** - To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          "markdownDescription": "Your app version. In addition to this field, you'll also use \`ios.buildNumber\` and \`android.versionCode\` — read more about how to version your app [here](https://docs.expo.dev/distribution/app-stores/#versioning-your-app). On iOS this corresponds to \`CFBundleShortVersionString\`, and on Android, this corresponds to \`versionName\`. The required format can be found [here](https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleshortversionstring).

**Bare workflow** - To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          "meta": Object {
            "bareWorkflow": "To change your app version, edit the 'Version' field in Xcode and the \`versionName\` string in \`android/app/build.gradle\`",
          },
          "type": "string",
        },
        "web": Object {
          "$ref": "#/definitions/Web",
        },
      },
      "required": Array [
        "name",
        "slug",
      ],
      "type": "object",
    },
  },
  "type": "object",
  "version": "45.0.0.0.0",
}
`;
