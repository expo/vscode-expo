{
  "type": "object",
  "properties": {
    "on": {
      "type": "object",
      "properties": {
        "workflow_dispatch": {
          "type": "object",
          "properties": {
            "inputs": {
              "type": "object",
              "additionalProperties": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "description": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Description of the input",
                        "markdownDescription": "Description of the input"
                      },
                      "required": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "allOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "default": false,
                        "description": "Whether the input is required",
                        "markdownDescription": "Whether the input is required"
                      }
                    }
                  },
                  {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "string",
                            "default": "string"
                          },
                          "default": {
                            "allOf": [
                              {
                                "type": [
                                  "number",
                                  "string"
                                ]
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Default value for the input",
                            "markdownDescription": "Default value for the input"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "boolean"
                          },
                          "default": {
                            "anyOf": [
                              {
                                "type": "boolean"
                              },
                              {
                                "allOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              },
                              {
                                "type": "boolean"
                              }
                            ],
                            "description": "Default value for the input",
                            "markdownDescription": "Default value for the input"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "number"
                          },
                          "default": {
                            "type": "number",
                            "description": "Default value for the input",
                            "markdownDescription": "Default value for the input"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "choice"
                          },
                          "default": {
                            "allOf": [
                              {
                                "type": [
                                  "number",
                                  "string"
                                ]
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Default value for the input",
                            "markdownDescription": "Default value for the input"
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "type": [
                                    "number",
                                    "string"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            },
                            "minItems": 1,
                            "description": "Options for choice type inputs",
                            "markdownDescription": "Options for choice type inputs"
                          }
                        },
                        "required": [
                          "type",
                          "options"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "environment"
                          },
                          "default": {
                            "type": "string",
                            "enum": [
                              "production",
                              "preview",
                              "development"
                            ],
                            "description": "Default value for the input",
                            "markdownDescription": "Default value for the input"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ]
              },
              "description": "Configuration for inputs to the workflow.",
              "markdownDescription": "Configuration for inputs to the workflow."
            }
          },
          "additionalProperties": false,
          "description": "Configuration for manual workflow triggers",
          "markdownDescription": "Configuration for manual workflow triggers"
        },
        "push": {
          "type": "object",
          "properties": {
            "branches": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "description": "List of branches that pushing to will trigger the workflow. You can use basic regular expressions to match multiple branches, e.g. `feat/**`. By default pushes to any branch will trigger the workflow.",
              "markdownDescription": "List of branches that pushing to will trigger the workflow. You can use basic regular expressions to match multiple branches, e.g. `feat/**`. By default pushes to any branch will trigger the workflow."
            },
            "paths": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "description": "List of file paths that changing will trigger the workflow. You can use basic regular expressions to match multiple paths, e.g. `apps/mobile/**`. By default changes to any path will trigger the workflow.",
              "markdownDescription": "List of file paths that changing will trigger the workflow. You can use basic regular expressions to match multiple paths, e.g. `apps/mobile/**`. By default changes to any path will trigger the workflow."
            },
            "tags": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "description": "List of tags that pushing to will trigger the workflow. You can use basic regular expressions to match multiple tags, e.g. `feat/**`. By default pushes to any tag will not trigger the workflow.",
              "markdownDescription": "List of tags that pushing to will trigger the workflow. You can use basic regular expressions to match multiple tags, e.g. `feat/**`. By default pushes to any tag will not trigger the workflow."
            }
          },
          "additionalProperties": false,
          "description": "If provided, the workflow will be triggered on pushes to the specified branches and/or tags.",
          "markdownDescription": "If provided, the workflow will be triggered on pushes to the specified branches and/or tags."
        },
        "pull_request": {
          "type": "object",
          "properties": {
            "branches": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "default": [
                "*"
              ],
              "description": "If a given pull request's target branch matches any of entries here, updates of the pull request will start a new workflow. Example: if you specify \"main\" here, a pull request from \"feat/add-signup\" to \"main\" will start a workflow, but a pull request from \"main\" to \"release/1.0\" won't.",
              "markdownDescription": "If a given pull request's target branch matches any of entries here, updates of the pull request will start a new workflow. Example: if you specify \"main\" here, a pull request from \"feat/add-signup\" to \"main\" will start a workflow, but a pull request from \"main\" to \"release/1.0\" won't."
            },
            "paths": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "description": "List of file paths that changing will trigger the workflow. You can use basic regular expressions to match multiple paths, e.g. `apps/mobile/**`. By default changes to any path will trigger the workflow.",
              "markdownDescription": "List of file paths that changing will trigger the workflow. You can use basic regular expressions to match multiple paths, e.g. `apps/mobile/**`. By default changes to any path will trigger the workflow."
            },
            "types": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "opened",
                  "reopened",
                  "synchronize",
                  "labeled"
                ]
              },
              "default": [
                "opened",
                "reopened",
                "synchronize"
              ],
              "description": "Describes the types of pull request events that will trigger the workflow. By default the workflow will be triggered by pull_request.opened, pull_request.reopened and pull_request.synchronize events.",
              "markdownDescription": "Describes the types of pull request events that will trigger the workflow. By default the workflow will be triggered by pull_request.opened, pull_request.reopened and pull_request.synchronize events."
            }
          },
          "additionalProperties": false,
          "description": "If provided, the workflow will be triggered on updates to GitHub pull request events pointing as target to the specified branches.",
          "markdownDescription": "If provided, the workflow will be triggered on updates to GitHub pull request events pointing as target to the specified branches."
        },
        "pull_request_labeled": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of labels that, assigned to a pull request, will trigger this workflow.",
              "markdownDescription": "List of labels that, assigned to a pull request, will trigger this workflow."
            },
            {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "default": [],
                  "description": "If a given pull request is labeled with a label matching any of the entries here, a new workflow will be started. Example: if you specify \"preview\" here, adding a \"preview\" label to the pull request will start a workflow, but adding other labels will not.",
                  "markdownDescription": "If a given pull request is labeled with a label matching any of the entries here, a new workflow will be started. Example: if you specify \"preview\" here, adding a \"preview\" label to the pull request will start a workflow, but adding other labels will not."
                }
              },
              "additionalProperties": false
            }
          ],
          "description": "If provided, the workflow will be triggered when the pull request is labeled with any label matching the specified labels.",
          "markdownDescription": "If provided, the workflow will be triggered when the pull request is labeled with any label matching the specified labels."
        },
        "schedule": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cron": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "required": [
              "cron"
            ],
            "additionalProperties": false
          },
          "description": "List of cron expressions to trigger the workflow.",
          "markdownDescription": "List of cron expressions to trigger the workflow."
        }
      },
      "additionalProperties": false,
      "description": "Configuration for GitHub events that trigger the workflow.",
      "markdownDescription": "Configuration for GitHub events that trigger the workflow."
    },
    "jobs": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "build"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "params": {
                "type": "object",
                "properties": {
                  "platform": {
                    "type": "string",
                    "description": "Platform to build for.",
                    "markdownDescription": "Platform to build for."
                  },
                  "profile": {
                    "type": "string",
                    "default": "production",
                    "description": "Build profile name to use.",
                    "markdownDescription": "Build profile name to use."
                  }
                },
                "required": [
                  "platform"
                ],
                "additionalProperties": false
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              },
              "steps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\".",
                          "markdownDescription": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\"."
                        },
                        "if": {
                          "type": "string",
                          "description": "Expression that determines whether the step should run.",
                          "markdownDescription": "Expression that determines whether the step should run."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the step.",
                          "markdownDescription": "Name of the step."
                        },
                        "working_directory": {
                          "type": "string",
                          "description": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                          "markdownDescription": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                        },
                        "env": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Additional environment variables to set for the step.",
                          "markdownDescription": "Additional environment variables to set for the step."
                        },
                        "run": {
                          "type": "string",
                          "description": "Shell script to run in the step.",
                          "markdownDescription": "Shell script to run in the step."
                        },
                        "shell": {
                          "type": "string",
                          "description": "Shell to run the \"run\" command with.",
                          "markdownDescription": "Shell to run the \"run\" command with."
                        },
                        "outputs": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "required": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "uses": {
                          "not": {}
                        },
                        "with": {
                          "not": {}
                        }
                      },
                      "required": [
                        "run"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\".",
                          "markdownDescription": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\"."
                        },
                        "if": {
                          "type": "string",
                          "description": "Expression that determines whether the step should run.",
                          "markdownDescription": "Expression that determines whether the step should run."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the step.",
                          "markdownDescription": "Name of the step."
                        },
                        "working_directory": {
                          "type": "string",
                          "description": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                          "markdownDescription": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                        },
                        "env": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Additional environment variables to set for the step.",
                          "markdownDescription": "Additional environment variables to set for the step."
                        },
                        "uses": {
                          "type": "string",
                          "description": "Name of the function to use for this step. See https://docs.expo.dev/custom-builds/schema/#built-in-eas-functions for available functions.",
                          "markdownDescription": "Name of the function to use for this step. See https://docs.expo.dev/custom-builds/schema/#built-in-eas-functions for available functions."
                        },
                        "with": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Inputs to the function.",
                          "markdownDescription": "Inputs to the function."
                        },
                        "run": {
                          "not": {}
                        },
                        "shell": {
                          "not": {}
                        },
                        "outputs": {
                          "not": {}
                        }
                      },
                      "required": [
                        "uses"
                      ],
                      "additionalProperties": false
                    }
                  ]
                },
                "description": "Custom build steps to run. If specified, they override custom build YAML config provided through eas.json.",
                "markdownDescription": "Custom build steps to run. If specified, they override custom build YAML config provided through eas.json."
              },
              "outputs": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Mapping from steps outputs to job outputs.",
                "markdownDescription": "Mapping from steps outputs to job outputs."
              }
            },
            "required": [
              "type",
              "params"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "custom"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "image": {
                "type": "string",
                "default": "auto",
                "description": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images.",
                "markdownDescription": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images."
              },
              "runs_on": {
                "type": "string",
                "enum": [
                  "linux-medium",
                  "linux-large",
                  "macos-medium",
                  "macos-large",
                  "linux-medium-nested-virtualization",
                  "linux-large-nested-virtualization"
                ],
                "description": "Runner to use for the job.",
                "markdownDescription": "Runner to use for the job.",
                "default": "linux-medium"
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              },
              "defaults": {
                "type": "object",
                "properties": {
                  "run": {
                    "type": "object",
                    "properties": {
                      "working_directory": {
                        "type": "string",
                        "description": "Working directory to run the script in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                        "markdownDescription": "Working directory to run the script in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "steps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\".",
                          "markdownDescription": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\"."
                        },
                        "if": {
                          "type": "string",
                          "description": "Expression that determines whether the step should run.",
                          "markdownDescription": "Expression that determines whether the step should run."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the step.",
                          "markdownDescription": "Name of the step."
                        },
                        "working_directory": {
                          "type": "string",
                          "description": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                          "markdownDescription": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                        },
                        "env": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Additional environment variables to set for the step.",
                          "markdownDescription": "Additional environment variables to set for the step."
                        },
                        "run": {
                          "type": "string",
                          "description": "Shell script to run in the step.",
                          "markdownDescription": "Shell script to run in the step."
                        },
                        "shell": {
                          "type": "string",
                          "description": "Shell to run the \"run\" command with.",
                          "markdownDescription": "Shell to run the \"run\" command with."
                        },
                        "outputs": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "required": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "uses": {
                          "not": {}
                        },
                        "with": {
                          "not": {}
                        }
                      },
                      "required": [
                        "run"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\".",
                          "markdownDescription": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\"."
                        },
                        "if": {
                          "type": "string",
                          "description": "Expression that determines whether the step should run.",
                          "markdownDescription": "Expression that determines whether the step should run."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the step.",
                          "markdownDescription": "Name of the step."
                        },
                        "working_directory": {
                          "type": "string",
                          "description": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                          "markdownDescription": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                        },
                        "env": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Additional environment variables to set for the step.",
                          "markdownDescription": "Additional environment variables to set for the step."
                        },
                        "uses": {
                          "type": "string",
                          "description": "Name of the function to use for this step. See https://docs.expo.dev/custom-builds/schema/#built-in-eas-functions for available functions.",
                          "markdownDescription": "Name of the function to use for this step. See https://docs.expo.dev/custom-builds/schema/#built-in-eas-functions for available functions."
                        },
                        "with": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "Inputs to the function.",
                          "markdownDescription": "Inputs to the function."
                        },
                        "run": {
                          "not": {}
                        },
                        "shell": {
                          "not": {}
                        },
                        "outputs": {
                          "not": {}
                        }
                      },
                      "required": [
                        "uses"
                      ],
                      "additionalProperties": false
                    }
                  ]
                },
                "description": "List of steps to run in the job.",
                "markdownDescription": "List of steps to run in the job."
              },
              "outputs": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Mapping from steps outputs to job outputs.",
                "markdownDescription": "Mapping from steps outputs to job outputs."
              }
            },
            "required": [
              "steps"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "deploy"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              },
              "params": {
                "type": "object",
                "properties": {
                  "alias": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Custom alias to assign to the new deployment.",
                    "markdownDescription": "Custom alias to assign to the new deployment."
                  },
                  "prod": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "allOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "type": "boolean"
                      }
                    ],
                    "description": "Create a new production deployment.",
                    "markdownDescription": "Create a new production deployment."
                  }
                },
                "additionalProperties": false
              }
            },
            "required": [
              "type"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "fingerprint"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              }
            },
            "required": [
              "type"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "get-build"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "params": {
                "type": "object",
                "properties": {
                  "app_build_version": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "app_identifier": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "app_version": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "channel": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "distribution": {
                    "type": "string"
                  },
                  "fingerprint_hash": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "git_commit_hash": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "platform": {
                    "type": "string"
                  },
                  "profile": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "runtime_version": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "sdk_version": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "simulator": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "allOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "description": "Filters to find the build by.",
                "markdownDescription": "Filters to find the build by."
              }
            },
            "required": [
              "type",
              "params"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "maestro-cloud"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "image": {
                "type": "string",
                "default": "auto",
                "description": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images.",
                "markdownDescription": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images."
              },
              "params": {
                "type": "object",
                "properties": {
                  "build_id": {
                    "type": "string",
                    "description": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\"",
                    "markdownDescription": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\""
                  },
                  "maestro_project_id": {
                    "type": "string",
                    "description": "ID of the Maestro project to use for the test. Go to \"Settings\" on https://app.maestro.dev/ to see the project ID.",
                    "markdownDescription": "ID of the Maestro project to use for the test. Go to \"Settings\" on https://app.maestro.dev/ to see the project ID."
                  },
                  "maestro_api_key": {
                    "type": "string",
                    "default": "$MAESTRO_CLOUD_API_KEY",
                    "description": "API key to use for the Maestro project. Go to \"Settings\" on https://app.maestro.dev/ to generate an API key. When not specified, MAESTRO_CLOUD_API_KEY environment variable will be used.",
                    "markdownDescription": "API key to use for the Maestro project. Go to \"Settings\" on https://app.maestro.dev/ to generate an API key. When not specified, MAESTRO_CLOUD_API_KEY environment variable will be used."
                  },
                  "flows": {
                    "type": "string",
                    "description": "Path to a Maestro test file or a directory containing the files. Corresponds to the `--flows` flag in `maestro cloud`.",
                    "markdownDescription": "Path to a Maestro test file or a directory containing the files. Corresponds to the `--flows` flag in `maestro cloud`."
                  },
                  "include_tags": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ],
                    "description": "Tags to include in the tests. Will be passed to Maestro as `--include-tags`.",
                    "markdownDescription": "Tags to include in the tests. Will be passed to Maestro as `--include-tags`."
                  },
                  "exclude_tags": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ],
                    "description": "Tags to exclude from the tests. Will be passed to Maestro as `--exclude-tags`.",
                    "markdownDescription": "Tags to exclude from the tests. Will be passed to Maestro as `--exclude-tags`."
                  },
                  "maestro_version": {
                    "type": "string",
                    "description": "Version of Maestro to use for the tests. If not provided, the latest version will be used.",
                    "markdownDescription": "Version of Maestro to use for the tests. If not provided, the latest version will be used."
                  },
                  "android_api_level": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Android API level to use for the tests. Corresponds to the `--android-api-level` flag in `maestro cloud`.",
                    "markdownDescription": "Android API level to use for the tests. Corresponds to the `--android-api-level` flag in `maestro cloud`."
                  },
                  "maestro_config": {
                    "type": "string",
                    "description": "Optional path to a Maestro `config.yaml` file. Corresponds to the `--config` flag in `maestro cloud`.",
                    "markdownDescription": "Optional path to a Maestro `config.yaml` file. Corresponds to the `--config` flag in `maestro cloud`."
                  },
                  "device_locale": {
                    "type": "string",
                    "description": "Locale to use for the tests. Corresponds to the `--device-locale` flag in `maestro cloud`.",
                    "markdownDescription": "Locale to use for the tests. Corresponds to the `--device-locale` flag in `maestro cloud`."
                  },
                  "device_model": {
                    "type": "string",
                    "description": "Model of the device to use for the tests. Corresponds to the `--device-model` flag in `maestro cloud`. Run `maestro cloud --help` for an up-to-date list of supported values.",
                    "markdownDescription": "Model of the device to use for the tests. Corresponds to the `--device-model` flag in `maestro cloud`. Run `maestro cloud --help` for an up-to-date list of supported values."
                  },
                  "device_os": {
                    "type": "string",
                    "description": "OS of the device to use for the tests. Corresponds to the `--device-os` flag in `maestro cloud`. Run `maestro cloud --help` for an up-to-date list of supported values.",
                    "markdownDescription": "OS of the device to use for the tests. Corresponds to the `--device-os` flag in `maestro cloud`. Run `maestro cloud --help` for an up-to-date list of supported values."
                  },
                  "skip_build_check": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "allOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "type": "boolean"
                      }
                    ],
                    "description": "Skip validation of the build (whether an iOS build is a simulator build).",
                    "markdownDescription": "Skip validation of the build (whether an iOS build is a simulator build)."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name for the Maestro Cloud upload. Corresponds to the `--name` flag in `maestro cloud`.",
                    "markdownDescription": "Name for the Maestro Cloud upload. Corresponds to the `--name` flag in `maestro cloud`."
                  },
                  "branch": {
                    "type": "string",
                    "description": "Override for the branch the Maestro Cloud upload originated from. By default, if the workflow run has been triggered from GitHub, the branch of the workflow run will be used. Corresponds to the `--branch` flag in `maestro cloud`.",
                    "markdownDescription": "Override for the branch the Maestro Cloud upload originated from. By default, if the workflow run has been triggered from GitHub, the branch of the workflow run will be used. Corresponds to the `--branch` flag in `maestro cloud`."
                  },
                  "async": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "allOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "type": "boolean"
                      }
                    ],
                    "description": "Run the Maestro Cloud tests asynchronously. If true, the status of the job will only denote whether the upload was successful, *not* whether the tests succeeded. Corresponds to the `--async` flag in `maestro cloud`.",
                    "markdownDescription": "Run the Maestro Cloud tests asynchronously. If true, the status of the job will only denote whether the upload was successful, *not* whether the tests succeeded. Corresponds to the `--async` flag in `maestro cloud`."
                  }
                },
                "required": [
                  "build_id",
                  "maestro_project_id",
                  "flows"
                ],
                "additionalProperties": false
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              },
              "runs_on": {
                "type": "string",
                "enum": [
                  "linux-medium",
                  "linux-large",
                  "macos-medium",
                  "macos-large",
                  "linux-medium-nested-virtualization",
                  "linux-large-nested-virtualization"
                ],
                "description": "Runner to use for the job.",
                "markdownDescription": "Runner to use for the job."
              }
            },
            "required": [
              "type",
              "params"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "maestro"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "image": {
                "type": "string",
                "default": "auto",
                "description": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images.",
                "markdownDescription": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images."
              },
              "params": {
                "type": "object",
                "properties": {
                  "build_id": {
                    "type": "string",
                    "description": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\"",
                    "markdownDescription": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\""
                  },
                  "flow_path": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ],
                    "description": "Path (or a list of paths)to the Maestro test file(s).",
                    "markdownDescription": "Path (or a list of paths)to the Maestro test file(s)."
                  },
                  "record_screen": {
                    "type": "boolean",
                    "default": false,
                    "description": "Upload a screen recording of the tests.",
                    "markdownDescription": "Upload a screen recording of the tests."
                  },
                  "shards": {
                    "type": "integer",
                    "exclusiveMinimum": 0,
                    "description": "Number of shards to split the tests into.",
                    "markdownDescription": "Number of shards to split the tests into."
                  },
                  "retries": {
                    "type": "integer",
                    "exclusiveMinimum": 0,
                    "default": 1,
                    "description": "Number of times to retry the tests if they fail.",
                    "markdownDescription": "Number of times to retry the tests if they fail."
                  },
                  "include_tags": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ],
                    "description": "Tags to include in the tests. Will be passed to Maestro as `--include-tags`.",
                    "markdownDescription": "Tags to include in the tests. Will be passed to Maestro as `--include-tags`."
                  },
                  "exclude_tags": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ],
                    "description": "Tags to exclude from the tests. Will be passed to Maestro as `--exclude-tags`.",
                    "markdownDescription": "Tags to exclude from the tests. Will be passed to Maestro as `--exclude-tags`."
                  },
                  "maestro_version": {
                    "type": "string",
                    "description": "Version of Maestro to use for the tests. If not provided, the latest version will be used.",
                    "markdownDescription": "Version of Maestro to use for the tests. If not provided, the latest version will be used."
                  },
                  "output_format": {
                    "type": "string",
                    "enum": [
                      "junit"
                    ],
                    "description": "Maestro test report format. Will be passed to Maestro as `--format`.",
                    "markdownDescription": "Maestro test report format. Will be passed to Maestro as `--format`."
                  },
                  "android_system_image_package": {
                    "type": "string",
                    "description": "Android emulator system image package to use. Run `sdkmanager --list` on your machine to list available packages. Choose an `x86_64` variant. Examples: `system-images;android-36;google_apis;x86_64`, `system-images;android-35-ext15;google_apis_playstore;x86_64`.",
                    "markdownDescription": "Android emulator system image package to use. Run `sdkmanager --list` on your machine to list available packages. Choose an `x86_64` variant. Examples: `system-images;android-36;google_apis;x86_64`, `system-images;android-35-ext15;google_apis_playstore;x86_64`."
                  },
                  "device_identifier": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "android": {
                            "type": "string",
                            "description": "Android emulator device identifier. E.g. \"pixel_6\".",
                            "markdownDescription": "Android emulator device identifier. E.g. \"pixel_6\"."
                          },
                          "ios": {
                            "type": "string",
                            "description": "iOS Simulator device identifier. E.g. \"iPhone 16\"",
                            "markdownDescription": "iOS Simulator device identifier. E.g. \"iPhone 16\""
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "anyOf": [
                          {
                            "not": {}
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Device identifier to emulate / simulate. Make sure to use value appropriate for the runtime platform. E.g. \"iPhone 16\" for iOS, \"pixel_6\" for Android.",
                        "markdownDescription": "Device identifier to emulate / simulate. Make sure to use value appropriate for the runtime platform. E.g. \"iPhone 16\" for iOS, \"pixel_6\" for Android."
                      }
                    ],
                    "description": "Device identifier to emulate / simulate. Run `adb devices` on your machine to list available devices.",
                    "markdownDescription": "Device identifier to emulate / simulate. Run `adb devices` on your machine to list available devices."
                  },
                  "skip_build_check": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "allOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "type": "boolean"
                      }
                    ],
                    "description": "Skip validation of the build (whether an iOS build is a simulator build).",
                    "markdownDescription": "Skip validation of the build (whether an iOS build is a simulator build)."
                  },
                  "reuse_devices": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "allOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      {
                        "type": "boolean"
                      }
                    ],
                    "default": true,
                    "description": "Reuse a single set of devices for all the tests. If false, each flow in `flow_path` will be run on a clean device. Disabling this is very experimental and some features may not work.",
                    "markdownDescription": "Reuse a single set of devices for all the tests. If false, each flow in `flow_path` will be run on a clean device. Disabling this is very experimental and some features may not work."
                  }
                },
                "required": [
                  "build_id",
                  "flow_path"
                ],
                "additionalProperties": false
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              },
              "runs_on": {
                "type": "string",
                "enum": [
                  "linux-medium",
                  "linux-large",
                  "macos-medium",
                  "macos-large",
                  "linux-medium-nested-virtualization",
                  "linux-large-nested-virtualization"
                ],
                "description": "Runner to use for the job.",
                "markdownDescription": "Runner to use for the job."
              }
            },
            "required": [
              "type",
              "params"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "require-approval"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              }
            },
            "required": [
              "type"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "submit"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "params": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "string",
                    "default": "production",
                    "description": "Name of the submit profile to use.",
                    "markdownDescription": "Name of the submit profile to use."
                  },
                  "build_id": {
                    "type": "string",
                    "description": "ID of the build to submit. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\"",
                    "markdownDescription": "ID of the build to submit. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\""
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "TestFlight internal group names to add the build to.",
                    "markdownDescription": "TestFlight internal group names to add the build to."
                  }
                },
                "required": [
                  "build_id"
                ],
                "additionalProperties": false
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              }
            },
            "required": [
              "type",
              "params"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "update"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "params": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Message to use for the update. If not provided, the commit message will be used.",
                    "markdownDescription": "Message to use for the update. If not provided, the commit message will be used."
                  },
                  "platform": {
                    "type": "string",
                    "description": "Platform to use for the update (\"android\", \"ios\" or \"all\").",
                    "markdownDescription": "Platform to use for the update (\"android\", \"ios\" or \"all\")."
                  },
                  "branch": {
                    "type": "string",
                    "description": "Branch to use for the update. If not provided, the branch from the workflow run will be used. For manually run workflows you need to provide a value. Example: \"${{ github.ref_name || 'testing-new-workflow' }}\". Provide *either* a branch or a channel, not both.",
                    "markdownDescription": "Branch to use for the update. If not provided, the branch from the workflow run will be used. For manually run workflows you need to provide a value. Example: \"${{ github.ref_name || 'testing-new-workflow' }}\". Provide *either* a branch or a channel, not both."
                  },
                  "channel": {
                    "type": "string",
                    "description": "Channel to use for the update. Provide *either* a branch or a channel, not both.",
                    "markdownDescription": "Channel to use for the update. Provide *either* a branch or a channel, not both."
                  }
                },
                "additionalProperties": false,
                "default": {}
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              }
            },
            "required": [
              "type"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "slack"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "params": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "webhook_url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "webhook_url"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "payload": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                          }
                        },
                        "required": [
                          "payload"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                ]
              }
            },
            "required": [
              "type",
              "params"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "doc"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "params": {
                "type": "object",
                "properties": {
                  "md": {
                    "type": "string",
                    "description": "Markdown content to render.",
                    "markdownDescription": "Markdown content to render."
                  }
                },
                "required": [
                  "md"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "type",
              "params"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "type": [
                      "number",
                      "string"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The name of the job. Displayed on the workflow run page.",
                "markdownDescription": "The name of the job. Displayed on the workflow run page."
              },
              "type": {
                "type": "string",
                "const": "repack"
              },
              "if": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string",
                    "maxLength": 250
                  }
                ],
                "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
              },
              "needs": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
              },
              "after": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": [],
                "description": "List of keys of jobs that are required to complete before this job can run.",
                "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
              },
              "environment": {
                "type": "string",
                "enum": [
                  "production",
                  "preview",
                  "development"
                ],
                "description": "The environment to run the job in.",
                "markdownDescription": "The environment to run the job in."
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "default": {},
                "description": "Environment variables to provide to the job.",
                "markdownDescription": "Environment variables to provide to the job."
              },
              "params": {
                "type": "object",
                "properties": {
                  "build_id": {
                    "type": "string",
                    "description": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\"",
                    "markdownDescription": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\""
                  },
                  "profile": {
                    "type": "string",
                    "description": "Build profile name to use. By default uses the same profile as the source build.",
                    "markdownDescription": "Build profile name to use. By default uses the same profile as the source build."
                  },
                  "embed_bundle_assets": {
                    "type": "boolean",
                    "description": "Whether to embed bundle assets into the repacked app. Defaults to the detected build type by the source app.",
                    "markdownDescription": "Whether to embed bundle assets into the repacked app. Defaults to the detected build type by the source app."
                  }
                },
                "required": [
                  "build_id"
                ],
                "additionalProperties": false
              },
              "outputs": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Job outputs.",
                "markdownDescription": "Job outputs."
              }
            },
            "required": [
              "type",
              "params"
            ],
            "additionalProperties": false
          }
        ]
      },
      "description": "Configuration of jobs to run in the workflow.",
      "markdownDescription": "Configuration of jobs to run in the workflow."
    },
    "name": {
      "allOf": [
        {
          "type": [
            "number",
            "string"
          ]
        },
        {
          "type": "string"
        }
      ],
      "description": "The name of the workflow. Displayed on the workflow page.",
      "markdownDescription": "The name of the workflow. Displayed on the workflow page."
    },
    "defaults": {
      "type": "object",
      "properties": {
        "run": {
          "type": "object",
          "properties": {
            "working_directory": {
              "type": "string",
              "description": "Default working directory to run the scripts in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
              "markdownDescription": "Default working directory to run the scripts in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
            }
          },
          "additionalProperties": false
        },
        "tools": {
          "type": "object",
          "properties": {
            "node": {
              "allOf": [
                {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "type": "string"
                }
              ],
              "description": "Version of Node.js.",
              "markdownDescription": "Version of Node.js."
            },
            "yarn": {
              "allOf": [
                {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "type": "string"
                }
              ],
              "description": "Version of Yarn.",
              "markdownDescription": "Version of Yarn."
            },
            "corepack": {
              "type": "boolean",
              "description": "Whether to enable corepack.",
              "markdownDescription": "Whether to enable corepack."
            },
            "pnpm": {
              "allOf": [
                {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "type": "string"
                }
              ],
              "description": "Version of pnpm.",
              "markdownDescription": "Version of pnpm."
            },
            "bun": {
              "allOf": [
                {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "type": "string"
                }
              ],
              "description": "Version of Bun.",
              "markdownDescription": "Version of Bun."
            },
            "ndk": {
              "allOf": [
                {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "type": "string"
                }
              ],
              "description": "Version of Android NDK.",
              "markdownDescription": "Version of Android NDK."
            },
            "bundler": {
              "allOf": [
                {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "type": "string"
                }
              ],
              "description": "Version of Bundler.",
              "markdownDescription": "Version of Bundler."
            },
            "fastlane": {
              "allOf": [
                {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "type": "string"
                }
              ],
              "description": "Version of fastlane.",
              "markdownDescription": "Version of fastlane."
            },
            "cocoapods": {
              "allOf": [
                {
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "type": "string"
                }
              ],
              "description": "Version of CocoaPods.",
              "markdownDescription": "Version of CocoaPods."
            }
          },
          "additionalProperties": false,
          "description": "Specific versions of tools that should be used for jobs defined in this workflow configuration. Follow each tool's documentation for available values.",
          "markdownDescription": "Specific versions of tools that should be used for jobs defined in this workflow configuration. Follow each tool's documentation for available values."
        }
      },
      "additionalProperties": false
    },
    "concurrency": {
      "type": "object",
      "properties": {
        "cancel_in_progress": {
          "type": "boolean",
          "const": true,
          "description": "If true, new workflow runs started from GitHub will cancel current in-progress runs for the same branch.",
          "markdownDescription": "If true, new workflow runs started from GitHub will cancel current in-progress runs for the same branch."
        },
        "group": {
          "type": "string",
          "const": "${{ workflow.filename }}-${{ github.ref }}",
          "description": "Custom concurrency groups are not yet supported. Set this placeholder value to ensure that your workflow remains compatible when custom groups support is available.",
          "markdownDescription": "Custom concurrency groups are not yet supported. Set this placeholder value to ensure that your workflow remains compatible when custom groups support is available."
        }
      },
      "required": [
        "cancel_in_progress",
        "group"
      ],
      "additionalProperties": false,
      "description": "Configuration for concurrency control. Currently only allows setting cancel_in_progress for same-branch workflows.",
      "markdownDescription": "Configuration for concurrency control. Currently only allows setting cancel_in_progress for same-branch workflows."
    }
  },
  "required": [
    "jobs"
  ],
  "additionalProperties": false,
  "$defs": {
    "workflow": {
      "type": "object",
      "properties": {
        "on": {
          "type": "object",
          "properties": {
            "workflow_dispatch": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "object",
                  "additionalProperties": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "description": {
                            "allOf": [
                              {
                                "type": [
                                  "number",
                                  "string"
                                ]
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Description of the input",
                            "markdownDescription": "Description of the input"
                          },
                          "required": {
                            "anyOf": [
                              {
                                "type": "boolean"
                              },
                              {
                                "allOf": [
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              },
                              {
                                "type": "boolean"
                              }
                            ],
                            "default": false,
                            "description": "Whether the input is required",
                            "markdownDescription": "Whether the input is required"
                          }
                        }
                      },
                      {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "string",
                                "default": "string"
                              },
                              "default": {
                                "allOf": [
                                  {
                                    "type": [
                                      "number",
                                      "string"
                                    ]
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Default value for the input",
                                "markdownDescription": "Default value for the input"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "boolean"
                              },
                              "default": {
                                "anyOf": [
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ],
                                "description": "Default value for the input",
                                "markdownDescription": "Default value for the input"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "number"
                              },
                              "default": {
                                "type": "number",
                                "description": "Default value for the input",
                                "markdownDescription": "Default value for the input"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "choice"
                              },
                              "default": {
                                "allOf": [
                                  {
                                    "type": [
                                      "number",
                                      "string"
                                    ]
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Default value for the input",
                                "markdownDescription": "Default value for the input"
                              },
                              "options": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": [
                                        "number",
                                        "string"
                                      ]
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                },
                                "minItems": 1,
                                "description": "Options for choice type inputs",
                                "markdownDescription": "Options for choice type inputs"
                              }
                            },
                            "required": [
                              "type",
                              "options"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "environment"
                              },
                              "default": {
                                "type": "string",
                                "enum": [
                                  "production",
                                  "preview",
                                  "development"
                                ],
                                "description": "Default value for the input",
                                "markdownDescription": "Default value for the input"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ]
                  },
                  "description": "Configuration for inputs to the workflow.",
                  "markdownDescription": "Configuration for inputs to the workflow."
                }
              },
              "additionalProperties": false,
              "description": "Configuration for manual workflow triggers",
              "markdownDescription": "Configuration for manual workflow triggers"
            },
            "push": {
              "type": "object",
              "properties": {
                "branches": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "description": "List of branches that pushing to will trigger the workflow. You can use basic regular expressions to match multiple branches, e.g. `feat/**`. By default pushes to any branch will trigger the workflow.",
                  "markdownDescription": "List of branches that pushing to will trigger the workflow. You can use basic regular expressions to match multiple branches, e.g. `feat/**`. By default pushes to any branch will trigger the workflow."
                },
                "paths": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "description": "List of file paths that changing will trigger the workflow. You can use basic regular expressions to match multiple paths, e.g. `apps/mobile/**`. By default changes to any path will trigger the workflow.",
                  "markdownDescription": "List of file paths that changing will trigger the workflow. You can use basic regular expressions to match multiple paths, e.g. `apps/mobile/**`. By default changes to any path will trigger the workflow."
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "description": "List of tags that pushing to will trigger the workflow. You can use basic regular expressions to match multiple tags, e.g. `feat/**`. By default pushes to any tag will not trigger the workflow.",
                  "markdownDescription": "List of tags that pushing to will trigger the workflow. You can use basic regular expressions to match multiple tags, e.g. `feat/**`. By default pushes to any tag will not trigger the workflow."
                }
              },
              "additionalProperties": false,
              "description": "If provided, the workflow will be triggered on pushes to the specified branches and/or tags.",
              "markdownDescription": "If provided, the workflow will be triggered on pushes to the specified branches and/or tags."
            },
            "pull_request": {
              "type": "object",
              "properties": {
                "branches": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "default": [
                    "*"
                  ],
                  "description": "If a given pull request's target branch matches any of entries here, updates of the pull request will start a new workflow. Example: if you specify \"main\" here, a pull request from \"feat/add-signup\" to \"main\" will start a workflow, but a pull request from \"main\" to \"release/1.0\" won't.",
                  "markdownDescription": "If a given pull request's target branch matches any of entries here, updates of the pull request will start a new workflow. Example: if you specify \"main\" here, a pull request from \"feat/add-signup\" to \"main\" will start a workflow, but a pull request from \"main\" to \"release/1.0\" won't."
                },
                "paths": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "description": "List of file paths that changing will trigger the workflow. You can use basic regular expressions to match multiple paths, e.g. `apps/mobile/**`. By default changes to any path will trigger the workflow.",
                  "markdownDescription": "List of file paths that changing will trigger the workflow. You can use basic regular expressions to match multiple paths, e.g. `apps/mobile/**`. By default changes to any path will trigger the workflow."
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "opened",
                      "reopened",
                      "synchronize",
                      "labeled"
                    ]
                  },
                  "default": [
                    "opened",
                    "reopened",
                    "synchronize"
                  ],
                  "description": "Describes the types of pull request events that will trigger the workflow. By default the workflow will be triggered by pull_request.opened, pull_request.reopened and pull_request.synchronize events.",
                  "markdownDescription": "Describes the types of pull request events that will trigger the workflow. By default the workflow will be triggered by pull_request.opened, pull_request.reopened and pull_request.synchronize events."
                }
              },
              "additionalProperties": false,
              "description": "If provided, the workflow will be triggered on updates to GitHub pull request events pointing as target to the specified branches.",
              "markdownDescription": "If provided, the workflow will be triggered on updates to GitHub pull request events pointing as target to the specified branches."
            },
            "pull_request_labeled": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of labels that, assigned to a pull request, will trigger this workflow.",
                  "markdownDescription": "List of labels that, assigned to a pull request, will trigger this workflow."
                },
                {
                  "type": "object",
                  "properties": {
                    "labels": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "default": [],
                      "description": "If a given pull request is labeled with a label matching any of the entries here, a new workflow will be started. Example: if you specify \"preview\" here, adding a \"preview\" label to the pull request will start a workflow, but adding other labels will not.",
                      "markdownDescription": "If a given pull request is labeled with a label matching any of the entries here, a new workflow will be started. Example: if you specify \"preview\" here, adding a \"preview\" label to the pull request will start a workflow, but adding other labels will not."
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "description": "If provided, the workflow will be triggered when the pull request is labeled with any label matching the specified labels.",
              "markdownDescription": "If provided, the workflow will be triggered when the pull request is labeled with any label matching the specified labels."
            },
            "schedule": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cron": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "cron"
                ],
                "additionalProperties": false
              },
              "description": "List of cron expressions to trigger the workflow.",
              "markdownDescription": "List of cron expressions to trigger the workflow."
            }
          },
          "additionalProperties": false,
          "description": "Configuration for GitHub events that trigger the workflow.",
          "markdownDescription": "Configuration for GitHub events that trigger the workflow."
        },
        "jobs": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "build"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "platform": {
                        "type": "string",
                        "description": "Platform to build for.",
                        "markdownDescription": "Platform to build for."
                      },
                      "profile": {
                        "type": "string",
                        "default": "production",
                        "description": "Build profile name to use.",
                        "markdownDescription": "Build profile name to use."
                      }
                    },
                    "required": [
                      "platform"
                    ],
                    "additionalProperties": false
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\".",
                              "markdownDescription": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\"."
                            },
                            "if": {
                              "type": "string",
                              "description": "Expression that determines whether the step should run.",
                              "markdownDescription": "Expression that determines whether the step should run."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the step.",
                              "markdownDescription": "Name of the step."
                            },
                            "working_directory": {
                              "type": "string",
                              "description": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                              "markdownDescription": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                            },
                            "env": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Additional environment variables to set for the step.",
                              "markdownDescription": "Additional environment variables to set for the step."
                            },
                            "run": {
                              "type": "string",
                              "description": "Shell script to run in the step.",
                              "markdownDescription": "Shell script to run in the step."
                            },
                            "shell": {
                              "type": "string",
                              "description": "Shell to run the \"run\" command with.",
                              "markdownDescription": "Shell to run the \"run\" command with."
                            },
                            "outputs": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "uses": {
                              "not": {}
                            },
                            "with": {
                              "not": {}
                            }
                          },
                          "required": [
                            "run"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\".",
                              "markdownDescription": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\"."
                            },
                            "if": {
                              "type": "string",
                              "description": "Expression that determines whether the step should run.",
                              "markdownDescription": "Expression that determines whether the step should run."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the step.",
                              "markdownDescription": "Name of the step."
                            },
                            "working_directory": {
                              "type": "string",
                              "description": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                              "markdownDescription": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                            },
                            "env": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Additional environment variables to set for the step.",
                              "markdownDescription": "Additional environment variables to set for the step."
                            },
                            "uses": {
                              "type": "string",
                              "description": "Name of the function to use for this step. See https://docs.expo.dev/custom-builds/schema/#built-in-eas-functions for available functions.",
                              "markdownDescription": "Name of the function to use for this step. See https://docs.expo.dev/custom-builds/schema/#built-in-eas-functions for available functions."
                            },
                            "with": {
                              "type": "object",
                              "additionalProperties": {},
                              "description": "Inputs to the function.",
                              "markdownDescription": "Inputs to the function."
                            },
                            "run": {
                              "not": {}
                            },
                            "shell": {
                              "not": {}
                            },
                            "outputs": {
                              "not": {}
                            }
                          },
                          "required": [
                            "uses"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "description": "Custom build steps to run. If specified, they override custom build YAML config provided through eas.json.",
                    "markdownDescription": "Custom build steps to run. If specified, they override custom build YAML config provided through eas.json."
                  },
                  "outputs": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Mapping from steps outputs to job outputs.",
                    "markdownDescription": "Mapping from steps outputs to job outputs."
                  }
                },
                "required": [
                  "type",
                  "params"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "custom"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "image": {
                    "type": "string",
                    "default": "auto",
                    "description": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images.",
                    "markdownDescription": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images."
                  },
                  "runs_on": {
                    "type": "string",
                    "enum": [
                      "linux-medium",
                      "linux-large",
                      "macos-medium",
                      "macos-large",
                      "linux-medium-nested-virtualization",
                      "linux-large-nested-virtualization"
                    ],
                    "description": "Runner to use for the job.",
                    "markdownDescription": "Runner to use for the job.",
                    "default": "linux-medium"
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  },
                  "defaults": {
                    "type": "object",
                    "properties": {
                      "run": {
                        "type": "object",
                        "properties": {
                          "working_directory": {
                            "type": "string",
                            "description": "Working directory to run the script in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                            "markdownDescription": "Working directory to run the script in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\".",
                              "markdownDescription": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\"."
                            },
                            "if": {
                              "type": "string",
                              "description": "Expression that determines whether the step should run.",
                              "markdownDescription": "Expression that determines whether the step should run."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the step.",
                              "markdownDescription": "Name of the step."
                            },
                            "working_directory": {
                              "type": "string",
                              "description": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                              "markdownDescription": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                            },
                            "env": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Additional environment variables to set for the step.",
                              "markdownDescription": "Additional environment variables to set for the step."
                            },
                            "run": {
                              "type": "string",
                              "description": "Shell script to run in the step.",
                              "markdownDescription": "Shell script to run in the step."
                            },
                            "shell": {
                              "type": "string",
                              "description": "Shell to run the \"run\" command with.",
                              "markdownDescription": "Shell to run the \"run\" command with."
                            },
                            "outputs": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "uses": {
                              "not": {}
                            },
                            "with": {
                              "not": {}
                            }
                          },
                          "required": [
                            "run"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\".",
                              "markdownDescription": "ID of the step. Useful for later referencing the job's outputs. Example: step with id \"setup\" and an output \"platform\" will expose its value under \"steps.setup.outputs.platform\"."
                            },
                            "if": {
                              "type": "string",
                              "description": "Expression that determines whether the step should run.",
                              "markdownDescription": "Expression that determines whether the step should run."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the step.",
                              "markdownDescription": "Name of the step."
                            },
                            "working_directory": {
                              "type": "string",
                              "description": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                              "markdownDescription": "Working directory to run the step in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                            },
                            "env": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Additional environment variables to set for the step.",
                              "markdownDescription": "Additional environment variables to set for the step."
                            },
                            "uses": {
                              "type": "string",
                              "description": "Name of the function to use for this step. See https://docs.expo.dev/custom-builds/schema/#built-in-eas-functions for available functions.",
                              "markdownDescription": "Name of the function to use for this step. See https://docs.expo.dev/custom-builds/schema/#built-in-eas-functions for available functions."
                            },
                            "with": {
                              "type": "object",
                              "additionalProperties": {},
                              "description": "Inputs to the function.",
                              "markdownDescription": "Inputs to the function."
                            },
                            "run": {
                              "not": {}
                            },
                            "shell": {
                              "not": {}
                            },
                            "outputs": {
                              "not": {}
                            }
                          },
                          "required": [
                            "uses"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "description": "List of steps to run in the job.",
                    "markdownDescription": "List of steps to run in the job."
                  },
                  "outputs": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Mapping from steps outputs to job outputs.",
                    "markdownDescription": "Mapping from steps outputs to job outputs."
                  }
                },
                "required": [
                  "steps"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "deploy"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "alias": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Custom alias to assign to the new deployment.",
                        "markdownDescription": "Custom alias to assign to the new deployment."
                      },
                      "prod": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "allOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "description": "Create a new production deployment.",
                        "markdownDescription": "Create a new production deployment."
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "fingerprint"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "get-build"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "app_build_version": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "app_identifier": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "app_version": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "channel": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "distribution": {
                        "type": "string"
                      },
                      "fingerprint_hash": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "git_commit_hash": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "platform": {
                        "type": "string"
                      },
                      "profile": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "runtime_version": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "sdk_version": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "simulator": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "allOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "description": "Filters to find the build by.",
                    "markdownDescription": "Filters to find the build by."
                  }
                },
                "required": [
                  "type",
                  "params"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "maestro-cloud"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "image": {
                    "type": "string",
                    "default": "auto",
                    "description": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images.",
                    "markdownDescription": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "build_id": {
                        "type": "string",
                        "description": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\"",
                        "markdownDescription": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\""
                      },
                      "maestro_project_id": {
                        "type": "string",
                        "description": "ID of the Maestro project to use for the test. Go to \"Settings\" on https://app.maestro.dev/ to see the project ID.",
                        "markdownDescription": "ID of the Maestro project to use for the test. Go to \"Settings\" on https://app.maestro.dev/ to see the project ID."
                      },
                      "maestro_api_key": {
                        "type": "string",
                        "default": "$MAESTRO_CLOUD_API_KEY",
                        "description": "API key to use for the Maestro project. Go to \"Settings\" on https://app.maestro.dev/ to generate an API key. When not specified, MAESTRO_CLOUD_API_KEY environment variable will be used.",
                        "markdownDescription": "API key to use for the Maestro project. Go to \"Settings\" on https://app.maestro.dev/ to generate an API key. When not specified, MAESTRO_CLOUD_API_KEY environment variable will be used."
                      },
                      "flows": {
                        "type": "string",
                        "description": "Path to a Maestro test file or a directory containing the files. Corresponds to the `--flows` flag in `maestro cloud`.",
                        "markdownDescription": "Path to a Maestro test file or a directory containing the files. Corresponds to the `--flows` flag in `maestro cloud`."
                      },
                      "include_tags": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ],
                        "description": "Tags to include in the tests. Will be passed to Maestro as `--include-tags`.",
                        "markdownDescription": "Tags to include in the tests. Will be passed to Maestro as `--include-tags`."
                      },
                      "exclude_tags": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ],
                        "description": "Tags to exclude from the tests. Will be passed to Maestro as `--exclude-tags`.",
                        "markdownDescription": "Tags to exclude from the tests. Will be passed to Maestro as `--exclude-tags`."
                      },
                      "maestro_version": {
                        "type": "string",
                        "description": "Version of Maestro to use for the tests. If not provided, the latest version will be used.",
                        "markdownDescription": "Version of Maestro to use for the tests. If not provided, the latest version will be used."
                      },
                      "android_api_level": {
                        "allOf": [
                          {
                            "type": [
                              "number",
                              "string"
                            ]
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Android API level to use for the tests. Corresponds to the `--android-api-level` flag in `maestro cloud`.",
                        "markdownDescription": "Android API level to use for the tests. Corresponds to the `--android-api-level` flag in `maestro cloud`."
                      },
                      "maestro_config": {
                        "type": "string",
                        "description": "Optional path to a Maestro `config.yaml` file. Corresponds to the `--config` flag in `maestro cloud`.",
                        "markdownDescription": "Optional path to a Maestro `config.yaml` file. Corresponds to the `--config` flag in `maestro cloud`."
                      },
                      "device_locale": {
                        "type": "string",
                        "description": "Locale to use for the tests. Corresponds to the `--device-locale` flag in `maestro cloud`.",
                        "markdownDescription": "Locale to use for the tests. Corresponds to the `--device-locale` flag in `maestro cloud`."
                      },
                      "device_model": {
                        "type": "string",
                        "description": "Model of the device to use for the tests. Corresponds to the `--device-model` flag in `maestro cloud`. Run `maestro cloud --help` for an up-to-date list of supported values.",
                        "markdownDescription": "Model of the device to use for the tests. Corresponds to the `--device-model` flag in `maestro cloud`. Run `maestro cloud --help` for an up-to-date list of supported values."
                      },
                      "device_os": {
                        "type": "string",
                        "description": "OS of the device to use for the tests. Corresponds to the `--device-os` flag in `maestro cloud`. Run `maestro cloud --help` for an up-to-date list of supported values.",
                        "markdownDescription": "OS of the device to use for the tests. Corresponds to the `--device-os` flag in `maestro cloud`. Run `maestro cloud --help` for an up-to-date list of supported values."
                      },
                      "skip_build_check": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "allOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "description": "Skip validation of the build (whether an iOS build is a simulator build).",
                        "markdownDescription": "Skip validation of the build (whether an iOS build is a simulator build)."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name for the Maestro Cloud upload. Corresponds to the `--name` flag in `maestro cloud`.",
                        "markdownDescription": "Name for the Maestro Cloud upload. Corresponds to the `--name` flag in `maestro cloud`."
                      },
                      "branch": {
                        "type": "string",
                        "description": "Override for the branch the Maestro Cloud upload originated from. By default, if the workflow run has been triggered from GitHub, the branch of the workflow run will be used. Corresponds to the `--branch` flag in `maestro cloud`.",
                        "markdownDescription": "Override for the branch the Maestro Cloud upload originated from. By default, if the workflow run has been triggered from GitHub, the branch of the workflow run will be used. Corresponds to the `--branch` flag in `maestro cloud`."
                      },
                      "async": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "allOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "description": "Run the Maestro Cloud tests asynchronously. If true, the status of the job will only denote whether the upload was successful, *not* whether the tests succeeded. Corresponds to the `--async` flag in `maestro cloud`.",
                        "markdownDescription": "Run the Maestro Cloud tests asynchronously. If true, the status of the job will only denote whether the upload was successful, *not* whether the tests succeeded. Corresponds to the `--async` flag in `maestro cloud`."
                      }
                    },
                    "required": [
                      "build_id",
                      "maestro_project_id",
                      "flows"
                    ],
                    "additionalProperties": false
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  },
                  "runs_on": {
                    "type": "string",
                    "enum": [
                      "linux-medium",
                      "linux-large",
                      "macos-medium",
                      "macos-large",
                      "linux-medium-nested-virtualization",
                      "linux-large-nested-virtualization"
                    ],
                    "description": "Runner to use for the job.",
                    "markdownDescription": "Runner to use for the job."
                  }
                },
                "required": [
                  "type",
                  "params"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "maestro"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "image": {
                    "type": "string",
                    "default": "auto",
                    "description": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images.",
                    "markdownDescription": "VM image to use for the job. See https://docs.expo.dev/build-reference/infrastructure/ for available images."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "build_id": {
                        "type": "string",
                        "description": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\"",
                        "markdownDescription": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\""
                      },
                      "flow_path": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ],
                        "description": "Path (or a list of paths)to the Maestro test file(s).",
                        "markdownDescription": "Path (or a list of paths)to the Maestro test file(s)."
                      },
                      "record_screen": {
                        "type": "boolean",
                        "default": false,
                        "description": "Upload a screen recording of the tests.",
                        "markdownDescription": "Upload a screen recording of the tests."
                      },
                      "shards": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "description": "Number of shards to split the tests into.",
                        "markdownDescription": "Number of shards to split the tests into."
                      },
                      "retries": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "default": 1,
                        "description": "Number of times to retry the tests if they fail.",
                        "markdownDescription": "Number of times to retry the tests if they fail."
                      },
                      "include_tags": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ],
                        "description": "Tags to include in the tests. Will be passed to Maestro as `--include-tags`.",
                        "markdownDescription": "Tags to include in the tests. Will be passed to Maestro as `--include-tags`."
                      },
                      "exclude_tags": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ],
                        "description": "Tags to exclude from the tests. Will be passed to Maestro as `--exclude-tags`.",
                        "markdownDescription": "Tags to exclude from the tests. Will be passed to Maestro as `--exclude-tags`."
                      },
                      "maestro_version": {
                        "type": "string",
                        "description": "Version of Maestro to use for the tests. If not provided, the latest version will be used.",
                        "markdownDescription": "Version of Maestro to use for the tests. If not provided, the latest version will be used."
                      },
                      "output_format": {
                        "type": "string",
                        "enum": [
                          "junit"
                        ],
                        "description": "Maestro test report format. Will be passed to Maestro as `--format`.",
                        "markdownDescription": "Maestro test report format. Will be passed to Maestro as `--format`."
                      },
                      "android_system_image_package": {
                        "type": "string",
                        "description": "Android emulator system image package to use. Run `sdkmanager --list` on your machine to list available packages. Choose an `x86_64` variant. Examples: `system-images;android-36;google_apis;x86_64`, `system-images;android-35-ext15;google_apis_playstore;x86_64`.",
                        "markdownDescription": "Android emulator system image package to use. Run `sdkmanager --list` on your machine to list available packages. Choose an `x86_64` variant. Examples: `system-images;android-36;google_apis;x86_64`, `system-images;android-35-ext15;google_apis_playstore;x86_64`."
                      },
                      "device_identifier": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "android": {
                                "type": "string",
                                "description": "Android emulator device identifier. E.g. \"pixel_6\".",
                                "markdownDescription": "Android emulator device identifier. E.g. \"pixel_6\"."
                              },
                              "ios": {
                                "type": "string",
                                "description": "iOS Simulator device identifier. E.g. \"iPhone 16\"",
                                "markdownDescription": "iOS Simulator device identifier. E.g. \"iPhone 16\""
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "anyOf": [
                              {
                                "not": {}
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Device identifier to emulate / simulate. Make sure to use value appropriate for the runtime platform. E.g. \"iPhone 16\" for iOS, \"pixel_6\" for Android.",
                            "markdownDescription": "Device identifier to emulate / simulate. Make sure to use value appropriate for the runtime platform. E.g. \"iPhone 16\" for iOS, \"pixel_6\" for Android."
                          }
                        ],
                        "description": "Device identifier to emulate / simulate. Run `adb devices` on your machine to list available devices.",
                        "markdownDescription": "Device identifier to emulate / simulate. Run `adb devices` on your machine to list available devices."
                      },
                      "skip_build_check": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "allOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "description": "Skip validation of the build (whether an iOS build is a simulator build).",
                        "markdownDescription": "Skip validation of the build (whether an iOS build is a simulator build)."
                      },
                      "reuse_devices": {
                        "anyOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "allOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "default": true,
                        "description": "Reuse a single set of devices for all the tests. If false, each flow in `flow_path` will be run on a clean device. Disabling this is very experimental and some features may not work.",
                        "markdownDescription": "Reuse a single set of devices for all the tests. If false, each flow in `flow_path` will be run on a clean device. Disabling this is very experimental and some features may not work."
                      }
                    },
                    "required": [
                      "build_id",
                      "flow_path"
                    ],
                    "additionalProperties": false
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  },
                  "runs_on": {
                    "type": "string",
                    "enum": [
                      "linux-medium",
                      "linux-large",
                      "macos-medium",
                      "macos-large",
                      "linux-medium-nested-virtualization",
                      "linux-large-nested-virtualization"
                    ],
                    "description": "Runner to use for the job.",
                    "markdownDescription": "Runner to use for the job."
                  }
                },
                "required": [
                  "type",
                  "params"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "require-approval"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "submit"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "profile": {
                        "type": "string",
                        "default": "production",
                        "description": "Name of the submit profile to use.",
                        "markdownDescription": "Name of the submit profile to use."
                      },
                      "build_id": {
                        "type": "string",
                        "description": "ID of the build to submit. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\"",
                        "markdownDescription": "ID of the build to submit. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\""
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "TestFlight internal group names to add the build to.",
                        "markdownDescription": "TestFlight internal group names to add the build to."
                      }
                    },
                    "required": [
                      "build_id"
                    ],
                    "additionalProperties": false
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  }
                },
                "required": [
                  "type",
                  "params"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "update"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "Message to use for the update. If not provided, the commit message will be used.",
                        "markdownDescription": "Message to use for the update. If not provided, the commit message will be used."
                      },
                      "platform": {
                        "type": "string",
                        "description": "Platform to use for the update (\"android\", \"ios\" or \"all\").",
                        "markdownDescription": "Platform to use for the update (\"android\", \"ios\" or \"all\")."
                      },
                      "branch": {
                        "type": "string",
                        "description": "Branch to use for the update. If not provided, the branch from the workflow run will be used. For manually run workflows you need to provide a value. Example: \"${{ github.ref_name || 'testing-new-workflow' }}\". Provide *either* a branch or a channel, not both.",
                        "markdownDescription": "Branch to use for the update. If not provided, the branch from the workflow run will be used. For manually run workflows you need to provide a value. Example: \"${{ github.ref_name || 'testing-new-workflow' }}\". Provide *either* a branch or a channel, not both."
                      },
                      "channel": {
                        "type": "string",
                        "description": "Channel to use for the update. Provide *either* a branch or a channel, not both.",
                        "markdownDescription": "Channel to use for the update. Provide *either* a branch or a channel, not both."
                      }
                    },
                    "additionalProperties": false,
                    "default": {}
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "slack"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "params": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "webhook_url": {
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "required": [
                          "webhook_url"
                        ]
                      },
                      {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "payload": {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                              }
                            },
                            "required": [
                              "payload"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "params"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "doc"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "md": {
                        "type": "string",
                        "description": "Markdown content to render.",
                        "markdownDescription": "Markdown content to render."
                      }
                    },
                    "required": [
                      "md"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "type",
                  "params"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "allOf": [
                      {
                        "type": [
                          "number",
                          "string"
                        ]
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "The name of the job. Displayed on the workflow run page.",
                    "markdownDescription": "The name of the job. Displayed on the workflow run page."
                  },
                  "type": {
                    "type": "string",
                    "const": "repack"
                  },
                  "if": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "string",
                        "maxLength": 250
                      }
                    ],
                    "description": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details.",
                    "markdownDescription": "If provided and evaluates to a falsey value, job will not run. Instead, it will get created with \"skipped\" status. See https://docs.expo.dev/eas-workflows/control-flow/#if for more details."
                  },
                  "needs": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed.",
                    "markdownDescription": "List of keys of dependant jobs. The job will only run if all of the dependencies have successfully completed."
                  },
                  "after": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": [],
                    "description": "List of keys of jobs that are required to complete before this job can run.",
                    "markdownDescription": "List of keys of jobs that are required to complete before this job can run."
                  },
                  "environment": {
                    "type": "string",
                    "enum": [
                      "production",
                      "preview",
                      "development"
                    ],
                    "description": "The environment to run the job in.",
                    "markdownDescription": "The environment to run the job in."
                  },
                  "env": {
                    "type": "object",
                    "additionalProperties": {
                      "allOf": [
                        {
                          "type": [
                            "number",
                            "string"
                          ]
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "default": {},
                    "description": "Environment variables to provide to the job.",
                    "markdownDescription": "Environment variables to provide to the job."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "build_id": {
                        "type": "string",
                        "description": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\"",
                        "markdownDescription": "ID of the build to use for the job. Most probably you want to reference another job's output, like \"${{ needs.some_job.outputs.build_id }}\""
                      },
                      "profile": {
                        "type": "string",
                        "description": "Build profile name to use. By default uses the same profile as the source build.",
                        "markdownDescription": "Build profile name to use. By default uses the same profile as the source build."
                      },
                      "embed_bundle_assets": {
                        "type": "boolean",
                        "description": "Whether to embed bundle assets into the repacked app. Defaults to the detected build type by the source app.",
                        "markdownDescription": "Whether to embed bundle assets into the repacked app. Defaults to the detected build type by the source app."
                      }
                    },
                    "required": [
                      "build_id"
                    ],
                    "additionalProperties": false
                  },
                  "outputs": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Job outputs.",
                    "markdownDescription": "Job outputs."
                  }
                },
                "required": [
                  "type",
                  "params"
                ],
                "additionalProperties": false
              }
            ]
          },
          "description": "Configuration of jobs to run in the workflow.",
          "markdownDescription": "Configuration of jobs to run in the workflow."
        },
        "name": {
          "allOf": [
            {
              "type": [
                "number",
                "string"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "The name of the workflow. Displayed on the workflow page.",
          "markdownDescription": "The name of the workflow. Displayed on the workflow page."
        },
        "defaults": {
          "type": "object",
          "properties": {
            "run": {
              "type": "object",
              "properties": {
                "working_directory": {
                  "type": "string",
                  "description": "Default working directory to run the scripts in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root.",
                  "markdownDescription": "Default working directory to run the scripts in. Relative paths like \"./assets\" or \"assets\" are resolved from the app's base directory. Absolute paths like \"/apps/mobile\" are resolved from the repository root."
                }
              },
              "additionalProperties": false
            },
            "tools": {
              "type": "object",
              "properties": {
                "node": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Version of Node.js.",
                  "markdownDescription": "Version of Node.js."
                },
                "yarn": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Version of Yarn.",
                  "markdownDescription": "Version of Yarn."
                },
                "corepack": {
                  "type": "boolean",
                  "description": "Whether to enable corepack.",
                  "markdownDescription": "Whether to enable corepack."
                },
                "pnpm": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Version of pnpm.",
                  "markdownDescription": "Version of pnpm."
                },
                "bun": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Version of Bun.",
                  "markdownDescription": "Version of Bun."
                },
                "ndk": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Version of Android NDK.",
                  "markdownDescription": "Version of Android NDK."
                },
                "bundler": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Version of Bundler.",
                  "markdownDescription": "Version of Bundler."
                },
                "fastlane": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Version of fastlane.",
                  "markdownDescription": "Version of fastlane."
                },
                "cocoapods": {
                  "allOf": [
                    {
                      "type": [
                        "number",
                        "string"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Version of CocoaPods.",
                  "markdownDescription": "Version of CocoaPods."
                }
              },
              "additionalProperties": false,
              "description": "Specific versions of tools that should be used for jobs defined in this workflow configuration. Follow each tool's documentation for available values.",
              "markdownDescription": "Specific versions of tools that should be used for jobs defined in this workflow configuration. Follow each tool's documentation for available values."
            }
          },
          "additionalProperties": false
        },
        "concurrency": {
          "type": "object",
          "properties": {
            "cancel_in_progress": {
              "type": "boolean",
              "const": true,
              "description": "If true, new workflow runs started from GitHub will cancel current in-progress runs for the same branch.",
              "markdownDescription": "If true, new workflow runs started from GitHub will cancel current in-progress runs for the same branch."
            },
            "group": {
              "type": "string",
              "const": "${{ workflow.filename }}-${{ github.ref }}",
              "description": "Custom concurrency groups are not yet supported. Set this placeholder value to ensure that your workflow remains compatible when custom groups support is available.",
              "markdownDescription": "Custom concurrency groups are not yet supported. Set this placeholder value to ensure that your workflow remains compatible when custom groups support is available."
            }
          },
          "required": [
            "cancel_in_progress",
            "group"
          ],
          "additionalProperties": false,
          "description": "Configuration for concurrency control. Currently only allows setting cancel_in_progress for same-branch workflows.",
          "markdownDescription": "Configuration for concurrency control. Currently only allows setting cancel_in_progress for same-branch workflows."
        }
      },
      "required": [
        "jobs"
      ],
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "All configurable EAS Workflow properties. Learn more: https://docs.expo.dev/eas/workflows/syntax/",
  "markdownDescription": "All configurable EAS Workflow properties. [Learn more](https://docs.expo.dev/eas/workflows/syntax/)"
}